#ifndef __DATAFORMAT_D_MC__
#define __DATAFORMAT_D_MC__
// #include "src/common/interface/commonHeader.hxx"
#include <TTree.h>
#include <TBranch.h>
#include <iostream>
const int __MAXCAND_MC__ = 500000;

namespace DataFormat{
    struct simpleDStarDataTreeevt{
        protected:
            static const int MAXCAND = __MAXCAND_MC__;
        public :
   Int_t           Ntrkoffline;
   Int_t           Npixel;
   Float_t         HFsumETPlus;
   Float_t         HFsumETMinus;
   Float_t         ZDCPlus;
   Float_t         ZDCMinus;
   Float_t         bestvtxX;
   Float_t         bestvtxY;
   Float_t         bestvtxZ;
   Int_t           candSize;
   Float_t         pT[MAXCAND];   //[candSize]
   Float_t         y[MAXCAND];   //[candSize]
   Float_t         eta[MAXCAND];   //[candSize]
   Float_t         phi[MAXCAND];   //[candSize]
   Float_t         mass[MAXCAND];   //[candSize]
   Float_t         flavor[MAXCAND];   //[candSize]
   Float_t         VtxProb[MAXCAND];   //[candSize]
   Float_t         VtxChi2[MAXCAND];   //[candSize]
   Float_t         VtxNDF[MAXCAND];   //[candSize]
   Float_t         _3DCosPointingAngle[MAXCAND];   //[candSize]
   Float_t         _3DPointingAngle[MAXCAND];   //[candSize]
   Float_t         _2DCosPointingAngle[MAXCAND];   //[candSize]
   Float_t         _2DPointingAngle[MAXCAND];   //[candSize]
   Float_t         _3DDecayLengthSignificance[MAXCAND];   //[candSize]
   Float_t         _3DDecayLength[MAXCAND];   //[candSize]
   Float_t         _2DDecayLengthSignificance[MAXCAND];   //[candSize]
   Float_t         _2DDecayLength[MAXCAND];   //[candSize]
   Float_t         massDaugther1[MAXCAND];   //[candSize]
   Float_t         pTD1[MAXCAND];   //[candSize]
   Float_t         EtaD1[MAXCAND];   //[candSize]
   Float_t         PhiD1[MAXCAND];   //[candSize]
   Float_t         VtxProbDaugther1[MAXCAND];   //[candSize]
   Float_t         VtxChi2Daugther1[MAXCAND];   //[candSize]
   Float_t         VtxNDFDaugther1[MAXCAND];   //[candSize]
   Float_t         _3DCosPointingAngleDaugther1[MAXCAND];   //[candSize]
   Float_t         _3DPointingAngleDaugther1[MAXCAND];   //[candSize]
   Float_t         _2DCosPointingAngleDaugther1[MAXCAND];   //[candSize]
   Float_t         _2DPointingAngleDaugther1[MAXCAND];   //[candSize]
   Float_t         _3DDecayLengthSignificanceDaugther1[MAXCAND];   //[candSize]
   Float_t         _3DDecayLengthDaugther1[MAXCAND];   //[candSize]
   Float_t         _3DDecayLengthErrorDaugther1[MAXCAND];   //[candSize]
   Float_t         _2DDecayLengthSignificanceDaugther1[MAXCAND];   //[candSize]
   Float_t         zDCASignificanceDaugther2[MAXCAND];   //[candSize]
   Float_t         xyDCASignificanceDaugther2[MAXCAND];   //[candSize]
   Float_t         NHitD2[MAXCAND];   //[candSize]
   Bool_t          HighPurityDaugther2[MAXCAND];   //[candSize]
   Float_t         pTD2[MAXCAND];   //[candSize]
   Float_t         EtaD2[MAXCAND];   //[candSize]
   Float_t         PhiD2[MAXCAND];   //[candSize]
   Float_t         pTerrD1[MAXCAND];   //[candSize]
   Float_t         pTerrD2[MAXCAND];   //[candSize]
   Float_t         dedxHarmonic2D2[MAXCAND];   //[candSize]
   Float_t         zDCASignificanceGrandDaugther1[MAXCAND];   //[candSize]
   Float_t         zDCASignificanceGrandDaugther2[MAXCAND];   //[candSize]
   Float_t         xyDCASignificanceGrandDaugther1[MAXCAND];   //[candSize]
   Float_t         xyDCASignificanceGrandDaugther2[MAXCAND];   //[candSize]
   Float_t         NHitGrandD1[MAXCAND];   //[candSize]
   Float_t         NHitGrandD2[MAXCAND];   //[candSize]
   Bool_t          HighPurityGrandDaugther1[MAXCAND];   //[candSize]
   Bool_t          HighPurityGrandDaugther2[MAXCAND];   //[candSize]
   Float_t         pTGrandD1[MAXCAND];   //[candSize]
   Float_t         pTGrandD2[MAXCAND];   //[candSize]
   Float_t         pTerrGrandD1[MAXCAND];   //[candSize]
   Float_t         pTerrGrandD2[MAXCAND];   //[candSize]
   Float_t         EtaGrandD1[MAXCAND];   //[candSize]
   Float_t         EtaGrandD2[MAXCAND];   //[candSize]
   Float_t         dedxHarmonic2GrandD1[MAXCAND];   //[candSize]
   Float_t         dedxHarmonic2GrandD2[MAXCAND];   //[candSize]
   TBranch        *b_Ntrkoffline;   //!
   TBranch        *b_Npixel;   //!
   TBranch        *b_HFsumETPlus;   //!
   TBranch        *b_HFsumETMinus;   //!
   TBranch        *b_ZDCPlus;   //!
   TBranch        *b_ZDCMinus;   //!
   TBranch        *b_bestvtxX;   //!
   TBranch        *b_bestvtxY;   //!
   TBranch        *b_bestvtxZ;   //!
   TBranch        *b_candSize;   //!
   TBranch        *b_pT;   //!
   TBranch        *b_y;   //!
   TBranch        *b_eta;   //!
   TBranch        *b_phi;   //!
   TBranch        *b_mass;   //!
   TBranch        *b_flavor;   //!
   TBranch        *b_VtxProb;   //!
   TBranch        *b_VtxChi2;   //!
   TBranch        *b_VtxNDF;   //!
   TBranch        *b_3DCosPointingAngle;   //!
   TBranch        *b_3DPointingAngle;   //!
   TBranch        *b_2DCosPointingAngle;   //!
   TBranch        *b_2DPointingAngle;   //!
   TBranch        *b_3DDecayLengthSignificance;   //!
   TBranch        *b_3DDecayLength;   //!
   TBranch        *b_2DDecayLengthSignificance;   //!
   TBranch        *b_2DDecayLength;   //!
   TBranch        *b_massDaugther1;   //!
   TBranch        *b_pTD1;   //!
   TBranch        *b_EtaD1;   //!
   TBranch        *b_PhiD1;   //!
   TBranch        *b_VtxProbDaugther1;   //!
   TBranch        *b_VtxChi2Daugther1;   //!
   TBranch        *b_VtxNDFDaugther1;   //!
   TBranch        *b_3DCosPointingAngleDaugther1;   //!
   TBranch        *b_3DPointingAngleDaugther1;   //!
   TBranch        *b_2DCosPointingAngleDaugther1;   //!
   TBranch        *b_2DPointingAngleDaugther1;   //!
   TBranch        *b_3DDecayLengthSignificanceDaugther1;   //!
   TBranch        *b_3DDecayLengthDaugther1;   //!
   TBranch        *b_3DDecayLengthErrorDaugther1;   //!
   TBranch        *b_2DDecayLengthSignificanceDaugther1;   //!
   TBranch        *b_zDCASignificanceDaugther2;   //!
   TBranch        *b_xyDCASignificanceDaugther2;   //!
   TBranch        *b_NHitD2;   //!
   TBranch        *b_HighPurityDaugther2;   //!
   TBranch        *b_pTD2;   //!
   TBranch        *b_EtaD2;   //!
   TBranch        *b_PhiD2;   //!
   TBranch        *b_pTerrD1;   //!
   TBranch        *b_pTerrD2;   //!
   TBranch        *b_dedxHarmonic2D2;   //!
   TBranch        *b_zDCASignificanceGrandDaugther1;   //!
   TBranch        *b_zDCASignificanceGrandDaugther2;   //!
   TBranch        *b_xyDCASignificanceGrandDaugther1;   //!
   TBranch        *b_xyDCASignificanceGrandDaugther2;   //!
   TBranch        *b_NHitGrandD1;   //!
   TBranch        *b_NHitGrandD2;   //!
   TBranch        *b_HighPurityGrandDaugther1;   //!
   TBranch        *b_HighPurityGrandDaugther2;   //!
   TBranch        *b_pTGrandD1;   //!
   TBranch        *b_pTGrandD2;   //!
   TBranch        *b_pTerrGrandD1;   //!
   TBranch        *b_pTerrGrandD2;   //!
   TBranch        *b_EtaGrandD1;   //!
   TBranch        *b_EtaGrandD2;   //!
   TBranch        *b_dedxHarmonic2GrandD1;   //!
   TBranch        *b_dedxHarmonic2GrandD2;   //! 
    simpleDStarDataTreeevt* getEventHandle(){ return this;}
    template <typename T>
        void setTree(T *fChain){
   fChain->SetBranchAddress("Ntrkoffline", &Ntrkoffline, &b_Ntrkoffline);
   fChain->SetBranchAddress("Npixel", &Npixel, &b_Npixel);
   fChain->SetBranchAddress("HFsumETPlus", &HFsumETPlus, &b_HFsumETPlus);
   fChain->SetBranchAddress("HFsumETMinus", &HFsumETMinus, &b_HFsumETMinus);
   fChain->SetBranchAddress("ZDCPlus", &ZDCPlus, &b_ZDCPlus);
   fChain->SetBranchAddress("ZDCMinus", &ZDCMinus, &b_ZDCMinus);
   fChain->SetBranchAddress("bestvtxX", &bestvtxX, &b_bestvtxX);
   fChain->SetBranchAddress("bestvtxY", &bestvtxY, &b_bestvtxY);
   fChain->SetBranchAddress("bestvtxZ", &bestvtxZ, &b_bestvtxZ);
   fChain->SetBranchAddress("candSize", &candSize, &b_candSize);
   fChain->SetBranchAddress("pT", pT, &b_pT);
   fChain->SetBranchAddress("y", y, &b_y);
   fChain->SetBranchAddress("eta", eta, &b_eta);
   fChain->SetBranchAddress("phi", phi, &b_phi);
   fChain->SetBranchAddress("mass", mass, &b_mass);
   fChain->SetBranchAddress("flavor", flavor, &b_flavor);
   fChain->SetBranchAddress("VtxProb", VtxProb, &b_VtxProb);
   fChain->SetBranchAddress("VtxChi2", VtxChi2, &b_VtxChi2);
   fChain->SetBranchAddress("VtxNDF", VtxNDF, &b_VtxNDF);
   fChain->SetBranchAddress("3DCosPointingAngle", _3DCosPointingAngle, &b_3DCosPointingAngle);
   fChain->SetBranchAddress("3DPointingAngle", _3DPointingAngle, &b_3DPointingAngle);
   fChain->SetBranchAddress("2DCosPointingAngle", _2DCosPointingAngle, &b_2DCosPointingAngle);
   fChain->SetBranchAddress("2DPointingAngle", _2DPointingAngle, &b_2DPointingAngle);
   fChain->SetBranchAddress("3DDecayLengthSignificance", _3DDecayLengthSignificance, &b_3DDecayLengthSignificance);
   fChain->SetBranchAddress("3DDecayLength", _3DDecayLength, &b_3DDecayLength);
   fChain->SetBranchAddress("2DDecayLengthSignificance", _2DDecayLengthSignificance, &b_2DDecayLengthSignificance);
   fChain->SetBranchAddress("2DDecayLength", _2DDecayLength, &b_2DDecayLength);
   fChain->SetBranchAddress("massDaugther1", massDaugther1, &b_massDaugther1);
   fChain->SetBranchAddress("pTD1", pTD1, &b_pTD1);
   fChain->SetBranchAddress("EtaD1", EtaD1, &b_EtaD1);
   fChain->SetBranchAddress("PhiD1", PhiD1, &b_PhiD1);
   fChain->SetBranchAddress("VtxProbDaugther1", VtxProbDaugther1, &b_VtxProbDaugther1);
   fChain->SetBranchAddress("VtxChi2Daugther1", VtxChi2Daugther1, &b_VtxChi2Daugther1);
   fChain->SetBranchAddress("VtxNDFDaugther1", VtxNDFDaugther1, &b_VtxNDFDaugther1);
   fChain->SetBranchAddress("3DCosPointingAngleDaugther1", _3DCosPointingAngleDaugther1, &b_3DCosPointingAngleDaugther1);
   fChain->SetBranchAddress("3DPointingAngleDaugther1", _3DPointingAngleDaugther1, &b_3DPointingAngleDaugther1);
   fChain->SetBranchAddress("2DCosPointingAngleDaugther1", _2DCosPointingAngleDaugther1, &b_2DCosPointingAngleDaugther1);
   fChain->SetBranchAddress("2DPointingAngleDaugther1", _2DPointingAngleDaugther1, &b_2DPointingAngleDaugther1);
   fChain->SetBranchAddress("3DDecayLengthSignificanceDaugther1", _3DDecayLengthSignificanceDaugther1, &b_3DDecayLengthSignificanceDaugther1);
   fChain->SetBranchAddress("3DDecayLengthDaugther1", _3DDecayLengthDaugther1, &b_3DDecayLengthDaugther1);
   fChain->SetBranchAddress("3DDecayLengthErrorDaugther1", _3DDecayLengthErrorDaugther1, &b_3DDecayLengthErrorDaugther1);
   fChain->SetBranchAddress("2DDecayLengthSignificanceDaugther1", _2DDecayLengthSignificanceDaugther1, &b_2DDecayLengthSignificanceDaugther1);
   fChain->SetBranchAddress("zDCASignificanceDaugther2", zDCASignificanceDaugther2, &b_zDCASignificanceDaugther2);
   fChain->SetBranchAddress("xyDCASignificanceDaugther2", xyDCASignificanceDaugther2, &b_xyDCASignificanceDaugther2);
   fChain->SetBranchAddress("NHitD2", NHitD2, &b_NHitD2);
   fChain->SetBranchAddress("HighPurityDaugther2", HighPurityDaugther2, &b_HighPurityDaugther2);
   fChain->SetBranchAddress("pTD2", pTD2, &b_pTD2);
   fChain->SetBranchAddress("EtaD2", EtaD2, &b_EtaD2);
   fChain->SetBranchAddress("PhiD2", PhiD2, &b_PhiD2);
   fChain->SetBranchAddress("pTerrD1", pTerrD1, &b_pTerrD1);
   fChain->SetBranchAddress("pTerrD2", pTerrD2, &b_pTerrD2);
   fChain->SetBranchAddress("dedxHarmonic2D2", dedxHarmonic2D2, &b_dedxHarmonic2D2);
   fChain->SetBranchAddress("zDCASignificanceGrandDaugther1", zDCASignificanceGrandDaugther1, &b_zDCASignificanceGrandDaugther1);
   fChain->SetBranchAddress("zDCASignificanceGrandDaugther2", zDCASignificanceGrandDaugther2, &b_zDCASignificanceGrandDaugther2);
   fChain->SetBranchAddress("xyDCASignificanceGrandDaugther1", xyDCASignificanceGrandDaugther1, &b_xyDCASignificanceGrandDaugther1);
   fChain->SetBranchAddress("xyDCASignificanceGrandDaugther2", xyDCASignificanceGrandDaugther2, &b_xyDCASignificanceGrandDaugther2);
   fChain->SetBranchAddress("NHitGrandD1", NHitGrandD1, &b_NHitGrandD1);
   fChain->SetBranchAddress("NHitGrandD2", NHitGrandD2, &b_NHitGrandD2);
   fChain->SetBranchAddress("HighPurityGrandDaugther1", HighPurityGrandDaugther1, &b_HighPurityGrandDaugther1);
   fChain->SetBranchAddress("HighPurityGrandDaugther2", HighPurityGrandDaugther2, &b_HighPurityGrandDaugther2);
   fChain->SetBranchAddress("pTGrandD1", pTGrandD1, &b_pTGrandD1);
   fChain->SetBranchAddress("pTGrandD2", pTGrandD2, &b_pTGrandD2);
   fChain->SetBranchAddress("pTerrGrandD1", pTerrGrandD1, &b_pTerrGrandD1);
   fChain->SetBranchAddress("pTerrGrandD2", pTerrGrandD2, &b_pTerrGrandD2);
   fChain->SetBranchAddress("EtaGrandD1", EtaGrandD1, &b_EtaGrandD1);
   fChain->SetBranchAddress("EtaGrandD2", EtaGrandD2, &b_EtaGrandD2);
   fChain->SetBranchAddress("dedxHarmonic2GrandD1", dedxHarmonic2GrandD1, &b_dedxHarmonic2GrandD1);
   fChain->SetBranchAddress("dedxHarmonic2GrandD2", dedxHarmonic2GrandD2, &b_dedxHarmonic2GrandD2);
        };
    };
    struct simpleDStarMCTreeevt{
        protected:
            static const int MAXCAND = __MAXCAND_MC__;
        public:
            int   Ntrkoffline;
            int Npixel;
            float HFsumETPlus;
            float HFsumETMinus;
            float ZDCPlus;
            float ZDCMinus;
            float bestvtxX;
            float bestvtxY;
            float bestvtxZ;
            int candSize;
            float pT[MAXCAND];
            float y[MAXCAND];
            float eta[MAXCAND];
            float phi[MAXCAND];
            float mass[MAXCAND];
            float flavor[MAXCAND];
            float VtxProb[MAXCAND];
            float VtxChi2[MAXCAND];
            float VtxNDF[MAXCAND];
            float _3DCosPointingAngle[MAXCAND];
            float _3DPointingAngle[MAXCAND];
            float _2DCosPointingAngle[MAXCAND];
            float _2DPointingAngle[MAXCAND];
            float _3DDecayLengthSignificance[MAXCAND];
            float _3DDecayLength[MAXCAND];
            float _2DDecayLengthSignificance[MAXCAND];
            float _2DDecayLength[MAXCAND];
            bool isSwap[MAXCAND];
            int idmom_reco[MAXCAND];
            int idBAnc_reco[MAXCAND];
            bool matchGEN[MAXCAND];
            float matchGen3DPointingAngle[MAXCAND];
            float matchGen2DPointingAngle[MAXCAND];
            float matchGen3DDecayLength[MAXCAND];
            float matchGen2DDecayLength[MAXCAND];
            float matchgen_D0pT[MAXCAND];
            float matchgen_D0eta[MAXCAND];
            float matchgen_D0phi[MAXCAND];
            float matchgen_D0mass[MAXCAND];
            float matchgen_D0y[MAXCAND];
            float matchgen_D0charge[MAXCAND];
            float matchgen_D0pdgId[MAXCAND];
            float matchGen_D0pT[MAXCAND];
            float matchGen_D0eta[MAXCAND];
            float matchGen_D0phi[MAXCAND];
            float matchGen_D0mass[MAXCAND];
            float matchGen_D0y[MAXCAND];
            float matchGen_D0charge[MAXCAND];
            float matchGen_D0pdgId[MAXCAND];
            float matchGen_D0Dau1_pT[MAXCAND];
            float matchGen_D0Dau1_eta[MAXCAND];
            float matchGen_D0Dau1_phi[MAXCAND];
            float matchGen_D0Dau1_mass[MAXCAND];
            float matchGen_D0Dau1_y[MAXCAND];
            float matchGen_D0Dau1_charge[MAXCAND];
            float matchGen_D0Dau1_pdgId[MAXCAND];
            float matchGen_D0Dau2_pT[MAXCAND];
            float matchGen_D0Dau2_eta[MAXCAND];
            float matchGen_D0Dau2_phi[MAXCAND];
            float matchGen_D0Dau2_mass[MAXCAND];
            float matchGen_D0Dau2_y[MAXCAND];
            float matchGen_D0Dau2_charge[MAXCAND];
            float matchGen_D0Dau2_pdgId[MAXCAND];
            float matchGen_D1pT[MAXCAND];
            float matchGen_D1eta[MAXCAND];
            float matchGen_D1phi[MAXCAND];
            float matchGen_D1mass[MAXCAND];
            float matchGen_D1y[MAXCAND];
            float matchGen_D1charge[MAXCAND];
            float matchGen_D1pdgId[MAXCAND];
            float matchGen_D1decayLength2D_[MAXCAND];
            float matchGen_D1decayLength3D_[MAXCAND];
            float matchGen_D1angle2D_[MAXCAND];
            float matchGen_D1angle3D_[MAXCAND];
            float matchGen_D1ancestorId_[MAXCAND];
            float matchGen_D1ancestorFlavor_[MAXCAND];
            float massDaugther1[MAXCAND];
            float pTD1[MAXCAND];
            float EtaD1[MAXCAND];
            float PhiD1[MAXCAND];
            float VtxProbDaugther1[MAXCAND];
            float VtxChi2Daugther1[MAXCAND];
            float VtxNDFDaugther1[MAXCAND];
            float _3DCosPointingAngleDaugther1[MAXCAND];
            float _3DPointingAngleDaugther1[MAXCAND];
            float _2DCosPointingAngleDaugther1[MAXCAND];
            float _2DPointingAngleDaugther1[MAXCAND];
            float _3DDecayLengthSignificanceDaugther1[MAXCAND];
            float _3DDecayLengthDaugther1[MAXCAND];
            float _3DDecayLengthErrorDaugther1[MAXCAND];
            float _2DDecayLengthSignificanceDaugther1[MAXCAND];
            float zDCASignificanceDaugther2[MAXCAND];
            float xyDCASignificanceDaugther2[MAXCAND];
            float NHitD2[MAXCAND];
            bool HighPurityDaugther2[MAXCAND];
            float pTD2[MAXCAND];
            float EtaD2[MAXCAND];
            float PhiD2[MAXCAND];
            float pTerrD1[MAXCAND];
            float pTerrD2[MAXCAND];
            float dedxHarmonic2D2[MAXCAND];
            float zDCASignificanceGrandDaugther1[MAXCAND];
            float zDCASignificanceGrandDaugther2[MAXCAND];
            float xyDCASignificanceGrandDaugther1[MAXCAND];
            float xyDCASignificanceGrandDaugther2[MAXCAND];
            float NHitGrandD1[MAXCAND];
            float NHitGrandD2[MAXCAND];
            bool HighPurityGrandDaugther1[MAXCAND];
            bool HighPurityGrandDaugther2[MAXCAND];
            float pTGrandD1[MAXCAND];
            float pTGrandD2[MAXCAND];
            float pTerrGrandD1[MAXCAND];
            float pTerrGrandD2[MAXCAND];
            float EtaGrandD1[MAXCAND];
            float EtaGrandD2[MAXCAND];
            float dedxHarmonic2GrandD1[MAXCAND];
            float dedxHarmonic2GrandD2[MAXCAND];
            Int_t           candSize_gen;
   Float_t         gen_mass[MAXCAND];   //[candSize_gen]
   Float_t         gen_pT[MAXCAND];   //[candSize_gen]
   Float_t         gen_eta[MAXCAND];   //[candSize_gen]
   Float_t         gen_phi[MAXCAND];   //[candSize_gen]
   Float_t         gen_y[MAXCAND];   //[candSize_gen]
   Int_t           gen_status[MAXCAND];   //[candSize_gen]
   Int_t           gen_MotherID[MAXCAND];   //[candSize_gen]
   Int_t           gen_DauID1[MAXCAND];   //[candSize_gen]
   Int_t           gen_DauID2[MAXCAND];   //[candSize_gen]
   Int_t           gen_DauID3[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0pT[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0eta[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0phi[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0mass[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0y[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0charge[MAXCAND];   //[candSize_gen]
   Int_t         gen_D0pdgId[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0Dau1_pT[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0Dau1_eta[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0Dau1_phi[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0Dau1_mass[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0Dau1_y[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0Dau1_charge[MAXCAND];   //[candSize_gen]
   Int_t         gen_D0Dau1_pdgId[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0Dau2_pT[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0Dau2_eta[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0Dau2_phi[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0Dau2_mass[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0Dau2_y[MAXCAND];   //[candSize_gen]
   Float_t         gen_D0Dau2_charge[MAXCAND];   //[candSize_gen]
   Int_t         gen_D0Dau2_pdgId[MAXCAND];   //[candSize_gen]
   Float_t         gen_D1pT[MAXCAND];   //[candSize_gen]
   Float_t         gen_D1eta[MAXCAND];   //[candSize_gen]
   Float_t         gen_D1phi[MAXCAND];   //[candSize_gen]
   Float_t         gen_D1mass[MAXCAND];   //[candSize_gen]
   Float_t         gen_D1y[MAXCAND];   //[candSize_gen]
   Float_t         gen_D1charge[MAXCAND];   //[candSize_gen]
   Int_t         gen_D1pdgId[MAXCAND]; 
  TBranch        *b_candSize_gen;   //!
   TBranch        *b_gen_mass;   //!
   TBranch        *b_gen_pT;   //!
   TBranch        *b_gen_eta;   //!
   TBranch        *b_gen_phi;   //!
   TBranch        *b_gen_y;   //!
   TBranch        *b_gen_status;   //!
   TBranch        *b_gen_MotherID;   //!
   TBranch        *b_gen_DauID1;   //!
   TBranch        *b_gen_DauID2;   //!
   TBranch        *b_gen_DauID3;   //!
   TBranch        *b_gen_D0pT;   //!
   TBranch        *b_gen_D0eta;   //!
   TBranch        *b_gen_D0phi;   //!
   TBranch        *b_gen_D0mass;   //!
   TBranch        *b_gen_D0y;   //!
   TBranch        *b_gen_D0charge;   //!
   TBranch        *b_gen_D0pdgId;   //!
   TBranch        *b_gen_D0Dau1_pT;   //!
   TBranch        *b_gen_D0Dau1_eta;   //!
   TBranch        *b_gen_D0Dau1_phi;   //!
   TBranch        *b_gen_D0Dau1_mass;   //!
   TBranch        *b_gen_D0Dau1_y;   //!
   TBranch        *b_gen_D0Dau1_charge;   //!
   TBranch        *b_gen_D0Dau1_pdgId;   //!
   TBranch        *b_gen_D0Dau2_pT;   //!
   TBranch        *b_gen_D0Dau2_eta;   //!
   TBranch        *b_gen_D0Dau2_phi;   //!
   TBranch        *b_gen_D0Dau2_mass;   //!
   TBranch        *b_gen_D0Dau2_y;   //!
   TBranch        *b_gen_D0Dau2_charge;   //!
   TBranch        *b_gen_D0Dau2_pdgId;   //!
   TBranch        *b_gen_D1pT;   //!
   TBranch        *b_gen_D1eta;   //!
   TBranch        *b_gen_D1phi;   //!
   TBranch        *b_gen_D1mass;   //!
   TBranch        *b_gen_D1y;   //!
   TBranch        *b_gen_D1charge;   //!
   TBranch        *b_gen_D1pdgId;   //!
            //bool isData;
            // int candSize_gen;
            // float gen_pT[MAXCAND];
            // float gen_eat[MAXCAND];
            // float gen_y[MAXCAND];
            // int gen_status[MAXCAND];
            // int gen_MotherID[MAXCAND];
            // int gen_DauID1[MAXCAND];
            // int gen_DauID2[MAXCAND];
            // int gen_DauID3[MAXCAND];
            // float gen_D0pT[MAXCAND];
            // float gen_D0eta[MAXCAND];
            // float gen_D0phi[MAXCAND];
            // float gen_D0mass[MAXCAND];
            // float gen_D0y[MAXCAND];
            // float gen_D0charge[MAXCAND];
            // float gen_D0pdgId[MAXCAND];
            // float gen_D0Dau1_pT[MAXCAND];
            // float gen_D0Dau1_eta[MAXCAND];
            // float gen_D0Dau1_phi[MAXCAND];
            // float gen_D0Dau1_mass[MAXCAND];
            // float gen_D0Dau1_y[MAXCAND];
            // float gen_D0Dau1_charge[MAXCAND];
            // float gen_D0Dau1_pdgId[MAXCAND];
            // float gen_D0Dau2_pT[MAXCAND];
            // float gen_D0Dau2_eta[MAXCAND];
            // float gen_D0Dau2_phi[MAXCAND];
            // float gen_D0Dau2_mass[MAXCAND];
            // float gen_D0Dau2_y[MAXCAND];
            // float gen_D0Dau2_charge[MAXCAND];
            // float gen_D0Dau2_pdgId[MAXCAND];
            // float gen_D1pT[MAXCAND];
            // float gen_D1eta[MAXCAND];
            // float gen_D1phi[MAXCAND];
            // float gen_D1mass[MAXCAND];
            // float gen_D1y[MAXCAND]22222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222;
            // float gen_D1charge[MAXCAND];
            // float gen_D1pdgI[MAXCAND];
            simpleDStarMCTreeevt* getEventHandle(){ return this;}
            template <typename T>
            void setTree(T *t){
            t->SetBranchAddress("Ntrkoffline",&Ntrkoffline);
            t->SetBranchAddress("Npixel",&Npixel);
            t->SetBranchAddress("HFsumETPlus",&HFsumETPlus);
            t->SetBranchAddress("HFsumETMinus",&HFsumETMinus);
            t->SetBranchAddress("ZDCPlus",&ZDCPlus);
            t->SetBranchAddress("ZDCMinus",&ZDCMinus);
            t->SetBranchAddress("bestvtxX",&bestvtxX);
            t->SetBranchAddress("bestvtxY",&bestvtxY);
            t->SetBranchAddress("bestvtxZ",&bestvtxZ);
            t->SetBranchAddress("candSize",&candSize);
            t->SetBranchAddress("pT",&pT);
            t->SetBranchAddress("y",&y);
            t->SetBranchAddress("eta",&eta);
            t->SetBranchAddress("phi",&phi);
            t->SetBranchAddress("mass",&mass);
            t->SetBranchAddress("flavor",&flavor);
            t->SetBranchAddress("VtxProb",&VtxProb);
            t->SetBranchAddress("VtxChi2",&VtxChi2);
            t->SetBranchAddress("VtxNDF",&VtxNDF);
            t->SetBranchAddress("3DCosPointingAngle",&_3DCosPointingAngle);
            t->SetBranchAddress("3DPointingAngle",&_3DPointingAngle);
            t->SetBranchAddress("2DCosPointingAngle",&_2DCosPointingAngle);
            t->SetBranchAddress("2DPointingAngle",&_2DPointingAngle);
            t->SetBranchAddress("3DDecayLengthSignificance",&_3DDecayLengthSignificance);
            t->SetBranchAddress("3DDecayLength",&_3DDecayLength);
            t->SetBranchAddress("2DDecayLengthSignificance",&_2DDecayLengthSignificance);
            t->SetBranchAddress("2DDecayLength",&_2DDecayLength);
            t->SetBranchAddress("isSwap",&isSwap);
            t->SetBranchAddress("idmom_reco",&idmom_reco);
            t->SetBranchAddress("idBAnc_reco",&idBAnc_reco);
            t->SetBranchAddress("matchGEN",&matchGEN);
            t->SetBranchAddress("matchGen3DPointingAngle",&matchGen3DPointingAngle);
            t->SetBranchAddress("matchGen2DPointingAngle",&matchGen2DPointingAngle);
            t->SetBranchAddress("matchGen3DDecayLength",&matchGen3DDecayLength);
            t->SetBranchAddress("matchGen2DDecayLength",&matchGen2DDecayLength);
            t->SetBranchAddress("matchgen_D0pT",&matchgen_D0pT);
            t->SetBranchAddress("matchgen_D0eta",&matchgen_D0eta);
            t->SetBranchAddress("matchgen_D0phi",&matchgen_D0phi);
            t->SetBranchAddress("matchgen_D0mass",&matchgen_D0mass);
            t->SetBranchAddress("matchgen_D0y",&matchgen_D0y);
            t->SetBranchAddress("matchgen_D0charge",&matchgen_D0charge);
            t->SetBranchAddress("matchgen_D0pdgId",&matchgen_D0pdgId);
            t->SetBranchAddress("matchGen_D0pT",&matchGen_D0pT);
            t->SetBranchAddress("matchGen_D0eta",&matchGen_D0eta);
            t->SetBranchAddress("matchGen_D0phi",&matchGen_D0phi);
            t->SetBranchAddress("matchGen_D0mass",&matchGen_D0mass);
            t->SetBranchAddress("matchGen_D0y",&matchGen_D0y);
            t->SetBranchAddress("matchGen_D0charge",&matchGen_D0charge);
            t->SetBranchAddress("matchGen_D0pdgId",&matchGen_D0pdgId);
            t->SetBranchAddress("matchGen_D0Dau1_pT",&matchGen_D0Dau1_pT);
            t->SetBranchAddress("matchGen_D0Dau1_eta",&matchGen_D0Dau1_eta);
            t->SetBranchAddress("matchGen_D0Dau1_phi",&matchGen_D0Dau1_phi);
            t->SetBranchAddress("matchGen_D0Dau1_mass",&matchGen_D0Dau1_mass);
            t->SetBranchAddress("matchGen_D0Dau1_y",&matchGen_D0Dau1_y);
            t->SetBranchAddress("matchGen_D0Dau1_charge",&matchGen_D0Dau1_charge);
            t->SetBranchAddress("matchGen_D0Dau1_pdgId",&matchGen_D0Dau1_pdgId);
            t->SetBranchAddress("matchGen_D0Dau2_pT",&matchGen_D0Dau2_pT);
            t->SetBranchAddress("matchGen_D0Dau2_eta",&matchGen_D0Dau2_eta);
            t->SetBranchAddress("matchGen_D0Dau2_phi",&matchGen_D0Dau2_phi);
            t->SetBranchAddress("matchGen_D0Dau2_mass",&matchGen_D0Dau2_mass);
            t->SetBranchAddress("matchGen_D0Dau2_y",&matchGen_D0Dau2_y);
            t->SetBranchAddress("matchGen_D0Dau2_charge",&matchGen_D0Dau2_charge);
            t->SetBranchAddress("matchGen_D0Dau2_pdgId",&matchGen_D0Dau2_pdgId);
            t->SetBranchAddress("matchGen_D1pT",&matchGen_D1pT);
            t->SetBranchAddress("matchGen_D1eta",&matchGen_D1eta);
            t->SetBranchAddress("matchGen_D1phi",&matchGen_D1phi);
            t->SetBranchAddress("matchGen_D1mass",&matchGen_D1mass);
            t->SetBranchAddress("matchGen_D1y",&matchGen_D1y);
            t->SetBranchAddress("matchGen_D1charge",&matchGen_D1charge);
            t->SetBranchAddress("matchGen_D1pdgId",&matchGen_D1pdgId);
            t->SetBranchAddress("matchGen_D1decayLength2D_",&matchGen_D1decayLength2D_);
            t->SetBranchAddress("matchGen_D1decayLength3D_",&matchGen_D1decayLength3D_);
            t->SetBranchAddress("matchGen_D1angle2D_",&matchGen_D1angle2D_);
            t->SetBranchAddress("matchGen_D1angle3D_",&matchGen_D1angle3D_);
            t->SetBranchAddress("matchGen_D1ancestorId_",&matchGen_D1ancestorId_);
            t->SetBranchAddress("matchGen_D1ancestorFlavor_",&matchGen_D1ancestorFlavor_);
            t->SetBranchAddress("massDaugther1",&massDaugther1);
            t->SetBranchAddress("pTD1",&pTD1);
            t->SetBranchAddress("EtaD1",&EtaD1);
            t->SetBranchAddress("PhiD1",&PhiD1);
            t->SetBranchAddress("VtxProbDaugther1",&VtxProbDaugther1);
            t->SetBranchAddress("VtxChi2Daugther1",&VtxChi2Daugther1);
            t->SetBranchAddress("VtxNDFDaugther1",&VtxNDFDaugther1);
            t->SetBranchAddress("3DCosPointingAngleDaugther1",&_3DCosPointingAngleDaugther1);
            t->SetBranchAddress("3DPointingAngleDaugther1",&_3DPointingAngleDaugther1);
            t->SetBranchAddress("2DCosPointingAngleDaugther1",&_2DCosPointingAngleDaugther1);
            t->SetBranchAddress("2DPointingAngleDaugther1",&_2DPointingAngleDaugther1);
            t->SetBranchAddress("3DDecayLengthSignificanceDaugther1",&_3DDecayLengthSignificanceDaugther1);
            t->SetBranchAddress("3DDecayLengthDaugther1",&_3DDecayLengthDaugther1);
            t->SetBranchAddress("3DDecayLengthErrorDaugther1",&_3DDecayLengthErrorDaugther1);
            t->SetBranchAddress("2DDecayLengthSignificanceDaugther1",&_2DDecayLengthSignificanceDaugther1);
            t->SetBranchAddress("zDCASignificanceDaugther2",&zDCASignificanceDaugther2);
            t->SetBranchAddress("xyDCASignificanceDaugther2",&xyDCASignificanceDaugther2);
            t->SetBranchAddress("NHitD2",&NHitD2);
            t->SetBranchAddress("HighPurityDaugther2",&HighPurityDaugther2);
            t->SetBranchAddress("pTD2",&pTD2);
            t->SetBranchAddress("EtaD2",&EtaD2);
            t->SetBranchAddress("PhiD2",&PhiD2);
            t->SetBranchAddress("pTerrD1",&pTerrD1);
            t->SetBranchAddress("pTerrD2",&pTerrD2);
            t->SetBranchAddress("dedxHarmonic2D2",&dedxHarmonic2D2);
            t->SetBranchAddress("zDCASignificanceGrandDaugther1",&zDCASignificanceGrandDaugther1);
            t->SetBranchAddress("zDCASignificanceGrandDaugther2",&zDCASignificanceGrandDaugther2);
            t->SetBranchAddress("xyDCASignificanceGrandDaugther1",&xyDCASignificanceGrandDaugther1);
            t->SetBranchAddress("xyDCASignificanceGrandDaugther2",&xyDCASignificanceGrandDaugther2);
            t->SetBranchAddress("NHitGrandD1",&NHitGrandD1);
            t->SetBranchAddress("NHitGrandD2",&NHitGrandD2);
            t->SetBranchAddress("HighPurityGrandDaugther1",&HighPurityGrandDaugther1);
            t->SetBranchAddress("HighPurityGrandDaugther2",&HighPurityGrandDaugther2);
            t->SetBranchAddress("pTGrandD1",&pTGrandD1);
            t->SetBranchAddress("pTGrandD2",&pTGrandD2);
            t->SetBranchAddress("pTerrGrandD1",&pTerrGrandD1);
            t->SetBranchAddress("pTerrGrandD2",&pTerrGrandD2);
            t->SetBranchAddress("EtaGrandD1",&EtaGrandD1);
            t->SetBranchAddress("EtaGrandD2",&EtaGrandD2);
            t->SetBranchAddress("dedxHarmonic2GrandD1",&dedxHarmonic2GrandD1);
            t->SetBranchAddress("dedxHarmonic2GrandD2",&dedxHarmonic2GrandD2);
            };
            template <typename T>
            void setGENTree(T *t){
            t->SetBranchAddress("candSize_gen", &candSize_gen, &b_candSize_gen);
            t->SetBranchAddress("gen_mass", gen_mass, &b_gen_mass);
            t->SetBranchAddress("gen_pT", gen_pT, &b_gen_pT);
            t->SetBranchAddress("gen_eta", gen_eta, &b_gen_eta);
            t->SetBranchAddress("gen_phi", gen_phi, &b_gen_phi);
            t->SetBranchAddress("gen_y", gen_y, &b_gen_y);
            t->SetBranchAddress("gen_status", gen_status, &b_gen_status);
            t->SetBranchAddress("gen_MotherID", gen_MotherID, &b_gen_MotherID);
            t->SetBranchAddress("gen_DauID1", gen_DauID1, &b_gen_DauID1);
            t->SetBranchAddress("gen_DauID2", gen_DauID2, &b_gen_DauID2);
            t->SetBranchAddress("gen_DauID3", gen_DauID3, &b_gen_DauID3);
            t->SetBranchAddress("gen_D0pT", gen_D0pT, &b_gen_D0pT);
            t->SetBranchAddress("gen_D0eta", gen_D0eta, &b_gen_D0eta);
            t->SetBranchAddress("gen_D0phi", gen_D0phi, &b_gen_D0phi);
            t->SetBranchAddress("gen_D0mass", gen_D0mass, &b_gen_D0mass);
            t->SetBranchAddress("gen_D0y", gen_D0y, &b_gen_D0y);
            t->SetBranchAddress("gen_D0charge", gen_D0charge, &b_gen_D0charge);
            t->SetBranchAddress("gen_D0pdgId", gen_D0pdgId, &b_gen_D0pdgId);
            t->SetBranchAddress("gen_D0Dau1_pT", gen_D0Dau1_pT, &b_gen_D0Dau1_pT);
            t->SetBranchAddress("gen_D0Dau1_eta", gen_D0Dau1_eta, &b_gen_D0Dau1_eta);
            t->SetBranchAddress("gen_D0Dau1_phi", gen_D0Dau1_phi, &b_gen_D0Dau1_phi);
            t->SetBranchAddress("gen_D0Dau1_mass", gen_D0Dau1_mass, &b_gen_D0Dau1_mass);
            t->SetBranchAddress("gen_D0Dau1_y", gen_D0Dau1_y, &b_gen_D0Dau1_y);
            t->SetBranchAddress("gen_D0Dau1_charge", gen_D0Dau1_charge, &b_gen_D0Dau1_charge);
            t->SetBranchAddress("gen_D0Dau1_pdgId", gen_D0Dau1_pdgId, &b_gen_D0Dau1_pdgId);
            t->SetBranchAddress("gen_D0Dau2_pT", gen_D0Dau2_pT, &b_gen_D0Dau2_pT);
            t->SetBranchAddress("gen_D0Dau2_eta", gen_D0Dau2_eta, &b_gen_D0Dau2_eta);
            t->SetBranchAddress("gen_D0Dau2_phi", gen_D0Dau2_phi, &b_gen_D0Dau2_phi);
            t->SetBranchAddress("gen_D0Dau2_mass", gen_D0Dau2_mass, &b_gen_D0Dau2_mass);
            t->SetBranchAddress("gen_D0Dau2_y", gen_D0Dau2_y, &b_gen_D0Dau2_y);
            t->SetBranchAddress("gen_D0Dau2_charge", gen_D0Dau2_charge, &b_gen_D0Dau2_charge);
            t->SetBranchAddress("gen_D0Dau2_pdgId", gen_D0Dau2_pdgId, &b_gen_D0Dau2_pdgId);
            t->SetBranchAddress("gen_D1pT", gen_D1pT, &b_gen_D1pT);
            t->SetBranchAddress("gen_D1eta", gen_D1eta, &b_gen_D1eta);
            t->SetBranchAddress("gen_D1phi", gen_D1phi, &b_gen_D1phi);
            t->SetBranchAddress("gen_D1mass", gen_D1mass, &b_gen_D1mass);
            t->SetBranchAddress("gen_D1y", gen_D1y, &b_gen_D1y);
            t->SetBranchAddress("gen_D1charge", gen_D1charge, &b_gen_D1charge);
            t->SetBranchAddress("gen_D1pdgId", gen_D1pdgId, &b_gen_D1pdgId);
            // t->SetBranchAddress("candSize_gen",&candSize_gen);
            // t->SetBranchAddress("gen_pT",&gen_pT);
            // t->SetBranchAddress("gen_eat",&gen_eat);
            // t->SetBranchAddress("gen_y",&gen_y);
            // t->SetBranchAddress("gen_status",&gen_status);
            // t->SetBranchAddress("gen_MotherID",&gen_MotherID);
            // t->SetBranchAddress("gen_DauID1",&gen_DauID1);
            // t->SetBranchAddress("gen_DauID2",&gen_DauID2);
            // t->SetBranchAddress("gen_DauID3",&gen_DauID3);
            // t->SetBranchAddress("gen_D0pT",&gen_D0pT);
            // t->SetBranchAddress("gen_D0eta",&gen_D0eta);
            // t->SetBranchAddress("gen_D0phi",&gen_D0phi);
            // t->SetBranchAddress("gen_D0mass",&gen_D0mass);
            // t->SetBranchAddress("gen_D0y",&gen_D0y);
            // t->SetBranchAddress("gen_D0charge",&gen_D0charge);
            // t->SetBranchAddress("gen_D0pdgId",&gen_D0pdgId);
            // t->SetBranchAddress("gen_D0Dau1_pT",&gen_D0Dau1_pT);
            // t->SetBranchAddress("gen_D0Dau1_eta",&gen_D0Dau1_eta);
            // t->SetBranchAddress("gen_D0Dau1_phi",&gen_D0Dau1_phi);
            // t->SetBranchAddress("gen_D0Dau1_mass",&gen_D0Dau1_mass);
            // t->SetBranchAddress("gen_D0Dau1_y",&gen_D0Dau1_y);
            // t->SetBranchAddress("gen_D0Dau1_charge",&gen_D0Dau1_charge);
            // t->SetBranchAddress("gen_D0Dau1_pdgId",&gen_D0Dau1_pdgId);
            // t->SetBranchAddress("gen_D0Dau2_pT",&gen_D0Dau2_pT);
            // t->SetBranchAddress("gen_D0Dau2_eta",&gen_D0Dau2_eta);
            // t->SetBranchAddress("gen_D0Dau2_phi",&gen_D0Dau2_phi);
            // t->SetBranchAddress("gen_D0Dau2_mass",&gen_D0Dau2_mass);
            // t->SetBranchAddress("gen_D0Dau2_y",&gen_D0Dau2_y);
            // t->SetBranchAddress("gen_D0Dau2_charge",&gen_D0Dau2_charge);
            // t->SetBranchAddress("gen_D0Dau2_pdgId",&gen_D0Dau2_pdgId);
            // t->SetBranchAddress("gen_D1pT",&gen_D1pT);
            // t->SetBranchAddress("gen_D1eta",&gen_D1eta);
            // t->SetBranchAddress("gen_D1phi",&gen_D1phi);
            // t->SetBranchAddress("gen_D1mass",&gen_D1mass);
            // t->SetBranchAddress("gen_D1y",&gen_D1y);
            // t->SetBranchAddress("gen_D1charge",&gen_D1charge);
            // t->SetBranchAddress("gen_D1pdgId",&gen_D1pdgId);
            };
        };
    struct simpleDStarMCTreeflat{
        public:
            int   Ntrkoffline;
            int Npixel;
            float HFsumETPlus;
            float HFsumETMinus;
            float ZDCPlus;
            float ZDCMinus;
            float bestvtxX;
            float bestvtxY;
            float bestvtxZ;
            int candSize;
            float pT;
            float y;
            float eta;
            float phi;
            float mass;
            float flavor;
            float VtxProb;
            float VtxChi2;
            float VtxNDF;
            float _3DCosPointingAngle;
            float _3DPointingAngle;
            float _2DCosPointingAngle;
            float _2DPointingAngle;
            float _3DDecayLengthSignificance;
            float _3DDecayLength;
            float _2DDecayLengthSignificance;
            float _2DDecayLength;
            bool isSwap;
            int idmom_reco;
            int idBAnc_reco;
            bool matchGEN;
            float matchGen3DPointingAngle;
            float matchGen2DPointingAngle;
            float matchGen3DDecayLength;
            float matchGen2DDecayLength;
            float matchgen_D0pT;
            float matchgen_D0eta;
            float matchgen_D0phi;
            float matchgen_D0mass;
            float matchgen_D0y;
            float matchgen_D0charge;
            float matchgen_D0pdgId;
            float matchGen_D0pT;
            float matchGen_D0eta;
            float matchGen_D0phi;
            float matchGen_D0mass;
            float matchGen_D0y;
            float matchGen_D0charge;
            float matchGen_D0pdgId;
            float matchGen_D0Dau1_pT;
            float matchGen_D0Dau1_eta;
            float matchGen_D0Dau1_phi;
            float matchGen_D0Dau1_mass;
            float matchGen_D0Dau1_y;
            float matchGen_D0Dau1_charge;
            float matchGen_D0Dau1_pdgId;
            float matchGen_D0Dau2_pT;
            float matchGen_D0Dau2_eta;
            float matchGen_D0Dau2_phi;
            float matchGen_D0Dau2_mass;
            float matchGen_D0Dau2_y;
            float matchGen_D0Dau2_charge;
            float matchGen_D0Dau2_pdgId;
            float matchGen_D1pT;
            float matchGen_D1eta;
            float matchGen_D1phi;
            float matchGen_D1mass;
            float matchGen_D1y;
            float matchGen_D1charge;
            float matchGen_D1pdgId;
            float matchGen_D1decayLength2D_;
            float matchGen_D1decayLength3D_;
            float matchGen_D1angle2D_;
            float matchGen_D1angle3D_;
            float matchGen_D1ancestorId_;
            float matchGen_D1ancestorFlavor_;
            float massDaugther1;
            float pTD1;
            float EtaD1;
            float PhiD1;
            float VtxProbDaugther1;
            float VtxChi2Daugther1;
            float VtxNDFDaugther1;
            float _3DCosPointingAngleDaugther1;
            float _3DPointingAngleDaugther1;
            float _2DCosPointingAngleDaugther1;
            float _2DPointingAngleDaugther1;
            float _3DDecayLengthSignificanceDaugther1;
            float _3DDecayLengthDaugther1;
            float _3DDecayLengthErrorDaugther1;
            float _2DDecayLengthSignificanceDaugther1;
            float zDCASignificanceDaugther2;
            float xyDCASignificanceDaugther2;
            float NHitD2;
            bool HighPurityDaugther2;
            float pTD2;
            float EtaD2;
            float PhiD2;
            float pTerrD1;
            float pTerrD2;
            float dedxHarmonic2D2;
            float zDCASignificanceGrandDaugther1;
            float zDCASignificanceGrandDaugther2;
            float xyDCASignificanceGrandDaugther1;
            float xyDCASignificanceGrandDaugther2;
            float NHitGrandD1;
            float NHitGrandD2;
            bool HighPurityGrandDaugther1;
            bool HighPurityGrandDaugther2;
            float pTGrandD1;
            float pTGrandD2;
            float pTerrGrandD1;
            float pTerrGrandD2;
            float EtaGrandD1;
            float EtaGrandD2;
            float dedxHarmonic2GrandD1;
            float dedxHarmonic2GrandD2;
                  Int_t           candSize_gen;
   Float_t         gen_mass;   //[candSize_gen]
   Float_t         gen_pT;   //[candSize_gen]
   Float_t         gen_eta;   //[candSize_gen]
   Float_t         gen_phi;   //[candSize_gen]
   Float_t         gen_y;   //[candSize_gen]
   Int_t           gen_status;   //[candSize_gen]
   Int_t           gen_MotherID;   //[candSize_gen]
   Int_t           gen_DauID1;   //[candSize_gen]
   Int_t           gen_DauID2;   //[candSize_gen]
   Int_t           gen_DauID3;   //[candSize_gen]
   Float_t         gen_D0pT;   //[candSize_gen]
   Float_t         gen_D0eta;   //[candSize_gen]
   Float_t         gen_D0phi;   //[candSize_gen]
   Float_t         gen_D0mass;   //[candSize_gen]
   Float_t         gen_D0y;   //[candSize_gen]
   Float_t         gen_D0charge;   //[candSize_gen]
   Int_t         gen_D0pdgId;   //[candSize_gen]
   Float_t         gen_D0Dau1_pT;   //[candSize_gen]
   Float_t         gen_D0Dau1_eta;   //[candSize_gen]
   Float_t         gen_D0Dau1_phi;   //[candSize_gen]
   Float_t         gen_D0Dau1_mass;   //[candSize_gen]
   Float_t         gen_D0Dau1_y;   //[candSize_gen]
   Float_t         gen_D0Dau1_charge;   //[candSize_gen]
   Int_t         gen_D0Dau1_pdgId;   //[candSize_gen]
   Float_t         gen_D0Dau2_pT;   //[candSize_gen]
   Float_t         gen_D0Dau2_eta;   //[candSize_gen]
   Float_t         gen_D0Dau2_phi;   //[candSize_gen]
   Float_t         gen_D0Dau2_mass;   //[candSize_gen]
   Float_t         gen_D0Dau2_y;   //[candSize_gen]
   Float_t         gen_D0Dau2_charge;   //[candSize_gen]
   Int_t         gen_D0Dau2_pdgId;   //[candSize_gen]
   Float_t         gen_D1pT;   //[candSize_gen]
   Float_t         gen_D1eta;   //[candSize_gen]
   Float_t         gen_D1phi;   //[candSize_gen]
   Float_t         gen_D1mass;   //[candSize_gen]
   Float_t         gen_D1y;   //[candSize_gen]
   Float_t         gen_D1charge;   //[candSize_gen]
   Int_t         gen_D1pdgId; 

            //bool isData;

            // int candSize_gen;
            // float gen_pT;
            // float gen_eat;
            // float gen_y;
            // int gen_status;
            // int gen_MotherID;
            // int gen_DauID1;
            // int gen_DauID2;
            // int gen_DauID3;
            // float gen_D0pT;
            // float gen_D0eta;
            // float gen_D0phi;
            // float gen_D0mass;
            // float gen_D0y;
            // float gen_D0charge;
            // float gen_D0pdgId;
            // float gen_D0Dau1_pT;
            // float gen_D0Dau1_eta;
            // float gen_D0Dau1_phi;
            // float gen_D0Dau1_mass;
            // float gen_D0Dau1_y;
            // float gen_D0Dau1_charge;
            // float gen_D0Dau1_pdgId;
            // float gen_D0Dau2_pT;
            // float gen_D0Dau2_eta;
            // float gen_D0Dau2_phi;
            // float gen_D0Dau2_mass;
            // float gen_D0Dau2_y;
            // float gen_D0Dau2_charge;
            // float gen_D0Dau2_pdgId;
            // float gen_D1pT;
            // float gen_D1eta;
            // float gen_D1phi;
            // float gen_D1mass;
            // float gen_D1y;
            // float gen_D1charge;
            // float gen_D1pdgI;
            simpleDStarMCTreeflat* getEventHandle(){ return this;}
            template <typename T>
        void setTree(T *t){
            t->SetBranchAddress("Ntrkoffline",&Ntrkoffline);
            t->SetBranchAddress("Npixel",&Npixel);
            t->SetBranchAddress("HFsumETPlus",&HFsumETPlus);
            t->SetBranchAddress("HFsumETMinus",&HFsumETMinus);
            t->SetBranchAddress("ZDCPlus",&ZDCPlus);
            t->SetBranchAddress("ZDCMinus",&ZDCMinus);
            t->SetBranchAddress("bestvtxX",&bestvtxX);
            t->SetBranchAddress("bestvtxY",&bestvtxY);
            t->SetBranchAddress("bestvtxZ",&bestvtxZ);
            t->SetBranchAddress("candSize",&candSize);
            t->SetBranchAddress("pT",&pT);
            t->SetBranchAddress("y",&y);
            t->SetBranchAddress("eta",&eta);
            t->SetBranchAddress("phi",&phi);
            t->SetBranchAddress("mass",&mass);
            t->SetBranchAddress("flavor",&flavor);
            t->SetBranchAddress("VtxProb",&VtxProb);
            t->SetBranchAddress("VtxChi2",&VtxChi2);
            t->SetBranchAddress("VtxNDF",&VtxNDF);
            t->SetBranchAddress("3DCosPointingAngle",&_3DCosPointingAngle);
            t->SetBranchAddress("3DPointingAngle",&_3DPointingAngle);
            t->SetBranchAddress("2DCosPointingAngle",&_2DCosPointingAngle);
            t->SetBranchAddress("2DPointingAngle",&_2DPointingAngle);
            t->SetBranchAddress("3DDecayLengthSignificance",&_3DDecayLengthSignificance);
            t->SetBranchAddress("3DDecayLength",&_3DDecayLength);
            t->SetBranchAddress("2DDecayLengthSignificance",&_2DDecayLengthSignificance);
            t->SetBranchAddress("2DDecayLength",&_2DDecayLength);
            t->SetBranchAddress("isSwap",&isSwap);
            t->SetBranchAddress("idmom_reco",&idmom_reco);
            t->SetBranchAddress("idBAnc_reco",&idBAnc_reco);
            t->SetBranchAddress("matchGEN",&matchGEN);
            t->SetBranchAddress("matchGen3DPointingAngle",&matchGen3DPointingAngle);
            t->SetBranchAddress("matchGen2DPointingAngle",&matchGen2DPointingAngle);
            t->SetBranchAddress("matchGen3DDecayLength",&matchGen3DDecayLength);
            t->SetBranchAddress("matchGen2DDecayLength",&matchGen2DDecayLength);
            t->SetBranchAddress("matchgen_D0pT",&matchgen_D0pT);
            t->SetBranchAddress("matchgen_D0eta",&matchgen_D0eta);
            t->SetBranchAddress("matchgen_D0phi",&matchgen_D0phi);
            t->SetBranchAddress("matchgen_D0mass",&matchgen_D0mass);
            t->SetBranchAddress("matchgen_D0y",&matchgen_D0y);
            t->SetBranchAddress("matchgen_D0charge",&matchgen_D0charge);
            t->SetBranchAddress("matchgen_D0pdgId",&matchgen_D0pdgId);
            t->SetBranchAddress("matchGen_D0pT",&matchGen_D0pT);
            t->SetBranchAddress("matchGen_D0eta",&matchGen_D0eta);
            t->SetBranchAddress("matchGen_D0phi",&matchGen_D0phi);
            t->SetBranchAddress("matchGen_D0mass",&matchGen_D0mass);
            t->SetBranchAddress("matchGen_D0y",&matchGen_D0y);
            t->SetBranchAddress("matchGen_D0charge",&matchGen_D0charge);
            t->SetBranchAddress("matchGen_D0pdgId",&matchGen_D0pdgId);
            t->SetBranchAddress("matchGen_D0Dau1_pT",&matchGen_D0Dau1_pT);
            t->SetBranchAddress("matchGen_D0Dau1_eta",&matchGen_D0Dau1_eta);
            t->SetBranchAddress("matchGen_D0Dau1_phi",&matchGen_D0Dau1_phi);
            t->SetBranchAddress("matchGen_D0Dau1_mass",&matchGen_D0Dau1_mass);
            t->SetBranchAddress("matchGen_D0Dau1_y",&matchGen_D0Dau1_y);
            t->SetBranchAddress("matchGen_D0Dau1_charge",&matchGen_D0Dau1_charge);
            t->SetBranchAddress("matchGen_D0Dau1_pdgId",&matchGen_D0Dau1_pdgId);
            t->SetBranchAddress("matchGen_D0Dau2_pT",&matchGen_D0Dau2_pT);
            t->SetBranchAddress("matchGen_D0Dau2_eta",&matchGen_D0Dau2_eta);
            t->SetBranchAddress("matchGen_D0Dau2_phi",&matchGen_D0Dau2_phi);
            t->SetBranchAddress("matchGen_D0Dau2_mass",&matchGen_D0Dau2_mass);
            t->SetBranchAddress("matchGen_D0Dau2_y",&matchGen_D0Dau2_y);
            t->SetBranchAddress("matchGen_D0Dau2_charge",&matchGen_D0Dau2_charge);
            t->SetBranchAddress("matchGen_D0Dau2_pdgId",&matchGen_D0Dau2_pdgId);
            t->SetBranchAddress("matchGen_D1pT",&matchGen_D1pT);
            t->SetBranchAddress("matchGen_D1eta",&matchGen_D1eta);
            t->SetBranchAddress("matchGen_D1phi",&matchGen_D1phi);
            t->SetBranchAddress("matchGen_D1mass",&matchGen_D1mass);
            t->SetBranchAddress("matchGen_D1y",&matchGen_D1y);
            t->SetBranchAddress("matchGen_D1charge",&matchGen_D1charge);
            t->SetBranchAddress("matchGen_D1pdgId",&matchGen_D1pdgId);
            t->SetBranchAddress("matchGen_D1decayLength2D_",&matchGen_D1decayLength2D_);
            t->SetBranchAddress("matchGen_D1decayLength3D_",&matchGen_D1decayLength3D_);
            t->SetBranchAddress("matchGen_D1angle2D_",&matchGen_D1angle2D_);
            t->SetBranchAddress("matchGen_D1angle3D_",&matchGen_D1angle3D_);
            t->SetBranchAddress("matchGen_D1ancestorId_",&matchGen_D1ancestorId_);
            t->SetBranchAddress("matchGen_D1ancestorFlavor_",&matchGen_D1ancestorFlavor_);
            t->SetBranchAddress("massDaugther1",&massDaugther1);
            t->SetBranchAddress("pTD1",&pTD1);
            t->SetBranchAddress("EtaD1",&EtaD1);
            t->SetBranchAddress("PhiD1",&PhiD1);
            t->SetBranchAddress("VtxProbDaugther1",&VtxProbDaugther1);
            t->SetBranchAddress("VtxChi2Daugther1",&VtxChi2Daugther1);
            t->SetBranchAddress("VtxNDFDaugther1",&VtxNDFDaugther1);
            t->SetBranchAddress("3DCosPointingAngleDaugther1",&_3DCosPointingAngleDaugther1);
            t->SetBranchAddress("3DPointingAngleDaugther1",&_3DPointingAngleDaugther1);
            t->SetBranchAddress("2DCosPointingAngleDaugther1",&_2DCosPointingAngleDaugther1);
            t->SetBranchAddress("2DPointingAngleDaugther1",&_2DPointingAngleDaugther1);
            t->SetBranchAddress("3DDecayLengthSignificanceDaugther1",&_3DDecayLengthSignificanceDaugther1);
            t->SetBranchAddress("3DDecayLengthDaugther1",&_3DDecayLengthDaugther1);
            t->SetBranchAddress("3DDecayLengthErrorDaugther1",&_3DDecayLengthErrorDaugther1);
            t->SetBranchAddress("2DDecayLengthSignificanceDaugther1",&_2DDecayLengthSignificanceDaugther1);
            t->SetBranchAddress("zDCASignificanceDaugther2",&zDCASignificanceDaugther2);
            t->SetBranchAddress("xyDCASignificanceDaugther2",&xyDCASignificanceDaugther2);
            t->SetBranchAddress("NHitD2",&NHitD2);
            t->SetBranchAddress("HighPurityDaugther2",&HighPurityDaugther2);
            t->SetBranchAddress("pTD2",&pTD2);
            t->SetBranchAddress("EtaD2",&EtaD2);
            t->SetBranchAddress("PhiD2",&PhiD2);
            t->SetBranchAddress("pTerrD1",&pTerrD1);
            t->SetBranchAddress("pTerrD2",&pTerrD2);
            t->SetBranchAddress("dedxHarmonic2D2",&dedxHarmonic2D2);
            t->SetBranchAddress("zDCASignificanceGrandDaugther1",&zDCASignificanceGrandDaugther1);
            t->SetBranchAddress("zDCASignificanceGrandDaugther2",&zDCASignificanceGrandDaugther2);
            t->SetBranchAddress("xyDCASignificanceGrandDaugther1",&xyDCASignificanceGrandDaugther1);
            t->SetBranchAddress("xyDCASignificanceGrandDaugther2",&xyDCASignificanceGrandDaugther2);
            t->SetBranchAddress("NHitGrandD1",&NHitGrandD1);
            t->SetBranchAddress("NHitGrandD2",&NHitGrandD2);
            t->SetBranchAddress("HighPurityGrandDaugther1",&HighPurityGrandDaugther1);
            t->SetBranchAddress("HighPurityGrandDaugther2",&HighPurityGrandDaugther2);
            t->SetBranchAddress("pTGrandD1",&pTGrandD1);
            t->SetBranchAddress("pTGrandD2",&pTGrandD2);
            t->SetBranchAddress("pTerrGrandD1",&pTerrGrandD1);
            t->SetBranchAddress("pTerrGrandD2",&pTerrGrandD2);
            t->SetBranchAddress("EtaGrandD1",&EtaGrandD1);
            t->SetBranchAddress("EtaGrandD2",&EtaGrandD2);
            t->SetBranchAddress("dedxHarmonic2GrandD1",&dedxHarmonic2GrandD1);
            t->SetBranchAddress("dedxHarmonic2GrandD2",&dedxHarmonic2GrandD2);};
            template <typename T>
        void setOutputTree(T *t){
            t->Branch("Ntrkoffline",&Ntrkoffline);
            t->Branch("Npixel",&Npixel);
            t->Branch("HFsumETPlus",&HFsumETPlus);
            t->Branch("HFsumETMinus",&HFsumETMinus);
            t->Branch("ZDCPlus",&ZDCPlus);
            t->Branch("ZDCMinus",&ZDCMinus);
            t->Branch("bestvtxX",&bestvtxX);
            t->Branch("bestvtxY",&bestvtxY);
            t->Branch("bestvtxZ",&bestvtxZ);
            t->Branch("candSize",&candSize);
            t->Branch("pT",&pT);
            t->Branch("y",&y);
            t->Branch("eta",&eta);
            t->Branch("phi",&phi);
            t->Branch("mass",&mass);
            t->Branch("flavor",&flavor);
            t->Branch("VtxProb",&VtxProb);
            t->Branch("VtxChi2",&VtxChi2);
            t->Branch("VtxNDF",&VtxNDF);
            t->Branch("3DCosPointingAngle",&_3DCosPointingAngle);
            t->Branch("3DPointingAngle",&_3DPointingAngle);
            t->Branch("2DCosPointingAngle",&_2DCosPointingAngle);
            t->Branch("2DPointingAngle",&_2DPointingAngle);
            t->Branch("3DDecayLengthSignificance",&_3DDecayLengthSignificance);
            t->Branch("3DDecayLength",&_3DDecayLength);
            t->Branch("2DDecayLengthSignificance",&_2DDecayLengthSignificance);
            t->Branch("2DDecayLength",&_2DDecayLength);
            t->Branch("isSwap",&isSwap);
            t->Branch("idmom_reco",&idmom_reco);
            t->Branch("idBAnc_reco",&idBAnc_reco);
            t->Branch("matchGEN",&matchGEN);
            t->Branch("matchGen3DPointingAngle",&matchGen3DPointingAngle);
            t->Branch("matchGen2DPointingAngle",&matchGen2DPointingAngle);
            t->Branch("matchGen3DDecayLength",&matchGen3DDecayLength);
            t->Branch("matchGen2DDecayLength",&matchGen2DDecayLength);
            t->Branch("matchgen_D0pT",&matchgen_D0pT);
            t->Branch("matchgen_D0eta",&matchgen_D0eta);
            t->Branch("matchgen_D0phi",&matchgen_D0phi);
            t->Branch("matchgen_D0mass",&matchgen_D0mass);
            t->Branch("matchgen_D0y",&matchgen_D0y);
            t->Branch("matchgen_D0charge",&matchgen_D0charge);
            t->Branch("matchgen_D0pdgId",&matchgen_D0pdgId);
            t->Branch("matchGen_D0pT",&matchGen_D0pT);
            t->Branch("matchGen_D0eta",&matchGen_D0eta);
            t->Branch("matchGen_D0phi",&matchGen_D0phi);
            t->Branch("matchGen_D0mass",&matchGen_D0mass);
            t->Branch("matchGen_D0y",&matchGen_D0y);
            t->Branch("matchGen_D0charge",&matchGen_D0charge);
            t->Branch("matchGen_D0pdgId",&matchGen_D0pdgId);
            t->Branch("matchGen_D0Dau1_pT",&matchGen_D0Dau1_pT);
            t->Branch("matchGen_D0Dau1_eta",&matchGen_D0Dau1_eta);
            t->Branch("matchGen_D0Dau1_phi",&matchGen_D0Dau1_phi);
            t->Branch("matchGen_D0Dau1_mass",&matchGen_D0Dau1_mass);
            t->Branch("matchGen_D0Dau1_y",&matchGen_D0Dau1_y);
            t->Branch("matchGen_D0Dau1_charge",&matchGen_D0Dau1_charge);
            t->Branch("matchGen_D0Dau1_pdgId",&matchGen_D0Dau1_pdgId);
            t->Branch("matchGen_D0Dau2_pT",&matchGen_D0Dau2_pT);
            t->Branch("matchGen_D0Dau2_eta",&matchGen_D0Dau2_eta);
            t->Branch("matchGen_D0Dau2_phi",&matchGen_D0Dau2_phi);
            t->Branch("matchGen_D0Dau2_mass",&matchGen_D0Dau2_mass);
            t->Branch("matchGen_D0Dau2_y",&matchGen_D0Dau2_y);
            t->Branch("matchGen_D0Dau2_charge",&matchGen_D0Dau2_charge);
            t->Branch("matchGen_D0Dau2_pdgId",&matchGen_D0Dau2_pdgId);
            t->Branch("matchGen_D1pT",&matchGen_D1pT);
            t->Branch("matchGen_D1eta",&matchGen_D1eta);
            t->Branch("matchGen_D1phi",&matchGen_D1phi);
            t->Branch("matchGen_D1mass",&matchGen_D1mass);
            t->Branch("matchGen_D1y",&matchGen_D1y);
            t->Branch("matchGen_D1charge",&matchGen_D1charge);
            t->Branch("matchGen_D1pdgId",&matchGen_D1pdgId);
            t->Branch("matchGen_D1decayLength2D_",&matchGen_D1decayLength2D_);
            t->Branch("matchGen_D1decayLength3D_",&matchGen_D1decayLength3D_);
            t->Branch("matchGen_D1angle2D_",&matchGen_D1angle2D_);
            t->Branch("matchGen_D1angle3D_",&matchGen_D1angle3D_);
            t->Branch("matchGen_D1ancestorId_",&matchGen_D1ancestorId_);
            t->Branch("matchGen_D1ancestorFlavor_",&matchGen_D1ancestorFlavor_);
            t->Branch("massDaugther1",&massDaugther1);
            t->Branch("pTD1",&pTD1);
            t->Branch("EtaD1",&EtaD1);
            t->Branch("PhiD1",&PhiD1);
            t->Branch("VtxProbDaugther1",&VtxProbDaugther1);
            t->Branch("VtxChi2Daugther1",&VtxChi2Daugther1);
            t->Branch("VtxNDFDaugther1",&VtxNDFDaugther1);
            t->Branch("3DCosPointingAngleDaugther1",&_3DCosPointingAngleDaugther1);
            t->Branch("3DPointingAngleDaugther1",&_3DPointingAngleDaugther1);
            t->Branch("2DCosPointingAngleDaugther1",&_2DCosPointingAngleDaugther1);
            t->Branch("2DPointingAngleDaugther1",&_2DPointingAngleDaugther1);
            t->Branch("3DDecayLengthSignificanceDaugther1",&_3DDecayLengthSignificanceDaugther1);
            t->Branch("3DDecayLengthDaugther1",&_3DDecayLengthDaugther1);
            t->Branch("3DDecayLengthErrorDaugther1",&_3DDecayLengthErrorDaugther1);
            t->Branch("2DDecayLengthSignificanceDaugther1",&_2DDecayLengthSignificanceDaugther1);
            t->Branch("zDCASignificanceDaugther2",&zDCASignificanceDaugther2);
            t->Branch("xyDCASignificanceDaugther2",&xyDCASignificanceDaugther2);
            t->Branch("NHitD2",&NHitD2);
            t->Branch("HighPurityDaugther2",&HighPurityDaugther2);
            t->Branch("pTD2",&pTD2);
            t->Branch("EtaD2",&EtaD2);
            t->Branch("PhiD2",&PhiD2);
            t->Branch("pTerrD1",&pTerrD1);
            t->Branch("pTerrD2",&pTerrD2);
            t->Branch("dedxHarmonic2D2",&dedxHarmonic2D2);
            t->Branch("zDCASignificanceGrandDaugther1",&zDCASignificanceGrandDaugther1);
            t->Branch("zDCASignificanceGrandDaugther2",&zDCASignificanceGrandDaugther2);
            t->Branch("xyDCASignificanceGrandDaugther1",&xyDCASignificanceGrandDaugther1);
            t->Branch("xyDCASignificanceGrandDaugther2",&xyDCASignificanceGrandDaugther2);
            t->Branch("NHitGrandD1",&NHitGrandD1);
            t->Branch("NHitGrandD2",&NHitGrandD2);
            t->Branch("HighPurityGrandDaugther1",&HighPurityGrandDaugther1);
            t->Branch("HighPurityGrandDaugther2",&HighPurityGrandDaugther2);
            t->Branch("pTGrandD1",&pTGrandD1);
            t->Branch("pTGrandD2",&pTGrandD2);
            t->Branch("pTerrGrandD1",&pTerrGrandD1);
            t->Branch("pTerrGrandD2",&pTerrGrandD2);
            t->Branch("EtaGrandD1",&EtaGrandD1);
            t->Branch("EtaGrandD2",&EtaGrandD2);
            t->Branch("dedxHarmonic2GrandD1",&dedxHarmonic2GrandD1);
            t->Branch("dedxHarmonic2GrandD2",&dedxHarmonic2GrandD2);
        };
        template <typename T>
        void setGENOutputTree(T *t){
            // t->Branch("isData",&isData);
            t->Branch("candSize_gen",&candSize_gen);
            t->Branch("gen_mass",&gen_mass);  
            t->Branch("gen_pT",&gen_pT);
            t->Branch("gen_eta",&gen_eta);
            t->Branch("gen_phi",&gen_phi);
            t->Branch("gen_y",&gen_y);
            t->Branch("gen_status",&gen_status);
            t->Branch("gen_MotherID",&gen_MotherID);
            t->Branch("gen_DauID1",&gen_DauID1);
            t->Branch("gen_DauID2",&gen_DauID2);
            t->Branch("gen_DauID3",&gen_DauID3);
            t->Branch("gen_D0pT",&gen_D0pT);
            t->Branch("gen_D0eta",&gen_D0eta);
            t->Branch("gen_D0phi",&gen_D0phi);
            t->Branch("gen_D0mass",&gen_D0mass);
            t->Branch("gen_D0y",&gen_D0y);
            t->Branch("gen_D0charge",&gen_D0charge);
            t->Branch("gen_D0pdgId",&gen_D0pdgId);
            t->Branch("gen_D0Dau1_pT",&gen_D0Dau1_pT);
            t->Branch("gen_D0Dau1_eta",&gen_D0Dau1_eta);
            t->Branch("gen_D0Dau1_phi",&gen_D0Dau1_phi);
            t->Branch("gen_D0Dau1_mass",&gen_D0Dau1_mass);
            t->Branch("gen_D0Dau1_y",&gen_D0Dau1_y);
            t->Branch("gen_D0Dau1_charge",&gen_D0Dau1_charge);
            t->Branch("gen_D0Dau1_pdgId",&gen_D0Dau1_pdgId);
            t->Branch("gen_D0Dau2_pT",&gen_D0Dau2_pT);
            t->Branch("gen_D0Dau2_eta",&gen_D0Dau2_eta);
            t->Branch("gen_D0Dau2_phi",&gen_D0Dau2_phi);
            t->Branch("gen_D0Dau2_mass",&gen_D0Dau2_mass);
            t->Branch("gen_D0Dau2_y",&gen_D0Dau2_y);
            t->Branch("gen_D0Dau2_charge",&gen_D0Dau2_charge);
            t->Branch("gen_D0Dau2_pdgId",&gen_D0Dau2_pdgId);
            t->Branch("gen_D1pT",&gen_D1pT);
            t->Branch("gen_D1eta",&gen_D1eta);
            t->Branch("gen_D1phi",&gen_D1phi);
            t->Branch("gen_D1mass",&gen_D1mass);
            t->Branch("gen_D1y",&gen_D1y);
            t->Branch("gen_D1charge",&gen_D1charge);
            t->Branch("gen_D1pdgId",&gen_D1pdgId);
    };
        void copyDn( simpleDStarMCTreeevt& evt, int idx){
            Ntrkoffline=evt.Ntrkoffline;
            Npixel=evt.Npixel;
            HFsumETPlus=evt.HFsumETPlus;
            HFsumETMinus=evt.HFsumETMinus;
            ZDCPlus=evt.ZDCPlus;
            ZDCMinus=evt.ZDCMinus;
            bestvtxX=evt.bestvtxX;
            bestvtxY=evt.bestvtxY;
            bestvtxZ=evt.bestvtxZ;
            candSize=evt.candSize;
            pT=evt.pT[idx];
            y=evt.y[idx];
            eta=evt.eta[idx];
            phi=evt.phi[idx];
            mass=evt.mass[idx];
            flavor=evt.flavor[idx];
            VtxProb=evt.VtxProb[idx];
            VtxChi2=evt.VtxChi2[idx];
            VtxNDF=evt.VtxNDF[idx];
            _3DCosPointingAngle=evt._3DCosPointingAngle[idx];
            _3DPointingAngle=evt._3DPointingAngle[idx];
            _2DCosPointingAngle=evt._2DCosPointingAngle[idx];
            _2DPointingAngle=evt._2DPointingAngle[idx];
            _3DDecayLengthSignificance=evt._3DDecayLengthSignificance[idx];
            _3DDecayLength=evt._3DDecayLength[idx];
            _2DDecayLengthSignificance=evt._2DDecayLengthSignificance[idx];
            _2DDecayLength=evt._2DDecayLength[idx];
            isSwap=evt.isSwap[idx];
            idmom_reco=evt.idmom_reco[idx];
            idBAnc_reco=evt.idBAnc_reco[idx];
            matchGEN=evt.matchGEN[idx];
            matchGen3DPointingAngle=evt.matchGen3DPointingAngle[idx];
            matchGen2DPointingAngle=evt.matchGen2DPointingAngle[idx];
            matchGen3DDecayLength=evt.matchGen3DDecayLength[idx];
            matchGen2DDecayLength=evt.matchGen2DDecayLength[idx];
            matchgen_D0pT=evt.matchgen_D0pT[idx];
            matchgen_D0eta=evt.matchgen_D0eta[idx];
            matchgen_D0phi=evt.matchgen_D0phi[idx];
            matchgen_D0mass=evt.matchgen_D0mass[idx];
            matchgen_D0y=evt.matchgen_D0y[idx];
            matchgen_D0charge=evt.matchgen_D0charge[idx];
            matchgen_D0pdgId=evt.matchgen_D0pdgId[idx];
            matchGen_D0pT=evt.matchGen_D0pT[idx];
            matchGen_D0eta=evt.matchGen_D0eta[idx];
            matchGen_D0phi=evt.matchGen_D0phi[idx];
            matchGen_D0mass=evt.matchGen_D0mass[idx];
            matchGen_D0y=evt.matchGen_D0y[idx];
            matchGen_D0charge=evt.matchGen_D0charge[idx];
            matchGen_D0pdgId=evt.matchGen_D0pdgId[idx];
            matchGen_D0Dau1_pT=evt.matchGen_D0Dau1_pT[idx];
            matchGen_D0Dau1_eta=evt.matchGen_D0Dau1_eta[idx];
            matchGen_D0Dau1_phi=evt.matchGen_D0Dau1_phi[idx];
            matchGen_D0Dau1_mass=evt.matchGen_D0Dau1_mass[idx];
            matchGen_D0Dau1_y=evt.matchGen_D0Dau1_y[idx];
            matchGen_D0Dau1_charge=evt.matchGen_D0Dau1_charge[idx];
            matchGen_D0Dau1_pdgId=evt.matchGen_D0Dau1_pdgId[idx];
            matchGen_D0Dau2_pT=evt.matchGen_D0Dau2_pT[idx];
            matchGen_D0Dau2_eta=evt.matchGen_D0Dau2_eta[idx];
            matchGen_D0Dau2_phi=evt.matchGen_D0Dau2_phi[idx];
            matchGen_D0Dau2_mass=evt.matchGen_D0Dau2_mass[idx];
            matchGen_D0Dau2_y=evt.matchGen_D0Dau2_y[idx];
            matchGen_D0Dau2_charge=evt.matchGen_D0Dau2_charge[idx];
            matchGen_D0Dau2_pdgId=evt.matchGen_D0Dau2_pdgId[idx];
            matchGen_D1pT=evt.matchGen_D1pT[idx];
            matchGen_D1eta=evt.matchGen_D1eta[idx];
            matchGen_D1phi=evt.matchGen_D1phi[idx];
            matchGen_D1mass=evt.matchGen_D1mass[idx];
            matchGen_D1y=evt.matchGen_D1y[idx];
            matchGen_D1charge=evt.matchGen_D1charge[idx];
            matchGen_D1pdgId=evt.matchGen_D1pdgId[idx];
            matchGen_D1decayLength2D_=evt.matchGen_D1decayLength2D_[idx];
            matchGen_D1decayLength3D_=evt.matchGen_D1decayLength3D_[idx];
            matchGen_D1angle2D_=evt.matchGen_D1angle2D_[idx];
            matchGen_D1angle3D_=evt.matchGen_D1angle3D_[idx];
            matchGen_D1ancestorId_=evt.matchGen_D1ancestorId_[idx];
            matchGen_D1ancestorFlavor_=evt.matchGen_D1ancestorFlavor_[idx];
            massDaugther1=evt.massDaugther1[idx];
            pTD1=evt.pTD1[idx];
            EtaD1=evt.EtaD1[idx];
            PhiD1=evt.PhiD1[idx];
            VtxProbDaugther1=evt.VtxProbDaugther1[idx];
            VtxChi2Daugther1=evt.VtxChi2Daugther1[idx];
            VtxNDFDaugther1=evt.VtxNDFDaugther1[idx];
            _3DCosPointingAngleDaugther1=evt._3DCosPointingAngleDaugther1[idx];
            _3DPointingAngleDaugther1=evt._3DPointingAngleDaugther1[idx];
            _2DCosPointingAngleDaugther1=evt._2DCosPointingAngleDaugther1[idx];
            _2DPointingAngleDaugther1=evt._2DPointingAngleDaugther1[idx];
            _3DDecayLengthSignificanceDaugther1=evt._3DDecayLengthSignificanceDaugther1[idx];
            _3DDecayLengthDaugther1=evt._3DDecayLengthDaugther1[idx];
            _3DDecayLengthErrorDaugther1=evt._3DDecayLengthErrorDaugther1[idx];
            _2DDecayLengthSignificanceDaugther1=evt._2DDecayLengthSignificanceDaugther1[idx];
            zDCASignificanceDaugther2=evt.zDCASignificanceDaugther2[idx];
            xyDCASignificanceDaugther2=evt.xyDCASignificanceDaugther2[idx];
            NHitD2=evt.NHitD2[idx];
            HighPurityDaugther2=evt.HighPurityDaugther2[idx];
            pTD2=evt.pTD2[idx];
            EtaD2=evt.EtaD2[idx];
            PhiD2=evt.PhiD2[idx];
            pTerrD1=evt.pTerrD1[idx];
            pTerrD2=evt.pTerrD2[idx];
            dedxHarmonic2D2=evt.dedxHarmonic2D2[idx];
            zDCASignificanceGrandDaugther1=evt.zDCASignificanceGrandDaugther1[idx];
            zDCASignificanceGrandDaugther2=evt.zDCASignificanceGrandDaugther2[idx];
            xyDCASignificanceGrandDaugther1=evt.xyDCASignificanceGrandDaugther1[idx];
            xyDCASignificanceGrandDaugther2=evt.xyDCASignificanceGrandDaugther2[idx];
            NHitGrandD1=evt.NHitGrandD1[idx];
            NHitGrandD2=evt.NHitGrandD2[idx];
            HighPurityGrandDaugther1=evt.HighPurityGrandDaugther1[idx];
            HighPurityGrandDaugther2=evt.HighPurityGrandDaugther2[idx];
            pTGrandD1=evt.pTGrandD1[idx];
            pTGrandD2=evt.pTGrandD2[idx];
            pTerrGrandD1=evt.pTerrGrandD1[idx];
            pTerrGrandD2=evt.pTerrGrandD2[idx];
            EtaGrandD1=evt.EtaGrandD1[idx];
            EtaGrandD2=evt.EtaGrandD2[idx];
            dedxHarmonic2GrandD1=evt.dedxHarmonic2GrandD1[idx];
            dedxHarmonic2GrandD2=evt.dedxHarmonic2GrandD2[idx];
            //isData=evt.isData;
            };
        void copyGENDn( simpleDStarMCTreeevt& evt, int idx){
            gen_mass=evt.gen_mass[idx];
            gen_pT=evt.gen_pT[idx];
            gen_eta=evt.gen_eta[idx];
            gen_phi=evt.gen_phi[idx];
            gen_y=evt.gen_y[idx];
            gen_mass=evt.gen_mass[idx];  
            gen_pT=evt.gen_pT[idx];
            gen_eta=evt.gen_eta[idx];
            gen_y=evt.gen_y[idx];
            gen_status=evt.gen_status[idx];
            gen_MotherID=evt.gen_MotherID[idx];
            gen_DauID1=evt.gen_DauID1[idx];
            gen_DauID2=evt.gen_DauID2[idx];
            gen_DauID3=evt.gen_DauID3[idx];
            gen_D0pT=evt.gen_D0pT[idx];
            gen_D0eta=evt.gen_D0eta[idx];
            gen_D0phi=evt.gen_D0phi[idx];
            gen_D0mass=evt.gen_D0mass[idx];
            gen_D0y=evt.gen_D0y[idx];
            gen_D0charge=evt.gen_D0charge[idx];
            gen_D0pdgId=evt.gen_D0pdgId[idx];
            gen_D0Dau1_pT=evt.gen_D0Dau1_pT[idx];
            gen_D0Dau1_eta=evt.gen_D0Dau1_eta[idx];
            gen_D0Dau1_phi=evt.gen_D0Dau1_phi[idx];
            gen_D0Dau1_mass=evt.gen_D0Dau1_mass[idx];
            gen_D0Dau1_y=evt.gen_D0Dau1_y[idx];
            gen_D0Dau1_charge=evt.gen_D0Dau1_charge[idx];
            gen_D0Dau1_pdgId=evt.gen_D0Dau1_pdgId[idx];
            gen_D0Dau2_pT=evt.gen_D0Dau2_pT[idx];
            gen_D0Dau2_eta=evt.gen_D0Dau2_eta[idx];
            gen_D0Dau2_phi=evt.gen_D0Dau2_phi[idx];
            gen_D0Dau2_mass=evt.gen_D0Dau2_mass[idx];
            gen_D0Dau2_y=evt.gen_D0Dau2_y[idx];
            gen_D0Dau2_charge=evt.gen_D0Dau2_charge[idx];
            gen_D0Dau2_pdgId=evt.gen_D0Dau2_pdgId[idx];
            gen_D1pT=evt.gen_D1pT[idx];
            gen_D1eta=evt.gen_D1eta[idx];
            gen_D1phi=evt.gen_D1phi[idx];
            gen_D1mass=evt.gen_D1mass[idx];
            gen_D1y=evt.gen_D1y[idx];
            gen_D1charge=evt.gen_D1charge[idx];
            gen_D1pdgId=evt.gen_D1pdgId[idx];
        };
        void copyDn( simpleDStarMCTreeflat& evt){
            Ntrkoffline=evt.Ntrkoffline;
            Npixel=evt.Npixel;
            HFsumETPlus=evt.HFsumETPlus;
            HFsumETMinus=evt.HFsumETMinus;
            ZDCPlus=evt.ZDCPlus;
            ZDCMinus=evt.ZDCMinus;
            bestvtxX=evt.bestvtxX;
            bestvtxY=evt.bestvtxY;
            bestvtxZ=evt.bestvtxZ;
            candSize=evt.candSize;
            pT=evt.pT;
            y=evt.y;
            eta=evt.eta;
            phi=evt.phi;
            mass=evt.mass;
            flavor=evt.flavor;
            VtxProb=evt.VtxProb;
            VtxChi2=evt.VtxChi2;
            VtxNDF=evt.VtxNDF;
            _3DCosPointingAngle=evt._3DCosPointingAngle;
            _3DPointingAngle=evt._3DPointingAngle;
            _2DCosPointingAngle=evt._2DCosPointingAngle;
            _2DPointingAngle=evt._2DPointingAngle;
            _3DDecayLengthSignificance=evt._3DDecayLengthSignificance;
            _3DDecayLength=evt._3DDecayLength;
            _2DDecayLengthSignificance=evt._2DDecayLengthSignificance;
            _2DDecayLength=evt._2DDecayLength;
            isSwap=evt.isSwap;
            idmom_reco=evt.idmom_reco;
            idBAnc_reco=evt.idBAnc_reco;
            matchGEN=evt.matchGEN;
            matchGen3DPointingAngle=evt.matchGen3DPointingAngle;
            matchGen2DPointingAngle=evt.matchGen2DPointingAngle;
            matchGen3DDecayLength=evt.matchGen3DDecayLength;
            matchGen2DDecayLength=evt.matchGen2DDecayLength;
            matchgen_D0pT=evt.matchgen_D0pT;
            matchgen_D0eta=evt.matchgen_D0eta;
            matchgen_D0phi=evt.matchgen_D0phi;
            matchgen_D0mass=evt.matchgen_D0mass;
            matchgen_D0y=evt.matchgen_D0y;
            matchgen_D0charge=evt.matchgen_D0charge;
            matchgen_D0pdgId=evt.matchgen_D0pdgId;
            matchGen_D0pT=evt.matchGen_D0pT;
            matchGen_D0eta=evt.matchGen_D0eta;
            matchGen_D0phi=evt.matchGen_D0phi;
            matchGen_D0mass=evt.matchGen_D0mass;
            matchGen_D0y=evt.matchGen_D0y;
            matchGen_D0charge=evt.matchGen_D0charge;
            matchGen_D0pdgId=evt.matchGen_D0pdgId;
            matchGen_D0Dau1_pT=evt.matchGen_D0Dau1_pT;
            matchGen_D0Dau1_eta=evt.matchGen_D0Dau1_eta;
            matchGen_D0Dau1_phi=evt.matchGen_D0Dau1_phi;
            matchGen_D0Dau1_mass=evt.matchGen_D0Dau1_mass;
            matchGen_D0Dau1_y=evt.matchGen_D0Dau1_y;
            matchGen_D0Dau1_charge=evt.matchGen_D0Dau1_charge;
            matchGen_D0Dau1_pdgId=evt.matchGen_D0Dau1_pdgId;
            matchGen_D0Dau2_pT=evt.matchGen_D0Dau2_pT;
            matchGen_D0Dau2_eta=evt.matchGen_D0Dau2_eta;
            matchGen_D0Dau2_phi=evt.matchGen_D0Dau2_phi;
            matchGen_D0Dau2_mass=evt.matchGen_D0Dau2_mass;
            matchGen_D0Dau2_y=evt.matchGen_D0Dau2_y;
            matchGen_D0Dau2_charge=evt.matchGen_D0Dau2_charge;
            matchGen_D0Dau2_pdgId=evt.matchGen_D0Dau2_pdgId;
            matchGen_D1pT=evt.matchGen_D1pT;
            matchGen_D1eta=evt.matchGen_D1eta;
            matchGen_D1phi=evt.matchGen_D1phi;
            matchGen_D1mass=evt.matchGen_D1mass;
            matchGen_D1y=evt.matchGen_D1y;
            matchGen_D1charge=evt.matchGen_D1charge;
            matchGen_D1pdgId=evt.matchGen_D1pdgId;
            matchGen_D1decayLength2D_=evt.matchGen_D1decayLength2D_;
            matchGen_D1decayLength3D_=evt.matchGen_D1decayLength3D_;
            matchGen_D1angle2D_=evt.matchGen_D1angle2D_;
            matchGen_D1angle3D_=evt.matchGen_D1angle3D_;
            matchGen_D1ancestorId_=evt.matchGen_D1ancestorId_;
            matchGen_D1ancestorFlavor_=evt.matchGen_D1ancestorFlavor_;
            massDaugther1=evt.massDaugther1;
            pTD1=evt.pTD1;
            EtaD1=evt.EtaD1;
            PhiD1=evt.PhiD1;
            VtxProbDaugther1=evt.VtxProbDaugther1;
            VtxChi2Daugther1=evt.VtxChi2Daugther1;
            VtxNDFDaugther1=evt.VtxNDFDaugther1;
            _3DCosPointingAngleDaugther1=evt._3DCosPointingAngleDaugther1;
            _3DPointingAngleDaugther1=evt._3DPointingAngleDaugther1;
            _2DCosPointingAngleDaugther1=evt._2DCosPointingAngleDaugther1;
            _2DPointingAngleDaugther1=evt._2DPointingAngleDaugther1;
            _3DDecayLengthSignificanceDaugther1=evt._3DDecayLengthSignificanceDaugther1;
            _3DDecayLengthDaugther1=evt._3DDecayLengthDaugther1;
            _3DDecayLengthErrorDaugther1=evt._3DDecayLengthErrorDaugther1;
            _2DDecayLengthSignificanceDaugther1=evt._2DDecayLengthSignificanceDaugther1;
            zDCASignificanceDaugther2=evt.zDCASignificanceDaugther2;
            xyDCASignificanceDaugther2=evt.xyDCASignificanceDaugther2;
            NHitD2=evt.NHitD2;
            HighPurityDaugther2=evt.HighPurityDaugther2;
            pTD2=evt.pTD2;
            EtaD2=evt.EtaD2;
            PhiD2=evt.PhiD2;
            pTerrD1=evt.pTerrD1;
            pTerrD2=evt.pTerrD2;
            dedxHarmonic2D2=evt.dedxHarmonic2D2;
            zDCASignificanceGrandDaugther1=evt.zDCASignificanceGrandDaugther1;
            zDCASignificanceGrandDaugther2=evt.zDCASignificanceGrandDaugther2;
            xyDCASignificanceGrandDaugther1=evt.xyDCASignificanceGrandDaugther1;
            xyDCASignificanceGrandDaugther2=evt.xyDCASignificanceGrandDaugther2;
            NHitGrandD1=evt.NHitGrandD1;
            NHitGrandD2=evt.NHitGrandD2;
            HighPurityGrandDaugther1=evt.HighPurityGrandDaugther1;
            HighPurityGrandDaugther2=evt.HighPurityGrandDaugther2;
            pTGrandD1=evt.pTGrandD1;
            pTGrandD2=evt.pTGrandD2;
            pTerrGrandD1=evt.pTerrGrandD1;
            pTerrGrandD2=evt.pTerrGrandD2;
            EtaGrandD1=evt.EtaGrandD1;
            EtaGrandD2=evt.EtaGrandD2;
            dedxHarmonic2GrandD1=evt.dedxHarmonic2GrandD1;
            dedxHarmonic2GrandD2=evt.dedxHarmonic2GrandD2;
            //isData=evt.isData;
            };
};    struct simpleDStarDataTreeflat{
        public:
            int   Ntrkoffline;
            int Npixel;
            float HFsumETPlus;
            float HFsumETMinus;
            float ZDCPlus;
            float ZDCMinus;
            float bestvtxX;
            float bestvtxY;
            float bestvtxZ;
            int candSize;
            float pT;
            float y;
            float eta;
            float phi;
            float mass;
            float flavor;
            float VtxProb;
            float VtxChi2;
            float VtxNDF;
            float _3DCosPointingAngle;
            float _3DPointingAngle;
            float _2DCosPointingAngle;
            float _2DPointingAngle;
            float _3DDecayLengthSignificance;
            float _3DDecayLength;
            float _2DDecayLengthSignificance;
            float _2DDecayLength;
            float massDaugther1;
            float pTD1;
            float EtaD1;
            float PhiD1;
            float VtxProbDaugther1;
            float VtxChi2Daugther1;
            float VtxNDFDaugther1;
            float _3DCosPointingAngleDaugther1;
            float _3DPointingAngleDaugther1;
            float _2DCosPointingAngleDaugther1;
            float _2DPointingAngleDaugther1;
            float _3DDecayLengthSignificanceDaugther1;
            float _3DDecayLengthDaugther1;
            float _3DDecayLengthErrorDaugther1;
            float _2DDecayLengthSignificanceDaugther1;
            float zDCASignificanceDaugther2;
            float xyDCASignificanceDaugther2;
            float NHitD2;
            bool HighPurityDaugther2;
            float pTD2;
            float EtaD2;
            float PhiD2;
            float pTerrD1;
            float pTerrD2;
            float dedxHarmonic2D2;
            float zDCASignificanceGrandDaugther1;
            float zDCASignificanceGrandDaugther2;
            float xyDCASignificanceGrandDaugther1;
            float xyDCASignificanceGrandDaugther2;
            float NHitGrandD1;
            float NHitGrandD2;
            bool HighPurityGrandDaugther1;
            bool HighPurityGrandDaugther2;
            float pTGrandD1;
            float pTGrandD2;
            float pTerrGrandD1;
            float pTerrGrandD2;
            float EtaGrandD1;
            float EtaGrandD2;
            float dedxHarmonic2GrandD1;
            float dedxHarmonic2GrandD2;
            // int candSize_gen;
            // float gen_pT;
            // float gen_eat;
            // float gen_y;
            // int gen_status;
            // int gen_MotherID;
            // int gen_DauID1;
            // int gen_DauID2;
            // int gen_DauID3;
            // float gen_D0pT;
            // float gen_D0eta;
            // float gen_D0phi;
            // float gen_D0mass;
            // float gen_D0y;
            // float gen_D0charge;
            // float gen_D0pdgId;
            // float gen_D0Dau1_pT;
            // float gen_D0Dau1_eta;
            // float gen_D0Dau1_phi;
            // float gen_D0Dau1_mass;
            // float gen_D0Dau1_y;
            // float gen_D0Dau1_charge;
            // float gen_D0Dau1_pdgId;
            // float gen_D0Dau2_pT;
            // float gen_D0Dau2_eta;
            // float gen_D0Dau2_phi;
            // float gen_D0Dau2_mass;
            // float gen_D0Dau2_y;
            // float gen_D0Dau2_charge;
            // float gen_D0Dau2_pdgId;
            // float gen_D1pT;
            // float gen_D1eta;
            // float gen_D1phi;
            // float gen_D1mass;
            // float gen_D1y;
            // float gen_D1charge;
            // float gen_D1pdgI;
            simpleDStarDataTreeflat* getEventHandle(){ return this;}
            template <typename T>
        void setOutputTree(T *t){
            t->Branch("Ntrkoffline",&Ntrkoffline);
            t->Branch("Npixel",&Npixel);
            t->Branch("HFsumETPlus",&HFsumETPlus);
            t->Branch("HFsumETMinus",&HFsumETMinus);
            t->Branch("ZDCPlus",&ZDCPlus);
            t->Branch("ZDCMinus",&ZDCMinus);
            t->Branch("bestvtxX",&bestvtxX);
            t->Branch("bestvtxY",&bestvtxY);
            t->Branch("bestvtxZ",&bestvtxZ);
            t->Branch("candSize",&candSize);
            t->Branch("pT",&pT);
            t->Branch("y",&y);
            t->Branch("eta",&eta);
            t->Branch("phi",&phi);
            t->Branch("mass",&mass);
            t->Branch("flavor",&flavor);
            t->Branch("VtxProb",&VtxProb);
            t->Branch("VtxChi2",&VtxChi2);
            t->Branch("VtxNDF",&VtxNDF);
            t->Branch("3DCosPointingAngle",&_3DCosPointingAngle);
            t->Branch("3DPointingAngle",&_3DPointingAngle);
            t->Branch("2DCosPointingAngle",&_2DCosPointingAngle);
            t->Branch("2DPointingAngle",&_2DPointingAngle);
            t->Branch("3DDecayLengthSignificance",&_3DDecayLengthSignificance);
            t->Branch("3DDecayLength",&_3DDecayLength);
            t->Branch("2DDecayLengthSignificance",&_2DDecayLengthSignificance);
            t->Branch("2DDecayLength",&_2DDecayLength);
            t->Branch("massDaugther1",&massDaugther1);
            t->Branch("pTD1",&pTD1);
            t->Branch("EtaD1",&EtaD1);
            t->Branch("PhiD1",&PhiD1);
            t->Branch("VtxProbDaugther1",&VtxProbDaugther1);
            t->Branch("VtxChi2Daugther1",&VtxChi2Daugther1);
            t->Branch("VtxNDFDaugther1",&VtxNDFDaugther1);
            t->Branch("3DCosPointingAngleDaugther1",&_3DCosPointingAngleDaugther1);
            t->Branch("3DPointingAngleDaugther1",&_3DPointingAngleDaugther1);
            t->Branch("2DCosPointingAngleDaugther1",&_2DCosPointingAngleDaugther1);
            t->Branch("2DPointingAngleDaugther1",&_2DPointingAngleDaugther1);
            t->Branch("3DDecayLengthSignificanceDaugther1",&_3DDecayLengthSignificanceDaugther1);
            t->Branch("3DDecayLengthDaugther1",&_3DDecayLengthDaugther1);
            t->Branch("3DDecayLengthErrorDaugther1",&_3DDecayLengthErrorDaugther1);
            t->Branch("2DDecayLengthSignificanceDaugther1",&_2DDecayLengthSignificanceDaugther1);
            t->Branch("zDCASignificanceDaugther2",&zDCASignificanceDaugther2);
            t->Branch("xyDCASignificanceDaugther2",&xyDCASignificanceDaugther2);
            t->Branch("NHitD2",&NHitD2);
            t->Branch("HighPurityDaugther2",&HighPurityDaugther2);
            t->Branch("pTD2",&pTD2);
            t->Branch("EtaD2",&EtaD2);
            t->Branch("PhiD2",&PhiD2);
            t->Branch("pTerrD1",&pTerrD1);
            t->Branch("pTerrD2",&pTerrD2);
            t->Branch("dedxHarmonic2D2",&dedxHarmonic2D2);
            t->Branch("zDCASignificanceGrandDaugther1",&zDCASignificanceGrandDaugther1);
            t->Branch("zDCASignificanceGrandDaugther2",&zDCASignificanceGrandDaugther2);
            t->Branch("xyDCASignificanceGrandDaugther1",&xyDCASignificanceGrandDaugther1);
            t->Branch("xyDCASignificanceGrandDaugther2",&xyDCASignificanceGrandDaugther2);
            t->Branch("NHitGrandD1",&NHitGrandD1);
            t->Branch("NHitGrandD2",&NHitGrandD2);
            t->Branch("HighPurityGrandDaugther1",&HighPurityGrandDaugther1);
            t->Branch("HighPurityGrandDaugther2",&HighPurityGrandDaugther2);
            t->Branch("pTGrandD1",&pTGrandD1);
            t->Branch("pTGrandD2",&pTGrandD2);
            t->Branch("pTerrGrandD1",&pTerrGrandD1);
            t->Branch("pTerrGrandD2",&pTerrGrandD2);
            t->Branch("EtaGrandD1",&EtaGrandD1);
            t->Branch("EtaGrandD2",&EtaGrandD2);
            t->Branch("dedxHarmonic2GrandD1",&dedxHarmonic2GrandD1);
            t->Branch("dedxHarmonic2GrandD2",&dedxHarmonic2GrandD2);
            // t->SetBranchAddress("candSize_gen",&candSize_gen);
            // t->SetBranchAddress("gen_pT",&gen_pT);
            // t->SetBranchAddress("gen_eat",&gen_eat);
            // t->SetBranchAddress("gen_y",&gen_y);
            // t->SetBranchAddress("gen_status",&gen_status);
            // t->SetBranchAddress("gen_MotherID",&gen_MotherID);
            // t->SetBranchAddress("gen_DauID1",&gen_DauID1);
            // t->SetBranchAddress("gen_DauID2",&gen_DauID2);
            // t->SetBranchAddress("gen_DauID3",&gen_DauID3);
            // t->SetBranchAddress("gen_D0pT",&gen_D0pT);
            // t->SetBranchAddress("gen_D0eta",&gen_D0eta);
            // t->SetBranchAddress("gen_D0phi",&gen_D0phi);
            // t->SetBranchAddress("gen_D0mass",&gen_D0mass);
            // t->SetBranchAddress("gen_D0y",&gen_D0y);
            // t->SetBranchAddress("gen_D0charge",&gen_D0charge);
            // t->SetBranchAddress("gen_D0pdgId",&gen_D0pdgId);
            // t->SetBranchAddress("gen_D0Dau1_pT",&gen_D0Dau1_pT);
            // t->SetBranchAddress("gen_D0Dau1_eta",&gen_D0Dau1_eta);
            // t->SetBranchAddress("gen_D0Dau1_phi",&gen_D0Dau1_phi);
            // t->SetBranchAddress("gen_D0Dau1_mass",&gen_D0Dau1_mass);
            // t->SetBranchAddress("gen_D0Dau1_y",&gen_D0Dau1_y);
            // t->SetBranchAddress("gen_D0Dau1_charge",&gen_D0Dau1_charge);
            // t->SetBranchAddress("gen_D0Dau1_pdgId",&gen_D0Dau1_pdgId);
            // t->SetBranchAddress("gen_D0Dau2_pT",&gen_D0Dau2_pT);
            // t->SetBranchAddress("gen_D0Dau2_eta",&gen_D0Dau2_eta);
            // t->SetBranchAddress("gen_D0Dau2_phi",&gen_D0Dau2_phi);
            // t->SetBranchAddress("gen_D0Dau2_mass",&gen_D0Dau2_mass);
            // t->SetBranchAddress("gen_D0Dau2_y",&gen_D0Dau2_y);
            // t->SetBranchAddress("gen_D0Dau2_charge",&gen_D0Dau2_charge);
            // t->SetBranchAddress("gen_D0Dau2_pdgId",&gen_D0Dau2_pdgId);
            // t->SetBranchAddress("gen_D1pT",&gen_D1pT);
            // t->SetBranchAddress("gen_D1eta",&gen_D1eta);
            // t->SetBranchAddress("gen_D1phi",&gen_D1phi);
            // t->SetBranchAddress("gen_D1mass",&gen_D1mass);
            // t->SetBranchAddress("gen_D1y",&gen_D1y);
            // t->SetBranchAddress("gen_D1charge",&gen_D1charge);
            // t->SetBranchAddress("gen_D1pdgId",&gen_D1pdgId);
    };
        void copyDn( simpleDStarDataTreeevt& evt, int idx){
            Ntrkoffline=evt.Ntrkoffline;
            Npixel=evt.Npixel;
            HFsumETPlus=evt.HFsumETPlus;
            HFsumETMinus=evt.HFsumETMinus;
            ZDCPlus=evt.ZDCPlus;
            ZDCMinus=evt.ZDCMinus;
            bestvtxX=evt.bestvtxX;
            bestvtxY=evt.bestvtxY;
            bestvtxZ=evt.bestvtxZ;
            candSize=evt.candSize;
            pT=evt.pT[idx];
            y=evt.y[idx];
            eta=evt.eta[idx];
            phi=evt.phi[idx];
            mass=evt.mass[idx];
            flavor=evt.flavor[idx];
            VtxProb=evt.VtxProb[idx];
            VtxChi2=evt.VtxChi2[idx];
            VtxNDF=evt.VtxNDF[idx];
            _3DCosPointingAngle=evt._3DCosPointingAngle[idx];
            _3DPointingAngle=evt._3DPointingAngle[idx];
            _2DCosPointingAngle=evt._2DCosPointingAngle[idx];
            _2DPointingAngle=evt._2DPointingAngle[idx];
            _3DDecayLengthSignificance=evt._3DDecayLengthSignificance[idx];
            _3DDecayLength=evt._3DDecayLength[idx];
            _2DDecayLengthSignificance=evt._2DDecayLengthSignificance[idx];
            _2DDecayLength=evt._2DDecayLength[idx];
            massDaugther1=evt.massDaugther1[idx];
            pTD1=evt.pTD1[idx];
            EtaD1=evt.EtaD1[idx];
            PhiD1=evt.PhiD1[idx];
            VtxProbDaugther1=evt.VtxProbDaugther1[idx];
            VtxChi2Daugther1=evt.VtxChi2Daugther1[idx];
            VtxNDFDaugther1=evt.VtxNDFDaugther1[idx];
            _3DCosPointingAngleDaugther1=evt._3DCosPointingAngleDaugther1[idx];
            _3DPointingAngleDaugther1=evt._3DPointingAngleDaugther1[idx];
            _2DCosPointingAngleDaugther1=evt._2DCosPointingAngleDaugther1[idx];
            _2DPointingAngleDaugther1=evt._2DPointingAngleDaugther1[idx];
            _3DDecayLengthSignificanceDaugther1=evt._3DDecayLengthSignificanceDaugther1[idx];
            _3DDecayLengthDaugther1=evt._3DDecayLengthDaugther1[idx];
            _3DDecayLengthErrorDaugther1=evt._3DDecayLengthErrorDaugther1[idx];
            _2DDecayLengthSignificanceDaugther1=evt._2DDecayLengthSignificanceDaugther1[idx];
            zDCASignificanceDaugther2=evt.zDCASignificanceDaugther2[idx];
            xyDCASignificanceDaugther2=evt.xyDCASignificanceDaugther2[idx];
            NHitD2=evt.NHitD2[idx];
            HighPurityDaugther2=evt.HighPurityDaugther2[idx];
            pTD2=evt.pTD2[idx];
            EtaD2=evt.EtaD2[idx];
            PhiD2=evt.PhiD2[idx];
            pTerrD1=evt.pTerrD1[idx];
            pTerrD2=evt.pTerrD2[idx];
            dedxHarmonic2D2=evt.dedxHarmonic2D2[idx];
            zDCASignificanceGrandDaugther1=evt.zDCASignificanceGrandDaugther1[idx];
            zDCASignificanceGrandDaugther2=evt.zDCASignificanceGrandDaugther2[idx];
            xyDCASignificanceGrandDaugther1=evt.xyDCASignificanceGrandDaugther1[idx];
            xyDCASignificanceGrandDaugther2=evt.xyDCASignificanceGrandDaugther2[idx];
            NHitGrandD1=evt.NHitGrandD1[idx];
            NHitGrandD2=evt.NHitGrandD2[idx];
            HighPurityGrandDaugther1=evt.HighPurityGrandDaugther1[idx];
            HighPurityGrandDaugther2=evt.HighPurityGrandDaugther2[idx];
            pTGrandD1=evt.pTGrandD1[idx];
            pTGrandD2=evt.pTGrandD2[idx];
            pTerrGrandD1=evt.pTerrGrandD1[idx];
            pTerrGrandD2=evt.pTerrGrandD2[idx];
            EtaGrandD1=evt.EtaGrandD1[idx];
            EtaGrandD2=evt.EtaGrandD2[idx];
            dedxHarmonic2GrandD1=evt.dedxHarmonic2GrandD1[idx];
            dedxHarmonic2GrandD2=evt.dedxHarmonic2GrandD2[idx];
            };
};
    struct simpleDMCNtpevt{
        public:
            int Ntrkoffline ;
            int Npixel    ;
            float HFsumET   ;
            float bestvtxX  ;
            float bestvtxY  ;
            float bestvtxZ  ;
            int candSize  ;
            float pT;                                         
            float y;                                          
            float eta;                                        
            float phi;                                        
            float mass;                                       
            float mva;                                        
            float flavor;                                     
            float VtxProb;                                    
            float v3DCosPointingAngle ;
            float v3DPointingAngle ;
            float v2DCosPointingAngle ;
            float v2DPointingAngle ;
            float v3DDecayLengthSignificance ;
            float v3DDecayLength ;
            float v2DDecayLengthSignificance ;
            float v2DDecayLength ;
            float zDCASignificanceDaugther1 ;
            float xyDCASignificanceDaugther1 ;
            float NHitD1    ;
            bool HighPurityDaugther1 ;
            float pTD1      ;
            float pTerrD1   ;
            float EtaD1     ;
            float PhiD1     ;
            float dedxHarmonic2D1 ;
            float zDCASignificanceDaugther2 ;
            float xyDCASignificanceDaugther2 ;
            float NHitD2    ;
            bool HighPurityDaugther2 ;
            float pTD2      ;
            float pTerrD2   ;
            float EtaD2     ;
            float PhiD2     ;
            float dedxHarmonic2D2 ;
            bool        isSwap    ;
            int        idmom_reco ;
            bool        matchGEN  ;
            int        gen_ancestorFlavor ;
            int        gen_ancestorId ;
            float        gen_PVx_  ;
            float        gen_PVy   ;
            float        gen_PVz   ;
            float        gen_pT    ;
            float        gen_eta   ;
            float        gen_phi   ;
            float        gen_mass  ;
            float        gen_y     ;
            float        gen_decayLength3D ;
            float        gen_decayLength2D ;
            float        gen_angle3D ;
            float        gen_angle2D ;
            float        gen_pTD1  ;
            float        gen_etaD1 ;
            float        gen_phiD1 ;
            float        gen_massD1 ;
            float        gen_yD1   ;
            float        gen_chargeD1 ;
            float        gen_pdgIdD1 ;
            float        gen_pTD2  ;
            float        gen_etaD2 ;
            float        gen_phiD2 ;
            float        gen_massD2 ;
            float        gen_yD2   ;
            float        gen_chargeD2 ;
            float        gen_pdgIdD2 ;
            simpleDMCNtpevt* getEventHandle(){ return this;}

            template <typename T>
            void setTree(T* t){
                t->SetBranchAddress("Ntrkoffline", &Ntrkoffline) ;
                t->SetBranchAddress("Npixel", &Npixel)    ;
                t->SetBranchAddress("HFsumET", &HFsumET)   ;
                t->SetBranchAddress("bestvtxX", &bestvtxX)  ;
                t->SetBranchAddress("bestvtxY", &bestvtxY)  ;
                t->SetBranchAddress("bestvtxZ", &bestvtxZ)  ;
                t->SetBranchAddress("candSize", &candSize)  ;
                t->SetBranchAddress("pT", &pT);                                         
                t->SetBranchAddress("y", &y);                                          
                t->SetBranchAddress("eta", &eta);                                        
                t->SetBranchAddress("phi", &phi);                                        
                t->SetBranchAddress("mass", &mass);                                       
                t->SetBranchAddress("mva", &mva);                                        
                t->SetBranchAddress("flavor", &flavor);                                     
                t->SetBranchAddress("VtxProb", &VtxProb);                                    
                t->SetBranchAddress("3DCosPointingAngle", &v3DCosPointingAngle) ;
                t->SetBranchAddress("3DPointingAngle", &v3DPointingAngle) ;
                t->SetBranchAddress("2DCosPointingAngle", &v2DCosPointingAngle) ;
                t->SetBranchAddress("2DPointingAngle", &v2DPointingAngle) ;
                t->SetBranchAddress("3DDecayLengthSignificance", &v3DDecayLengthSignificance) ;
                t->SetBranchAddress("3DDecayLength", &v3DDecayLength) ;
                t->SetBranchAddress("2DDecayLengthSignificance", &v2DDecayLengthSignificance) ;
                t->SetBranchAddress("2DDecayLength", &v2DDecayLength) ;
                t->SetBranchAddress("zDCASignificanceDaugther1", &zDCASignificanceDaugther1) ;
                t->SetBranchAddress("xyDCASignificanceDaugther1", &xyDCASignificanceDaugther1) ;
                t->SetBranchAddress("NHitD1", &NHitD1)    ;
                t->SetBranchAddress("HighPurityDaugther1", &HighPurityDaugther1) ;
                t->SetBranchAddress("pTD1", &pTD1)      ;
                t->SetBranchAddress("pTerrD1", &pTerrD1)   ;
                t->SetBranchAddress("EtaD1", &EtaD1)     ;
                t->SetBranchAddress("PhiD1", &PhiD1)     ;
                t->SetBranchAddress("dedxHarmonic2D1", &dedxHarmonic2D1) ;
                t->SetBranchAddress("zDCASignificanceDaugther2", &zDCASignificanceDaugther2) ;
                t->SetBranchAddress("xyDCASignificanceDaugther2", &xyDCASignificanceDaugther2) ;
                t->SetBranchAddress("NHitD2", &NHitD2)    ;
                t->SetBranchAddress("HighPurityDaugther2", &HighPurityDaugther2) ;
                t->SetBranchAddress("pTD2", &pTD2)      ;
                t->SetBranchAddress("pTerrD2", &pTerrD2)   ;
                t->SetBranchAddress("EtaD2", &EtaD2)     ;
                t->SetBranchAddress("PhiD2", &PhiD2)     ;
                t->SetBranchAddress("dedxHarmonic2D2", &dedxHarmonic2D2) ;
            	t->SetBranchAddress("isSwap", &isSwap)    ;
            	t->SetBranchAddress("idmom_reco", &idmom_reco) ;
            	t->SetBranchAddress("matchGEN", &matchGEN)  ;
            	t->SetBranchAddress("gen_ancestorFlavor", &gen_ancestorFlavor) ;
            	t->SetBranchAddress("gen_ancestorId", &gen_ancestorId) ;
            	t->SetBranchAddress("gen_PVx_", &gen_PVx_)  ;
            	t->SetBranchAddress("gen_PVy", &gen_PVy)   ;
            	t->SetBranchAddress("gen_PVz", &gen_PVz)   ;
            	t->SetBranchAddress("gen_pT", &gen_pT)    ;
            	t->SetBranchAddress("gen_eta", &gen_eta)   ;
            	t->SetBranchAddress("gen_phi", &gen_phi)   ;
            	t->SetBranchAddress("gen_mass", &gen_mass)  ;
            	t->SetBranchAddress("gen_y", &gen_y)     ;
            	t->SetBranchAddress("gen_decayLength3D", &gen_decayLength3D) ;
            	t->SetBranchAddress("gen_decayLength2D", &gen_decayLength2D) ;
            	t->SetBranchAddress("gen_angle3D", &gen_angle3D) ;
            	t->SetBranchAddress("gen_angle2D", &gen_angle2D) ;
            	t->SetBranchAddress("gen_pTD1", &gen_pTD1)  ;
            	t->SetBranchAddress("gen_etaD1", &gen_etaD1) ;
            	t->SetBranchAddress("gen_phiD1", &gen_phiD1) ;
            	t->SetBranchAddress("gen_massD1", &gen_massD1) ;
            	t->SetBranchAddress("gen_yD1", &gen_yD1)   ;
            	t->SetBranchAddress("gen_chargeD1", &gen_chargeD1) ;
            	t->SetBranchAddress("gen_pdgIdD1", &gen_pdgIdD1) ;
            	t->SetBranchAddress("gen_pTD2", &gen_pTD2)  ;
            	t->SetBranchAddress("gen_etaD2", &gen_etaD2) ;
            	t->SetBranchAddress("gen_phiD2", &gen_phiD2) ;
            	t->SetBranchAddress("gen_massD2", &gen_massD2) ;
            	t->SetBranchAddress("gen_yD2", &gen_yD2)   ;
            	t->SetBranchAddress("gen_chargeD2", &gen_chargeD2) ;
            	t->SetBranchAddress("gen_pdgIdD2", &gen_pdgIdD2) ;
            };
            void setOutputTree(TTree* t){
                t->Branch("Ntrkoffline",&Ntrkoffline) ;
                t->Branch("Npixel",&Npixel)    ;
                t->Branch("HFsumET",&HFsumET)   ;
                t->Branch("bestvtxX",&bestvtxX)  ;
                t->Branch("bestvtxY",&bestvtxY)  ;
                t->Branch("bestvtxZ",&bestvtxZ)  ;
                t->Branch("candSize",&candSize)  ;
                t->Branch("pT",&pT);                                         
                t->Branch("y",&y);                                          
                t->Branch("eta",&eta);                                        
                t->Branch("phi",&phi);                                        
                t->Branch("mass",&mass);                                       
                t->Branch("mva",&mva);                                        
                t->Branch("flavor",&flavor);                                     
                t->Branch("VtxProb",&VtxProb);                                    
                t->Branch("v3DCosPointingAngle",&v3DCosPointingAngle) ;
                t->Branch("v3DPointingAngle",&v3DPointingAngle) ;
                t->Branch("v2DCosPointingAngle",&v2DCosPointingAngle) ;
                t->Branch("v2DPointingAngle",&v2DPointingAngle) ;
                t->Branch("v3DDecayLengthSignificance",&v3DDecayLengthSignificance) ;
                t->Branch("v3DDecayLength",&v3DDecayLength) ;
                t->Branch("v2DDecayLengthSignificance",&v2DDecayLengthSignificance) ;
                t->Branch("v2DDecayLength",&v2DDecayLength) ;
                t->Branch("zDCASignificanceDaugther1",&zDCASignificanceDaugther1) ;
                t->Branch("xyDCASignificanceDaugther1",&xyDCASignificanceDaugther1) ;
                t->Branch("NHitD1",&NHitD1)    ;
                t->Branch("HighPurityDaugther1",&HighPurityDaugther1) ;
                t->Branch("pTD1",&pTD1)      ;
                t->Branch("pTerrD1",&pTerrD1)   ;
                t->Branch("EtaD1",&EtaD1)     ;
                t->Branch("PhiD1",&PhiD1)     ;
                t->Branch("dedxHarmonic2D1",&dedxHarmonic2D1) ;
                t->Branch("zDCASignificanceDaugther2",&zDCASignificanceDaugther2) ;
                t->Branch("xyDCASignificanceDaugther2",&xyDCASignificanceDaugther2) ;
                t->Branch("NHitD2",&NHitD2)    ;
                t->Branch("HighPurityDaugther2",&HighPurityDaugther2) ;
                t->Branch("pTD2",&pTD2)      ;
                t->Branch("pTerrD2",&pTerrD2)   ;
                t->Branch("EtaD2",&EtaD2)     ;
                t->Branch("PhiD2",&PhiD2)     ;
                t->Branch("dedxHarmonic2D2",&dedxHarmonic2D2) ;
            	t->Branch("isSwap",&isSwap)    ;
            	t->Branch("idmom_reco",&idmom_reco) ;
            	t->Branch("matchGEN",&matchGEN)  ;
            	t->Branch("gen_ancestorFlavor",&gen_ancestorFlavor) ;
            	t->Branch("gen_ancestorId",&gen_ancestorId) ;
            	t->Branch("gen_PVx_",&gen_PVx_)  ;
            	t->Branch("gen_PVy",&gen_PVy)   ;
            	t->Branch("gen_PVz",&gen_PVz)   ;
            	t->Branch("gen_pT",&gen_pT)    ;
            	t->Branch("gen_eta",&gen_eta)   ;
            	t->Branch("gen_phi",&gen_phi)   ;
            	t->Branch("gen_mass",&gen_mass)  ;
            	t->Branch("gen_y",&gen_y)     ;
            	t->Branch("gen_decayLength3D",&gen_decayLength3D) ;
            	t->Branch("gen_decayLength2D",&gen_decayLength2D) ;
            	t->Branch("gen_angle3D",&gen_angle3D) ;
            	t->Branch("gen_angle2D",&gen_angle2D) ;
            	t->Branch("gen_pTD1",&gen_pTD1)  ;
            	t->Branch("gen_etaD1",&gen_etaD1) ;
            	t->Branch("gen_phiD1",&gen_phiD1) ;
            	t->Branch("gen_massD1",&gen_massD1) ;
            	t->Branch("gen_yD1",&gen_yD1)   ;
            	t->Branch("gen_chargeD1",&gen_chargeD1) ;
            	t->Branch("gen_pdgIdD1",&gen_pdgIdD1) ;
            	t->Branch("gen_pTD2",&gen_pTD2)  ;
            	t->Branch("gen_etaD2",&gen_etaD2) ;
            	t->Branch("gen_phiD2",&gen_phiD2) ;
            	t->Branch("gen_massD2",&gen_massD2) ;
            	t->Branch("gen_yD2",&gen_yD2)   ;
            	t->Branch("gen_chargeD2",&gen_chargeD2) ;
            	t->Branch("gen_pdgIdD2",&gen_pdgIdD2) ;
            };
    };
    struct simpleDMCTreeevt{
        protected:
            static const int MAXCAND = __MAXCAND_MC__;
        public:
            int Ntrkoffline ;
            int Npixel    ;
            float HFsumET   ;
            float bestvtxX  ;
            float bestvtxY  ;
            float bestvtxZ  ;
            int candSize  ;

            float pT[MAXCAND]        ;
            float y[MAXCAND]         ;
            float eta[MAXCAND]       ;
            float phi[MAXCAND]       ;
            float mass[MAXCAND]      ;
            float mva[MAXCAND]       ;
            float dca3D[MAXCAND]     ;
            float dcaErr3D[MAXCAND]  ;
            float flavor[MAXCAND]    ;
            float VtxProb[MAXCAND]   ;
            float v3DCosPointingAngle[MAXCAND] ;
            float v3DPointingAngle[MAXCAND] ;
            float v2DCosPointingAngle[MAXCAND] ;
            float v2DPointingAngle[MAXCAND] ;
            float v3DDecayLengthSignificance[MAXCAND] ;
            float v3DDecayLength[MAXCAND] ;
            float v2DDecayLengthSignificance[MAXCAND] ;
            float v2DDecayLength[MAXCAND] ;
            bool  isSwap[MAXCAND]    ;
            int   idmom_reco[MAXCAND] ;
            int idmom_reco1[MAXCAND];
            int idBAnc_reco1[MAXCAND];
            int matchToGen1[MAXCAND];
            float isSwap1[MAXCAND];
            bool matchGEN1[MAXCAND];
            bool  matchGEN[MAXCAND]  ;

            float gen_D1ancestorFlavor[MAXCAND];
            float gen_D1ancestorId[MAXCAND];
            float gen_D1PVx[MAXCAND];
            float gen_D1PVy[MAXCAND];
            float gen_D1PVz[MAXCAND];
            float gen_D1pT[MAXCAND];
            float gen_D1eta[MAXCAND];
            float gen_D1phi[MAXCAND];
            float gen_D1mass[MAXCAND];
            float gen_D1y[MAXCAND];
            float gen_D1charge[MAXCAND];
            float gen_D1pdgId[MAXCAND];
            float gen_D1decayLength3D[MAXCAND];
            float gen_D1decayLength2D[MAXCAND];
            float gen_D1angle3D[MAXCAND];
            float gen_D1angle2D[MAXCAND];
            float gen_D1pTD1[MAXCAND];
            float gen_D1etaD1[MAXCAND];
            float gen_D1phiD1[MAXCAND];
            float gen_D1massD1[MAXCAND];
            float gen_D1yD1[MAXCAND];
            float gen_D1chargeD1[MAXCAND];
            float gen_D1pdgIdD1[MAXCAND];
            float gen_D1pTD2[MAXCAND];
            float gen_D1etaD2[MAXCAND];
            float gen_D1phiD2[MAXCAND];
            float gen_D1massD2[MAXCAND];
            float gen_D1yD2[MAXCAND];
            float gen_D1chargeD2[MAXCAND];
            float gen_D1pdgIdD2[MAXCAND];
            float zDCASignificancedaughter1[MAXCAND];
            float xyDCASignificancedaughter1[MAXCAND];
            float NHitD1[MAXCAND];
            float HighPuritydaughter1[MAXCAND];
            float pTD1[MAXCAND];
            float pTerrD1[MAXCAND];
            float EtaD1[MAXCAND];
            float YD1[MAXCAND];
            float PhiD1[MAXCAND];
            float zDCASignificancedaughter2[MAXCAND];
            float xyDCASignificancedaughter2[MAXCAND];
            float NHitD2[MAXCAND];
            float HighPuritydaughter2[MAXCAND];
            float pTD2[MAXCAND];
            float pTerrD2[MAXCAND];
            float EtaD2[MAXCAND];
            float YD2[MAXCAND];
            float PhiD2[MAXCAND];
            int candSize_gen;
            float id_gen[MAXCAND];
            float mass_gen[MAXCAND];
            float pT_gen[MAXCAND];
            float eta_gen[MAXCAND];
            float phi_gen[MAXCAND];
            float y_gen[MAXCAND];
            bool status_gen[MAXCAND];
            int MotherID_gen[MAXCAND];
            int MotherPt_gen[MAXCAND];
            int MotherEta_gen[MAXCAND];
            int MotherPhi_gen[MAXCAND];
            int MotherY_gen[MAXCAND];
            int MotherStatus_gen[MAXCAND];
            int dl2D_gen[MAXCAND];
            int dl3D_gen[MAXCAND];
            int angle2D_gen[MAXCAND];
            int angle3D_gen[MAXCAND];
            int DauID1_gen[MAXCAND];
            int DauID2_gen[MAXCAND];
            int DauID3_gen[MAXCAND];


            simpleDMCTreeevt* getEventHandle(){ return this;}

            template <typename T>
            void setTree(T* t){
                t->SetBranchAddress("Ntrkoffline", &Ntrkoffline) ;
                t->SetBranchAddress("Npixel", &Npixel)    ;
                t->SetBranchAddress("HFsumET", &HFsumET)   ;
                t->SetBranchAddress("bestvtxX", &bestvtxX)  ;
                t->SetBranchAddress("bestvtxY", &bestvtxY)  ;
                t->SetBranchAddress("bestvtxZ", &bestvtxZ)  ;
                t->SetBranchAddress("candSize", &candSize)  ;

                t->SetBranchAddress("pT", &pT)        ;
                t->SetBranchAddress("y", &y)         ;
                t->SetBranchAddress("eta", &eta)       ;
                t->SetBranchAddress("phi", &phi)       ;
                t->SetBranchAddress("mass", &mass)      ;
                t->SetBranchAddress("mva", &mva)       ;
                t->SetBranchAddress("dca3D", &dca3D)     ;
                t->SetBranchAddress("dcaErr3D", &dcaErr3D)  ;
                t->SetBranchAddress("flavor", &flavor)    ;
                t->SetBranchAddress("VtxProb", &VtxProb)   ;
                t->SetBranchAddress("3DCosPointingAngle", &v3DCosPointingAngle) ;
                t->SetBranchAddress("3DPointingAngle", &v3DPointingAngle) ;
                t->SetBranchAddress("2DCosPointingAngle", &v2DCosPointingAngle) ;
                t->SetBranchAddress("2DPointingAngle", &v2DPointingAngle) ;
                t->SetBranchAddress("3DDecayLengthSignificance", &v3DDecayLengthSignificance) ;
                t->SetBranchAddress("3DDecayLength", &v3DDecayLength) ;
                t->SetBranchAddress("2DDecayLengthSignificance", &v2DDecayLengthSignificance) ;
                t->SetBranchAddress("2DDecayLength", &v2DDecayLength) ;
                t->SetBranchAddress("isSwap", &isSwap)    ;
                t->SetBranchAddress("idmom_reco", &idmom_reco) ;
                t->SetBranchAddress("matchGEN", &matchGEN)  ;
            	t->SetBranchAddress("idmom_reco1", &idmom_reco1);
            	t->SetBranchAddress("idBAnc_reco1", &idBAnc_reco1);
            	t->SetBranchAddress("matchToGen1", &matchToGen1);
            	t->SetBranchAddress("isSwap1", &isSwap1);
            	t->SetBranchAddress("matchGEN1", &matchGEN1);
            	t->SetBranchAddress("matchGEN", &matchGEN);

				t->SetBranchAddress("gen_D1ancestorFlavor", &gen_D1ancestorFlavor);
				t->SetBranchAddress("gen_D1ancestorId", &gen_D1ancestorId);
				t->SetBranchAddress("gen_D1PVx", &gen_D1PVx);
				t->SetBranchAddress("gen_D1PVy", &gen_D1PVy);
				t->SetBranchAddress("gen_D1PVz", &gen_D1PVz);
				t->SetBranchAddress("gen_D1pT", &gen_D1pT);
				t->SetBranchAddress("gen_D1eta", &gen_D1eta);
				t->SetBranchAddress("gen_D1phi", &gen_D1phi);
				t->SetBranchAddress("gen_D1mass", &gen_D1mass);
				t->SetBranchAddress("gen_D1y", &gen_D1y);
				t->SetBranchAddress("gen_D1charge", &gen_D1charge);
				t->SetBranchAddress("gen_D1pdgId", &gen_D1pdgId);
				t->SetBranchAddress("gen_D1decayLength3D", &gen_D1decayLength3D);
				t->SetBranchAddress("gen_D1decayLength2D", &gen_D1decayLength2D);
				t->SetBranchAddress("gen_D1angle3D", &gen_D1angle3D);
				t->SetBranchAddress("gen_D1angle2D", &gen_D1angle2D);
				t->SetBranchAddress("gen_D1pTD1", &gen_D1pTD1);
				t->SetBranchAddress("gen_D1etaD1", &gen_D1etaD1);
				t->SetBranchAddress("gen_D1phiD1", &gen_D1phiD1);
				t->SetBranchAddress("gen_D1massD1", &gen_D1massD1);
				t->SetBranchAddress("gen_D1yD1", &gen_D1yD1);
				t->SetBranchAddress("gen_D1chargeD1", &gen_D1chargeD1);
				t->SetBranchAddress("gen_D1pdgIdD1", &gen_D1pdgIdD1);
				t->SetBranchAddress("gen_D1pTD2", &gen_D1pTD2);
				t->SetBranchAddress("gen_D1etaD2", &gen_D1etaD2);
				t->SetBranchAddress("gen_D1phiD2", &gen_D1phiD2);
				t->SetBranchAddress("gen_D1massD2", &gen_D1massD2);
				t->SetBranchAddress("gen_D1yD2", &gen_D1yD2);
				t->SetBranchAddress("gen_D1chargeD2", &gen_D1chargeD2);
				t->SetBranchAddress("gen_D1pdgIdD2", &gen_D1pdgIdD2);
				t->SetBranchAddress("zDCASignificancedaughter1", &zDCASignificancedaughter1);
				t->SetBranchAddress("xyDCASignificancedaughter1", &xyDCASignificancedaughter1);
				t->SetBranchAddress("NHitD1", &NHitD1);
				t->SetBranchAddress("HighPuritydaughter1", &HighPuritydaughter1);
				t->SetBranchAddress("pTD1", &pTD1);
				t->SetBranchAddress("pTerrD1", &pTerrD1);
				t->SetBranchAddress("EtaD1", &EtaD1);
				t->SetBranchAddress("YD1", &YD1);
				t->SetBranchAddress("PhiD1", &PhiD1);
				t->SetBranchAddress("zDCASignificancedaughter2", &zDCASignificancedaughter2);
				t->SetBranchAddress("xyDCASignificancedaughter2", &xyDCASignificancedaughter2);
				t->SetBranchAddress("NHitD2", &NHitD2);
				t->SetBranchAddress("HighPuritydaughter2", &HighPuritydaughter2);
				t->SetBranchAddress("pTD2", &pTD2);
				t->SetBranchAddress("pTerrD2", &pTerrD2);
				t->SetBranchAddress("EtaD2", &EtaD2);
				t->SetBranchAddress("YD2", &YD2);
				t->SetBranchAddress("PhiD2", &PhiD2);
				t->SetBranchAddress("candSize_gen", &candSize_gen);
				t->SetBranchAddress("id_gen", &id_gen);
				t->SetBranchAddress("mass_gen", &mass_gen);
				t->SetBranchAddress("pT_gen", &pT_gen);
				t->SetBranchAddress("eta_gen", &eta_gen);
				t->SetBranchAddress("phi_gen", &phi_gen);
				t->SetBranchAddress("y_gen", &y_gen);
				t->SetBranchAddress("status_gen", &status_gen);
				t->SetBranchAddress("MotherID_gen", &MotherID_gen);
				t->SetBranchAddress("MotherPt_gen", &MotherPt_gen);
				t->SetBranchAddress("MotherEta_gen", &MotherEta_gen);
				t->SetBranchAddress("MotherPhi_gen", &MotherPhi_gen);
				t->SetBranchAddress("MotherY_gen", &MotherY_gen);
				t->SetBranchAddress("MotherStatus_gen", &MotherStatus_gen);
				t->SetBranchAddress("dl2D_gen", &dl2D_gen);
				t->SetBranchAddress("dl3D_gen", &dl3D_gen);
				t->SetBranchAddress("angle2D_gen", &angle2D_gen);
				t->SetBranchAddress("angle3D_gen", &angle3D_gen);
				t->SetBranchAddress("DauID1_gen", &DauID1_gen);
				t->SetBranchAddress("DauID2_gen", &DauID2_gen);
				t->SetBranchAddress("DauID3_gen", &DauID3_gen);
            };
            
    };
    struct simpleDMCTreeflat{
        public:
            int Ntrkoffline ;
            int Npixel    ;
            float HFsumET   ;
            float bestvtxX  ;
            float bestvtxY  ;
            float bestvtxZ  ;
            int candSize  ;

            float pT        ;
            float y         ;
            float eta       ;
            float phi       ;
            float mass      ;
            float mva       ;
            float dca3D     ;
            float dcaErr3D  ;
            float flavor    ;
            float VtxProb   ;
            float v3DCosPointingAngle ;
            float v3DPointingAngle ;
            float v2DCosPointingAngle ;
            float v2DPointingAngle ;
            float v3DDecayLengthSignificance ;
            float v3DDecayLength ;
            float v2DDecayLengthSignificance ;
            float v2DDecayLength ;
            bool  isSwap    ;
            int   idmom_reco ;
            int idmom_reco1;
            int idBAnc_reco1;
            int matchToGen1;
            float isSwap1;
            bool matchGEN1;
            bool  matchGEN  ;
            bool isFlipped;

            float gen_D1ancestorFlavor;
            float gen_D1ancestorId;
            float gen_D1PVx;
            float gen_D1PVy;
            float gen_D1PVz;
            float gen_D1pT;
            float gen_D1eta;
            float gen_D1phi;
            float gen_D1mass;
            float gen_D1y;
            float gen_D1charge;
            float gen_D1pdgId;
            float gen_D1decayLength3D;
            float gen_D1decayLength2D;
            float gen_D1angle3D;
            float gen_D1angle2D;
            float gen_D1pTD1;
            float gen_D1etaD1;
            float gen_D1phiD1;
            float gen_D1massD1;
            float gen_D1yD1;
            float gen_D1chargeD1;
            float gen_D1pdgIdD1;
            float gen_D1pTD2;
            float gen_D1etaD2;
            float gen_D1phiD2;
            float gen_D1massD2;
            float gen_D1yD2;
            float gen_D1chargeD2;
            float gen_D1pdgIdD2;
            float zDCASignificancedaughter1;
            float xyDCASignificancedaughter1;
            float NHitD1;
            float HighPuritydaughter1;
            float pTD1;
            float pTerrD1;
            float EtaD1;
            float YD1;
            float PhiD1;
            float zDCASignificancedaughter2;
            float xyDCASignificancedaughter2;
            float NHitD2;
            float HighPuritydaughter2;
            float pTD2;
            float pTerrD2;
            float EtaD2;
            float YD2;
            float PhiD2;
            int candSize_gen;
            float id_gen;
            float mass_gen;
            float pT_gen;
            float eta_gen;
            float phi_gen;
            float y_gen;
            bool status_gen;
            int MotherID_gen;
            int MotherPt_gen;
            int MotherEta_gen;
            int MotherPhi_gen;
            int MotherY_gen;
            int MotherStatus_gen;
            int dl2D_gen;
            int dl3D_gen;
            int angle2D_gen;
            int angle3D_gen;
            int DauID1_gen;
            int DauID2_gen;
            int DauID3_gen;


            simpleDMCTreeflat* getEventHandle(){ return this;}

            template <typename T>
            void setTree(T* t){
                t->SetBranchAddress("Ntrkoffline", &Ntrkoffline) ;
                t->SetBranchAddress("Npixel", &Npixel)    ;
                t->SetBranchAddress("HFsumET", &HFsumET)   ;
                t->SetBranchAddress("bestvtxX", &bestvtxX)  ;
                t->SetBranchAddress("bestvtxY", &bestvtxY)  ;
                t->SetBranchAddress("bestvtxZ", &bestvtxZ)  ;
                t->SetBranchAddress("candSize", &candSize)  ;

                t->SetBranchAddress("pT", &pT)        ;
                t->SetBranchAddress("y", &y)         ;
                t->SetBranchAddress("eta", &eta)       ;
                t->SetBranchAddress("phi", &phi)       ;
                t->SetBranchAddress("mass", &mass)      ;
                t->SetBranchAddress("mva", &mva)       ;
                t->SetBranchAddress("dca3D", &dca3D)     ;
                t->SetBranchAddress("dcaErr3D", &dcaErr3D)  ;
                t->SetBranchAddress("flavor", &flavor)    ;
                t->SetBranchAddress("VtxProb", &VtxProb)   ;
                t->SetBranchAddress("3DCosPointingAngle", &v3DCosPointingAngle) ;
                t->SetBranchAddress("3DPointingAngle", &v3DPointingAngle) ;
                t->SetBranchAddress("2DCosPointingAngle", &v2DCosPointingAngle) ;
                t->SetBranchAddress("2DPointingAngle", &v2DPointingAngle) ;
                t->SetBranchAddress("3DDecayLengthSignificance", &v3DDecayLengthSignificance) ;
                t->SetBranchAddress("3DDecayLength", &v3DDecayLength) ;
                t->SetBranchAddress("2DDecayLengthSignificance", &v2DDecayLengthSignificance) ;
                t->SetBranchAddress("2DDecayLength", &v2DDecayLength) ;
                t->SetBranchAddress("isSwap", &isSwap)    ;
                t->SetBranchAddress("idmom_reco", &idmom_reco) ;
                t->SetBranchAddress("matchGEN", &matchGEN)  ;
            	t->SetBranchAddress("idmom_reco1", &idmom_reco1);
            	t->SetBranchAddress("idBAnc_reco1", &idBAnc_reco1);
            	t->SetBranchAddress("matchToGen1", &matchToGen1);
            	t->SetBranchAddress("isSwap1", &isSwap1);
            	t->SetBranchAddress("matchGEN1", &matchGEN1);
            	t->SetBranchAddress("matchGEN", &matchGEN);

				t->SetBranchAddress("gen_D1ancestorFlavor", &gen_D1ancestorFlavor);
				t->SetBranchAddress("gen_D1ancestorId", &gen_D1ancestorId);
				t->SetBranchAddress("gen_D1PVx", &gen_D1PVx);
				t->SetBranchAddress("gen_D1PVy", &gen_D1PVy);
				t->SetBranchAddress("gen_D1PVz", &gen_D1PVz);
				t->SetBranchAddress("gen_D1pT", &gen_D1pT);
				t->SetBranchAddress("gen_D1eta", &gen_D1eta);
				t->SetBranchAddress("gen_D1phi", &gen_D1phi);
				t->SetBranchAddress("gen_D1mass", &gen_D1mass);
				t->SetBranchAddress("gen_D1y", &gen_D1y);
				t->SetBranchAddress("gen_D1charge", &gen_D1charge);
				t->SetBranchAddress("gen_D1pdgId", &gen_D1pdgId);
				t->SetBranchAddress("gen_D1decayLength3D", &gen_D1decayLength3D);
				t->SetBranchAddress("gen_D1decayLength2D", &gen_D1decayLength2D);
				t->SetBranchAddress("gen_D1angle3D", &gen_D1angle3D);
				t->SetBranchAddress("gen_D1angle2D", &gen_D1angle2D);
				t->SetBranchAddress("gen_D1pTD1", &gen_D1pTD1);
				t->SetBranchAddress("gen_D1etaD1", &gen_D1etaD1);
				t->SetBranchAddress("gen_D1phiD1", &gen_D1phiD1);
				t->SetBranchAddress("gen_D1massD1", &gen_D1massD1);
				t->SetBranchAddress("gen_D1yD1", &gen_D1yD1);
				t->SetBranchAddress("gen_D1chargeD1", &gen_D1chargeD1);
				t->SetBranchAddress("gen_D1pdgIdD1", &gen_D1pdgIdD1);
				t->SetBranchAddress("gen_D1pTD2", &gen_D1pTD2);
				t->SetBranchAddress("gen_D1etaD2", &gen_D1etaD2);
				t->SetBranchAddress("gen_D1phiD2", &gen_D1phiD2);
				t->SetBranchAddress("gen_D1massD2", &gen_D1massD2);
				t->SetBranchAddress("gen_D1yD2", &gen_D1yD2);
				t->SetBranchAddress("gen_D1chargeD2", &gen_D1chargeD2);
				t->SetBranchAddress("gen_D1pdgIdD2", &gen_D1pdgIdD2);
				t->SetBranchAddress("zDCASignificancedaughter1", &zDCASignificancedaughter1);
				t->SetBranchAddress("xyDCASignificancedaughter1", &xyDCASignificancedaughter1);
				t->SetBranchAddress("NHitD1", &NHitD1);
				t->SetBranchAddress("HighPuritydaughter1", &HighPuritydaughter1);
				t->SetBranchAddress("pTD1", &pTD1);
				t->SetBranchAddress("pTerrD1", &pTerrD1);
				t->SetBranchAddress("EtaD1", &EtaD1);
				t->SetBranchAddress("YD1", &YD1);
				t->SetBranchAddress("PhiD1", &PhiD1);
				t->SetBranchAddress("zDCASignificancedaughter2", &zDCASignificancedaughter2);
				t->SetBranchAddress("xyDCASignificancedaughter2", &xyDCASignificancedaughter2);
				t->SetBranchAddress("NHitD2", &NHitD2);
				t->SetBranchAddress("HighPuritydaughter2", &HighPuritydaughter2);
				t->SetBranchAddress("pTD2", &pTD2);
				t->SetBranchAddress("pTerrD2", &pTerrD2);
				t->SetBranchAddress("EtaD2", &EtaD2);
				t->SetBranchAddress("YD2", &YD2);
				t->SetBranchAddress("PhiD2", &PhiD2);
				t->SetBranchAddress("candSize_gen", &candSize_gen);
				t->SetBranchAddress("id_gen", &id_gen);
				t->SetBranchAddress("mass_gen", &mass_gen);
				t->SetBranchAddress("pT_gen", &pT_gen);
				t->SetBranchAddress("eta_gen", &eta_gen);
				t->SetBranchAddress("phi_gen", &phi_gen);
				t->SetBranchAddress("y_gen", &y_gen);
				t->SetBranchAddress("status_gen", &status_gen);
				t->SetBranchAddress("MotherID_gen", &MotherID_gen);
				t->SetBranchAddress("MotherPt_gen", &MotherPt_gen);
				t->SetBranchAddress("MotherEta_gen", &MotherEta_gen);
				t->SetBranchAddress("MotherPhi_gen", &MotherPhi_gen);
				t->SetBranchAddress("MotherY_gen", &MotherY_gen);
				t->SetBranchAddress("MotherStatus_gen", &MotherStatus_gen);
				t->SetBranchAddress("dl2D_gen", &dl2D_gen);
				t->SetBranchAddress("dl3D_gen", &dl3D_gen);
				t->SetBranchAddress("angle2D_gen", &angle2D_gen);
				t->SetBranchAddress("angle3D_gen", &angle3D_gen);
				t->SetBranchAddress("DauID1_gen", &DauID1_gen);
				t->SetBranchAddress("DauID2_gen", &DauID2_gen);
				t->SetBranchAddress("DauID3_gen", &DauID3_gen);
            };
            void setOutputTree(TTree* t){
                t->Branch("Ntrkoffline", &Ntrkoffline) ;
                t->Branch("Npixel", &Npixel)    ;
                t->Branch("HFsumET", &HFsumET)   ;
                t->Branch("bestvtxX", &bestvtxX)  ;
                t->Branch("bestvtxY", &bestvtxY)  ;
                t->Branch("bestvtxZ", &bestvtxZ)  ;
                t->Branch("candSize", &candSize)  ;
                t->Branch("isFlipped", &isFlipped)  ;

                t->Branch("pT", &pT)        ;
                t->Branch("y", &y)         ;
                t->Branch("eta", &eta)       ;
                t->Branch("phi", &phi)       ;
                t->Branch("mass", &mass)      ;
                t->Branch("mva", &mva)       ;
                t->Branch("dca3D", &dca3D)     ;
                t->Branch("dcaErr3D", &dcaErr3D)  ;
                t->Branch("flavor", &flavor)    ;
                t->Branch("VtxProb", &VtxProb)   ;
                t->Branch("v3DCosPointingAngle", &v3DCosPointingAngle) ;
                t->Branch("v3DPointingAngle", &v3DPointingAngle) ;
                t->Branch("v2DCosPointingAngle", &v2DCosPointingAngle) ;
                t->Branch("v2DPointingAngle", &v2DPointingAngle) ;
                t->Branch("v3DDecayLengthSignificance", &v3DDecayLengthSignificance) ;
                t->Branch("v3DDecayLength", &v3DDecayLength) ;
                t->Branch("v2DDecayLengthSignificance", &v2DDecayLengthSignificance) ;
                t->Branch("v2DDecayLength", &v2DDecayLength) ;
                t->Branch("isSwap", &isSwap)    ;
                t->Branch("idmom_reco", &idmom_reco) ;
                t->Branch("matchGEN", &matchGEN)  ;
            	t->Branch("idmom_reco1", &idmom_reco1);
            	t->Branch("idBAnc_reco1", &idBAnc_reco1);
            	t->Branch("matchToGen1", &matchToGen1);
            	t->Branch("isSwap1", &isSwap1);
            	t->Branch("matchGEN1", &matchGEN1);
            	t->Branch("matchGEN", &matchGEN);

				t->Branch("gen_D1ancestorFlavor", &gen_D1ancestorFlavor);
				t->Branch("gen_D1ancestorId", &gen_D1ancestorId);
				t->Branch("gen_D1PVx", &gen_D1PVx);
				t->Branch("gen_D1PVy", &gen_D1PVy);
				t->Branch("gen_D1PVz", &gen_D1PVz);
				t->Branch("gen_D1pT", &gen_D1pT);
				t->Branch("gen_D1eta", &gen_D1eta);
				t->Branch("gen_D1phi", &gen_D1phi);
				t->Branch("gen_D1mass", &gen_D1mass);
				t->Branch("gen_D1y", &gen_D1y);
				t->Branch("gen_D1charge", &gen_D1charge);
				t->Branch("gen_D1pdgId", &gen_D1pdgId);
				t->Branch("gen_D1decayLength3D", &gen_D1decayLength3D);
				t->Branch("gen_D1decayLength2D", &gen_D1decayLength2D);
				t->Branch("gen_D1angle3D", &gen_D1angle3D);
				t->Branch("gen_D1angle2D", &gen_D1angle2D);
				t->Branch("gen_D1pTD1", &gen_D1pTD1);
				t->Branch("gen_D1etaD1", &gen_D1etaD1);
				t->Branch("gen_D1phiD1", &gen_D1phiD1);
				t->Branch("gen_D1massD1", &gen_D1massD1);
				t->Branch("gen_D1yD1", &gen_D1yD1);
				t->Branch("gen_D1chargeD1", &gen_D1chargeD1);
				t->Branch("gen_D1pdgIdD1", &gen_D1pdgIdD1);
				t->Branch("gen_D1pTD2", &gen_D1pTD2);
				t->Branch("gen_D1etaD2", &gen_D1etaD2);
				t->Branch("gen_D1phiD2", &gen_D1phiD2);
				t->Branch("gen_D1massD2", &gen_D1massD2);
				t->Branch("gen_D1yD2", &gen_D1yD2);
				t->Branch("gen_D1chargeD2", &gen_D1chargeD2);
				t->Branch("gen_D1pdgIdD2", &gen_D1pdgIdD2);
				t->Branch("zDCASignificancedaughter1", &zDCASignificancedaughter1);
				t->Branch("xyDCASignificancedaughter1", &xyDCASignificancedaughter1);
				t->Branch("NHitD1", &NHitD1);
				t->Branch("HighPuritydaughter1", &HighPuritydaughter1);
				t->Branch("pTD1", &pTD1);
				t->Branch("pTerrD1", &pTerrD1);
				t->Branch("EtaD1", &EtaD1);
				t->Branch("YD1", &YD1);
				t->Branch("PhiD1", &PhiD1);
				t->Branch("zDCASignificancedaughter2", &zDCASignificancedaughter2);
				t->Branch("xyDCASignificancedaughter2", &xyDCASignificancedaughter2);
				t->Branch("NHitD2", &NHitD2);
				t->Branch("HighPuritydaughter2", &HighPuritydaughter2);
				t->Branch("pTD2", &pTD2);
				t->Branch("pTerrD2", &pTerrD2);
				t->Branch("EtaD2", &EtaD2);
				t->Branch("YD2", &YD2);
				t->Branch("PhiD2", &PhiD2);
				t->Branch("candSize_gen", &candSize_gen);
				t->Branch("id_gen", &id_gen);
				t->Branch("mass_gen", &mass_gen);
				t->Branch("pT_gen", &pT_gen);
				t->Branch("eta_gen", &eta_gen);
				t->Branch("phi_gen", &phi_gen);
				t->Branch("y_gen", &y_gen);
				t->Branch("status_gen", &status_gen);
				t->Branch("MotherID_gen", &MotherID_gen);
				t->Branch("MotherPt_gen", &MotherPt_gen);
				t->Branch("MotherEta_gen", &MotherEta_gen);
				t->Branch("MotherPhi_gen", &MotherPhi_gen);
				t->Branch("MotherY_gen", &MotherY_gen);
				t->Branch("MotherStatus_gen", &MotherStatus_gen);
				t->Branch("dl2D_gen", &dl2D_gen);
				t->Branch("dl3D_gen", &dl3D_gen);
				t->Branch("angle2D_gen", &angle2D_gen);
				t->Branch("angle3D_gen", &angle3D_gen);
				t->Branch("DauID1_gen", &DauID1_gen);
				t->Branch("DauID2_gen", &DauID2_gen);
				t->Branch("DauID3_gen", &DauID3_gen);
            };
            void copyDn( simpleDMCTreeevt& evt, int idx){
            Ntrkoffline = evt.Ntrkoffline ;
            Npixel = evt.Npixel    ;
            HFsumET = evt.HFsumET   ;
            bestvtxX = evt.bestvtxX  ;
            bestvtxY = evt.bestvtxY  ;
            bestvtxZ = evt.bestvtxZ  ;
            candSize = evt.candSize  ;

            pT = evt.pT[idx]        ;
            y = evt.y[idx]         ;
            eta = evt.eta[idx]       ;
            phi = evt.phi[idx]       ;
            mass = evt.mass[idx]      ;
            mva = evt.mva[idx]       ;
            dca3D = evt.dca3D[idx]     ;
            dcaErr3D = evt.dcaErr3D[idx]  ;
            flavor = evt.flavor[idx]    ;
            VtxProb = evt.VtxProb[idx]   ;
            v3DCosPointingAngle = evt.v3DCosPointingAngle[idx] ;
            v3DPointingAngle = evt.v3DPointingAngle[idx] ;
            v2DCosPointingAngle = evt.v2DCosPointingAngle[idx] ;
            v2DPointingAngle = evt.v2DPointingAngle[idx] ;
            v3DDecayLengthSignificance = evt.v3DDecayLengthSignificance[idx] ;
            v3DDecayLength = evt.v3DDecayLength[idx] ;
            v2DDecayLengthSignificance = evt.v2DDecayLengthSignificance[idx] ;
            v2DDecayLength = evt.v2DDecayLength[idx] ;
            isSwap = evt.isSwap[idx]    ;
            idmom_reco = evt.idmom_reco[idx] ;
            idmom_reco1 = evt.idmom_reco1[idx];
            idBAnc_reco1 = evt.idBAnc_reco1[idx];
            matchToGen1 = evt.matchToGen1[idx];
            isSwap1 = evt.isSwap1[idx];
            matchGEN1 = evt.matchGEN1[idx];
            matchGEN = evt.matchGEN[idx]  ;

            gen_D1ancestorFlavor = evt.gen_D1ancestorFlavor[idx];
            gen_D1ancestorId = evt.gen_D1ancestorId[idx];
            gen_D1PVx = evt.gen_D1PVx[idx];
            gen_D1PVy = evt.gen_D1PVy[idx];
            gen_D1PVz = evt.gen_D1PVz[idx];
            gen_D1pT = evt.gen_D1pT[idx];
            gen_D1eta = evt.gen_D1eta[idx];
            gen_D1phi = evt.gen_D1phi[idx];
            gen_D1mass = evt.gen_D1mass[idx];
            gen_D1y = evt.gen_D1y[idx];
            gen_D1charge = evt.gen_D1charge[idx];
            gen_D1pdgId = evt.gen_D1pdgId[idx];
            gen_D1decayLength3D = evt.gen_D1decayLength3D[idx];
            gen_D1decayLength2D = evt.gen_D1decayLength2D[idx];
            gen_D1angle3D = evt.gen_D1angle3D[idx];
            gen_D1angle2D = evt.gen_D1angle2D[idx];
            gen_D1pTD1 = evt.gen_D1pTD1[idx];
            gen_D1etaD1 = evt.gen_D1etaD1[idx];
            gen_D1phiD1 = evt.gen_D1phiD1[idx];
            gen_D1massD1 = evt.gen_D1massD1[idx];
            gen_D1yD1 = evt.gen_D1yD1[idx];
            gen_D1chargeD1 = evt.gen_D1chargeD1[idx];
            gen_D1pdgIdD1 = evt.gen_D1pdgIdD1[idx];
            gen_D1pTD2 = evt.gen_D1pTD2[idx];
            gen_D1etaD2 = evt.gen_D1etaD2[idx];
            gen_D1phiD2 = evt.gen_D1phiD2[idx];
            gen_D1massD2 = evt.gen_D1massD2[idx];
            gen_D1yD2 = evt.gen_D1yD2[idx];
            gen_D1chargeD2 = evt.gen_D1chargeD2[idx];
            gen_D1pdgIdD2 = evt.gen_D1pdgIdD2[idx];
            zDCASignificancedaughter1 = evt.zDCASignificancedaughter1[idx];
            xyDCASignificancedaughter1 = evt.xyDCASignificancedaughter1[idx];
            NHitD1 = evt.NHitD1[idx];
            HighPuritydaughter1 = evt.HighPuritydaughter1[idx];
            pTD1 = evt.pTD1[idx];
            pTerrD1 = evt.pTerrD1[idx];
            EtaD1 = evt.EtaD1[idx];
            YD1 = evt.YD1[idx];
            PhiD1 = evt.PhiD1[idx];
            zDCASignificancedaughter2 = evt.zDCASignificancedaughter2[idx];
            xyDCASignificancedaughter2 = evt.xyDCASignificancedaughter2[idx];
            NHitD2 = evt.NHitD2[idx];
            HighPuritydaughter2 = evt.HighPuritydaughter2[idx];
            pTD2 = evt.pTD2[idx];
            pTerrD2 = evt.pTerrD2[idx];
            EtaD2 = evt.EtaD2[idx];
            YD2 = evt.YD2[idx];
            PhiD2 = evt.PhiD2[idx];
            candSize_gen = evt.candSize_gen;
            id_gen = evt.id_gen[idx];
            mass_gen = evt.mass_gen[idx];
            pT_gen = evt.pT_gen[idx];
            eta_gen = evt.eta_gen[idx];
            phi_gen = evt.phi_gen[idx];
            y_gen = evt.y_gen[idx];
            status_gen = evt.status_gen[idx];
            MotherID_gen = evt.MotherID_gen[idx];
            MotherPt_gen = evt.MotherPt_gen[idx];
            MotherEta_gen = evt.MotherEta_gen[idx];
            MotherPhi_gen = evt.MotherPhi_gen[idx];
            MotherY_gen = evt.MotherY_gen[idx];
            MotherStatus_gen = evt.MotherStatus_gen[idx];
            dl2D_gen = evt.dl2D_gen[idx];
            dl3D_gen = evt.dl3D_gen[idx];
            angle2D_gen = evt.angle2D_gen[idx];
            angle3D_gen = evt.angle3D_gen[idx];
            DauID1_gen = evt.DauID1_gen[idx];
            DauID2_gen = evt.DauID2_gen[idx];
            DauID3_gen = evt.DauID3_gen[idx];

            };
    };

    struct simpleDMCevt{
        public:
            int Ntrkoffline ;
            int Npixel    ;
            float HFsumET   ;
            float bestvtxX  ;
            float bestvtxY  ;
            float bestvtxZ  ;
            int candSize  ;
            float pT;                                         
            float y;                                          
            float eta;                                        
            float phi;                                        
            float mass;                                       
            float mva;                                        
            float flavor;                                     
            float VtxProb;                                    
            float v3DCosPointingAngle ;
            float v3DPointingAngle ;
            float v2DCosPointingAngle ;
            float v2DPointingAngle ;
            float v3DDecayLengthSignificance ;
            float v3DDecayLength ;
            float v2DDecayLengthSignificance ;
            float v2DDecayLength ;
            float zDCASignificanceDaugther1 ;
            float xyDCASignificanceDaugther1 ;
            float NHitD1    ;
            bool HighPurityDaugther1 ;
            float pTD1      ;
            float pTerrD1   ;
            float EtaD1     ;
            float PhiD1     ;
            float dedxHarmonic2D1 ;
            float zDCASignificanceDaugther2 ;
            float xyDCASignificanceDaugther2 ;
            float NHitD2    ;
            bool HighPurityDaugther2 ;
            float pTD2      ;
            float pTerrD2   ;
            float EtaD2     ;
            float PhiD2     ;
            float dedxHarmonic2D2 ;
            bool        isSwap    ;
            int        idmom_reco ;
            bool        matchGEN  ;
            int        gen_ancestorFlavor ;
            int        gen_ancestorId ;
            float        gen_PVx_  ;
            float        gen_PVy   ;
            float        gen_PVz   ;
            float        gen_pT    ;
            float        gen_eta   ;
            float        gen_phi   ;
            float        gen_mass  ;
            float        gen_y     ;
            float        gen_decayLength3D ;
            float        gen_decayLength2D ;
            float        gen_angle3D ;
            float        gen_angle2D ;
            float        gen_pTD1  ;
            float        gen_etaD1 ;
            float        gen_phiD1 ;
            float        gen_massD1 ;
            float        gen_yD1   ;
            float        gen_chargeD1 ;
            float        gen_pdgIdD1 ;
            float        gen_pTD2  ;
            float        gen_etaD2 ;
            float        gen_phiD2 ;
            float        gen_massD2 ;
            float        gen_yD2   ;
            float        gen_chargeD2 ;
            float        gen_pdgIdD2 ;
            simpleDMCevt* getEventHandle(){ return this;}

            template <typename T>
            void setTree(T* t){
                t->SetBranchAddress("Ntrkoffline", &Ntrkoffline) ;
                t->SetBranchAddress("Npixel", &Npixel)    ;
                t->SetBranchAddress("HFsumET", &HFsumET)   ;
                t->SetBranchAddress("bestvtxX", &bestvtxX)  ;
                t->SetBranchAddress("bestvtxY", &bestvtxY)  ;
                t->SetBranchAddress("bestvtxZ", &bestvtxZ)  ;
                t->SetBranchAddress("candSize", &candSize)  ;
                t->SetBranchAddress("pT", &pT);                                         
                t->SetBranchAddress("y", &y);                                          
                t->SetBranchAddress("eta", &eta);                                        
                t->SetBranchAddress("phi", &phi);                                        
                t->SetBranchAddress("mass", &mass);                                       
                t->SetBranchAddress("mva", &mva);                                        
                t->SetBranchAddress("flavor", &flavor);                                     
                t->SetBranchAddress("VtxProb", &VtxProb);                                    
                t->SetBranchAddress("3DCosPointingAngle", &v3DCosPointingAngle) ;
                t->SetBranchAddress("3DPointingAngle", &v3DPointingAngle) ;
                t->SetBranchAddress("2DCosPointingAngle", &v2DCosPointingAngle) ;
                t->SetBranchAddress("2DPointingAngle", &v2DPointingAngle) ;
                t->SetBranchAddress("3DDecayLengthSignificance", &v3DDecayLengthSignificance) ;
                t->SetBranchAddress("3DDecayLength", &v3DDecayLength) ;
                t->SetBranchAddress("2DDecayLengthSignificance", &v2DDecayLengthSignificance) ;
                t->SetBranchAddress("2DDecayLength", &v2DDecayLength) ;
                t->SetBranchAddress("zDCASignificanceDaugther1", &zDCASignificanceDaugther1) ;
                t->SetBranchAddress("xyDCASignificanceDaugther1", &xyDCASignificanceDaugther1) ;
                t->SetBranchAddress("NHitD1", &NHitD1)    ;
                t->SetBranchAddress("HighPurityDaugther1", &HighPurityDaugther1) ;
                t->SetBranchAddress("pTD1", &pTD1)      ;
                t->SetBranchAddress("pTerrD1", &pTerrD1)   ;
                t->SetBranchAddress("EtaD1", &EtaD1)     ;
                t->SetBranchAddress("PhiD1", &PhiD1)     ;
                t->SetBranchAddress("dedxHarmonic2D1", &dedxHarmonic2D1) ;
                t->SetBranchAddress("zDCASignificanceDaugther2", &zDCASignificanceDaugther2) ;
                t->SetBranchAddress("xyDCASignificanceDaugther2", &xyDCASignificanceDaugther2) ;
                t->SetBranchAddress("NHitD2", &NHitD2)    ;
                t->SetBranchAddress("HighPurityDaugther2", &HighPurityDaugther2) ;
                t->SetBranchAddress("pTD2", &pTD2)      ;
                t->SetBranchAddress("pTerrD2", &pTerrD2)   ;
                t->SetBranchAddress("EtaD2", &EtaD2)     ;
                t->SetBranchAddress("PhiD2", &PhiD2)     ;
                t->SetBranchAddress("dedxHarmonic2D2", &dedxHarmonic2D2) ;
            	t->SetBranchAddress("isSwap", &isSwap)    ;
            	t->SetBranchAddress("idmom_reco", &idmom_reco) ;
            	t->SetBranchAddress("matchGEN", &matchGEN)  ;
            	t->SetBranchAddress("gen_ancestorFlavor", &gen_ancestorFlavor) ;
            	t->SetBranchAddress("gen_ancestorId", &gen_ancestorId) ;
            	t->SetBranchAddress("gen_PVx_", &gen_PVx_)  ;
            	t->SetBranchAddress("gen_PVy", &gen_PVy)   ;
            	t->SetBranchAddress("gen_PVz", &gen_PVz)   ;
            	t->SetBranchAddress("gen_pT", &gen_pT)    ;
            	t->SetBranchAddress("gen_eta", &gen_eta)   ;
            	t->SetBranchAddress("gen_phi", &gen_phi)   ;
            	t->SetBranchAddress("gen_mass", &gen_mass)  ;
            	t->SetBranchAddress("gen_y", &gen_y)     ;
            	t->SetBranchAddress("gen_decayLength3D", &gen_decayLength3D) ;
            	t->SetBranchAddress("gen_decayLength2D", &gen_decayLength2D) ;
            	t->SetBranchAddress("gen_angle3D", &gen_angle3D) ;
            	t->SetBranchAddress("gen_angle2D", &gen_angle2D) ;
            	t->SetBranchAddress("gen_pTD1", &gen_pTD1)  ;
            	t->SetBranchAddress("gen_etaD1", &gen_etaD1) ;
            	t->SetBranchAddress("gen_phiD1", &gen_phiD1) ;
            	t->SetBranchAddress("gen_massD1", &gen_massD1) ;
            	t->SetBranchAddress("gen_yD1", &gen_yD1)   ;
            	t->SetBranchAddress("gen_chargeD1", &gen_chargeD1) ;
            	t->SetBranchAddress("gen_pdgIdD1", &gen_pdgIdD1) ;
            	t->SetBranchAddress("gen_pTD2", &gen_pTD2)  ;
            	t->SetBranchAddress("gen_etaD2", &gen_etaD2) ;
            	t->SetBranchAddress("gen_phiD2", &gen_phiD2) ;
            	t->SetBranchAddress("gen_massD2", &gen_massD2) ;
            	t->SetBranchAddress("gen_yD2", &gen_yD2)   ;
            	t->SetBranchAddress("gen_chargeD2", &gen_chargeD2) ;
            	t->SetBranchAddress("gen_pdgIdD2", &gen_pdgIdD2) ;
            };
            void setOutputTree(TTree* t){
                t->Branch("Ntrkoffline",&Ntrkoffline) ;
                t->Branch("Npixel",&Npixel)    ;
                t->Branch("HFsumET",&HFsumET)   ;
                t->Branch("bestvtxX",&bestvtxX)  ;
                t->Branch("bestvtxY",&bestvtxY)  ;
                t->Branch("bestvtxZ",&bestvtxZ)  ;
                t->Branch("candSize",&candSize)  ;
                t->Branch("pT",&pT);                                         
                t->Branch("y",&y);                                          
                t->Branch("eta",&eta);                                        
                t->Branch("phi",&phi);                                        
                t->Branch("mass",&mass);                                       
                t->Branch("mva",&mva);                                        
                t->Branch("flavor",&flavor);                                     
                t->Branch("VtxProb",&VtxProb);                                    
                t->Branch("v3DCosPointingAngle",&v3DCosPointingAngle) ;
                t->Branch("v3DPointingAngle",&v3DPointingAngle) ;
                t->Branch("v2DCosPointingAngle",&v2DCosPointingAngle) ;
                t->Branch("v2DPointingAngle",&v2DPointingAngle) ;
                t->Branch("v3DDecayLengthSignificance",&v3DDecayLengthSignificance) ;
                t->Branch("v3DDecayLength",&v3DDecayLength) ;
                t->Branch("v2DDecayLengthSignificance",&v2DDecayLengthSignificance) ;
                t->Branch("v2DDecayLength",&v2DDecayLength) ;
                t->Branch("zDCASignificanceDaugther1",&zDCASignificanceDaugther1) ;
                t->Branch("xyDCASignificanceDaugther1",&xyDCASignificanceDaugther1) ;
                t->Branch("NHitD1",&NHitD1)    ;
                t->Branch("HighPurityDaugther1",&HighPurityDaugther1) ;
                t->Branch("pTD1",&pTD1)      ;
                t->Branch("pTerrD1",&pTerrD1)   ;
                t->Branch("EtaD1",&EtaD1)     ;
                t->Branch("PhiD1",&PhiD1)     ;
                t->Branch("dedxHarmonic2D1",&dedxHarmonic2D1) ;
                t->Branch("zDCASignificanceDaugther2",&zDCASignificanceDaugther2) ;
                t->Branch("xyDCASignificanceDaugther2",&xyDCASignificanceDaugther2) ;
                t->Branch("NHitD2",&NHitD2)    ;
                t->Branch("HighPurityDaugther2",&HighPurityDaugther2) ;
                t->Branch("pTD2",&pTD2)      ;
                t->Branch("pTerrD2",&pTerrD2)   ;
                t->Branch("EtaD2",&EtaD2)     ;
                t->Branch("PhiD2",&PhiD2)     ;
                t->Branch("dedxHarmonic2D2",&dedxHarmonic2D2) ;
            	t->Branch("isSwap",&isSwap)    ;
            	t->Branch("idmom_reco",&idmom_reco) ;
            	t->Branch("matchGEN",&matchGEN)  ;
            	t->Branch("gen_ancestorFlavor",&gen_ancestorFlavor) ;
            	t->Branch("gen_ancestorId",&gen_ancestorId) ;
            	t->Branch("gen_PVx_",&gen_PVx_)  ;
            	t->Branch("gen_PVy",&gen_PVy)   ;
            	t->Branch("gen_PVz",&gen_PVz)   ;
            	t->Branch("gen_pT",&gen_pT)    ;
            	t->Branch("gen_eta",&gen_eta)   ;
            	t->Branch("gen_phi",&gen_phi)   ;
            	t->Branch("gen_mass",&gen_mass)  ;
            	t->Branch("gen_y",&gen_y)     ;
            	t->Branch("gen_decayLength3D",&gen_decayLength3D) ;
            	t->Branch("gen_decayLength2D",&gen_decayLength2D) ;
            	t->Branch("gen_angle3D",&gen_angle3D) ;
            	t->Branch("gen_angle2D",&gen_angle2D) ;
            	t->Branch("gen_pTD1",&gen_pTD1)  ;
            	t->Branch("gen_etaD1",&gen_etaD1) ;
            	t->Branch("gen_phiD1",&gen_phiD1) ;
            	t->Branch("gen_massD1",&gen_massD1) ;
            	t->Branch("gen_yD1",&gen_yD1)   ;
            	t->Branch("gen_chargeD1",&gen_chargeD1) ;
            	t->Branch("gen_pdgIdD1",&gen_pdgIdD1) ;
            	t->Branch("gen_pTD2",&gen_pTD2)  ;
            	t->Branch("gen_etaD2",&gen_etaD2) ;
            	t->Branch("gen_phiD2",&gen_phiD2) ;
            	t->Branch("gen_massD2",&gen_massD2) ;
            	t->Branch("gen_yD2",&gen_yD2)   ;
            	t->Branch("gen_chargeD2",&gen_chargeD2) ;
            	t->Branch("gen_pdgIdD2",&gen_pdgIdD2) ;
            };
    };
    struct simpleDDMCTreeevt{
        protected:
            // static const int MAXCAND = __MAXCAND_MC__;
            static const int MAXCAND = 1000;
        public:
        int   Ntrkoffline ;
        int   Npixel    ;
        float HFsumET   ;
        float bestvtxX  ;
        float bestvtxY  ;
        float bestvtxZ  ;
        int   candSize  ;
        float pT[MAXCAND]        ;
        float y[MAXCAND]         ;
        float eta[MAXCAND]       ;
        float phi[MAXCAND]       ;
        float mass[MAXCAND]      ;
        float mva[MAXCAND]       ;
        float mvaDaughter1[MAXCAND] ;
        float mvaDaughter2[MAXCAND] ;
        float dca3D[MAXCAND]     ;
        float dcaErr3D[MAXCAND]  ;
        float flavor[MAXCAND]    ;
        float VtxProb[MAXCAND]   ;
        float v3DCosPointingAngle[MAXCAND] ;
        float v3DPointingAngle[MAXCAND] ;
        float v2DCosPointingAngle[MAXCAND] ;
        float v2DPointingAngle[MAXCAND] ;
        float v3DDecayLengthSignificance[MAXCAND] ;
        float v3DDecayLength[MAXCAND] ;
        float v2DDecayLengthSignificance[MAXCAND] ;
        float v2DDecayLength[MAXCAND] ;
        bool isSwap[MAXCAND]    ;
        int idmom_reco[MAXCAND] ;
        bool matchGEN[MAXCAND]  ;
        int idmom_reco1[MAXCAND] ;
        int idBAnc_reco1[MAXCAND] ;
        int matchToGen1[MAXCAND] ;
        bool isSwap1[MAXCAND]   ;
        bool isSwap2[MAXCAND]   ;
        bool matchGEN1[MAXCAND] ;
        bool matchGEN2[MAXCAND] ;
        int idmom_reco2[MAXCAND] ;
        int idBAnc_reco2[MAXCAND] ;
        int matchToGen2[MAXCAND] ;
        int gen_D1ancestorFlavor[MAXCAND] ;
        int gen_D1ancestorId[MAXCAND] ;
        float gen_D1PVx[MAXCAND] ;
        float gen_D1PVy[MAXCAND] ;
        float gen_D1PVz[MAXCAND] ;
        float gen_D1pT[MAXCAND]  ;
        float gen_D1eta[MAXCAND] ;
        float gen_D1phi[MAXCAND] ;
        float gen_D1mass[MAXCAND] ;
        float gen_D1y[MAXCAND]   ;
        float gen_D1charge[MAXCAND] ;
        float gen_D1pdgId[MAXCAND] ;
        float gen_D1decayLength3D[MAXCAND] ;
        float gen_D1decayLength2D[MAXCAND] ;
        float gen_D1angle3D[MAXCAND] ;
        float gen_D1angle2D[MAXCAND] ;
        float gen_D1pTD1[MAXCAND] ;
        float gen_D1etaD1[MAXCAND] ;
        float gen_D1phiD1[MAXCAND] ;
        float gen_D1massD1[MAXCAND] ;
        float gen_D1yD1[MAXCAND] ;
        float gen_D1chargeD1[MAXCAND] ;
        float gen_D1pdgIdD1[MAXCAND] ;
        float gen_D1pTD2[MAXCAND] ;
        float gen_D1etaD2[MAXCAND] ;
        float gen_D1phiD2[MAXCAND] ;
        float gen_D1massD2[MAXCAND] ;
        float gen_D1yD2[MAXCAND] ;
        float gen_D1chargeD2[MAXCAND] ;
        float gen_D1pdgIdD2[MAXCAND] ;
        int gen_D2ancestorFlavor[MAXCAND] ;
        int gen_D2ancestorId[MAXCAND] ;
        float gen_D2PVx[MAXCAND] ;
        float gen_D2PVy[MAXCAND] ;
        float gen_D2PVz[MAXCAND] ;
        float gen_D2pT[MAXCAND]  ;
        float gen_D2eta[MAXCAND] ;
        float gen_D2phi[MAXCAND] ;
        float gen_D2mass[MAXCAND] ;
        float gen_D2y[MAXCAND]   ;
        float gen_D2charge[MAXCAND] ;
        float gen_D2pdgId[MAXCAND] ;
        float gen_D2decayLength3D[MAXCAND] ;
        float gen_D2decayLength2D[MAXCAND] ;
        float gen_D2angle3D[MAXCAND] ;
        float gen_D2angle2D[MAXCAND] ;
        float gen_D2pTD1[MAXCAND] ;
        float gen_D2etaD1[MAXCAND] ;
        float gen_D2phiD1[MAXCAND] ;
        float gen_D2massD1[MAXCAND] ;
        float gen_D2yD1[MAXCAND] ;
        float gen_D2chargeD1[MAXCAND] ;
        float gen_D2pdgIdD1[MAXCAND] ;
        float gen_D2pTD2[MAXCAND] ;
        float gen_D2etaD2[MAXCAND] ;
        float gen_D2phiD2[MAXCAND] ;
        float gen_D2massD2[MAXCAND] ;
        float gen_D2yD2[MAXCAND] ;
        float gen_D2chargeD2[MAXCAND] ;
        float gen_D2pdgIdD2[MAXCAND] ;
        float flavordaughter1[MAXCAND] ;
        float massdaughter1[MAXCAND] ;
        float pTD1[MAXCAND]      ;
        float EtaD1[MAXCAND]     ;
        float PhiD1[MAXCAND]     ;
        float VtxProbdaughter1[MAXCAND] ;
        float v3DCosPointingAngle1daughter1[MAXCAND] ;
        float v3DPointingAngledaughter1[MAXCAND] ;
        float v2DCosPointingAngledaughter1[MAXCAND] ;
        float v2DPointingAngledaughter1[MAXCAND] ;
        float v3DDecayLengthSignificancedaughter1[MAXCAND] ;
        float v3DDecayLengthdaughter1[MAXCAND] ;
        float v3DDecayLengthErrordaughter1[MAXCAND] ;
        float v2DDecayLengthSignificancedaughter1[MAXCAND] ;
        float zDCASignificanceGranddaughter11[MAXCAND] ;
        float zDCASignificanceGranddaughter12[MAXCAND] ;
        float xyDCASignificanceGranddaughter11[MAXCAND] ;
        float xyDCASignificanceGranddaughter12[MAXCAND] ;
        float NHitGrandD11[MAXCAND] ;
        float NHitGrandD12[MAXCAND] ;
        bool HighPurityGranddaughter11[MAXCAND] ;
        bool HighPurityGranddaughter12[MAXCAND] ;
        float pTGrandD11[MAXCAND] ;
        float pTGrandD12[MAXCAND] ;
        float pTerrGrandD11[MAXCAND] ;
        float pTerrGrandD12[MAXCAND] ;
        float EtaGrandD11[MAXCAND] ;
        float EtaGrandD12[MAXCAND] ;
        float PhiGrandD11[MAXCAND] ;
        float PhiGrandD12[MAXCAND] ;
        float dedxHarmonic2GrandD11[MAXCAND] ;
        float dedxHarmonic2GrandD12[MAXCAND] ;
        float flavordaughter2[MAXCAND] ;
        float massdaughter2[MAXCAND] ;
        float pTD2[MAXCAND]      ;
        float EtaD2[MAXCAND]     ;
        float PhiD2[MAXCAND]     ;
        float VtxProbdaughter2[MAXCAND] ;
        float v3DCosPointingAngle1daughter2[MAXCAND] ;
        float v3DPointingAngledaughter2[MAXCAND] ;
        float v2DCosPointingAngledaughter2[MAXCAND] ;
        float v2DPointingAngledaughter2[MAXCAND] ;
        float v3DDecayLengthSignificancedaughter2[MAXCAND] ;
        float v3DDecayLengthdaughter2[MAXCAND] ;
        float v3DDecayLengthErrordaughter2[MAXCAND] ;
        float v2DDecayLengthSignificancedaughter2[MAXCAND] ;
        float zDCASignificanceGranddaughter21[MAXCAND] ;
        float zDCASignificanceGranddaughter22[MAXCAND] ;
        float xyDCASignificanceGranddaughter21[MAXCAND] ;
        float xyDCASignificanceGranddaughter22[MAXCAND] ;
        float NHitGrandD21[MAXCAND] ;
        float NHitGrandD22[MAXCAND] ;
        bool HighPurityGranddaughter21[MAXCAND] ;
        bool HighPurityGranddaughter22[MAXCAND] ;
        float pTGrandD21[MAXCAND] ;
        float pTGrandD22[MAXCAND] ;
        float pTerrGrandD21[MAXCAND] ;
        float pTerrGrandD22[MAXCAND] ;
        float EtaGrandD21[MAXCAND] ;
        float PhiGrandD21[MAXCAND] ;
        float PhiGrandD22[MAXCAND] ;
        float EtaGrandD22[MAXCAND] ;
        float dedxHarmonic2GrandD21[MAXCAND] ;
        float dedxHarmonic2GrandD22[MAXCAND] ;
        int candSize_gen ;
        int id_gen[MAXCAND]    ;
        float mass_gen[MAXCAND]  ;
        float pT_gen[MAXCAND]    ;
        float eta_gen[MAXCAND]   ;
        float phi_gen[MAXCAND]   ;
        float y_gen[MAXCAND]     ;
        int status_gen[MAXCAND] ;
        float MotherID_gen[MAXCAND] ;
        float MotherPt_gen[MAXCAND] ;
        float MotherEta_gen[MAXCAND] ;
        float MotherPhi_gen[MAXCAND] ;
        float MotherY_gen[MAXCAND] ;
        int MotherStatus_gen[MAXCAND] ;
        int id_gen1[MAXCAND]   ;
        float mass_gen1[MAXCAND] ;
        float pt_gen1[MAXCAND]   ;
        float eta_gen1[MAXCAND]  ;
        float phi_gen1[MAXCAND]  ;
        int status_gen1[MAXCAND] ;
        int id_gen2[MAXCAND]   ;
        float mass_gen2[MAXCAND] ;
        float pt_gen2[MAXCAND]   ;
        float eta_gen2[MAXCAND]  ;
        float phi_gen2[MAXCAND]  ;
        int status_gen2[MAXCAND] ;
        int DauID1_gen[MAXCAND] ;
        int DauID2_gen[MAXCAND] ;
        int DauID3_gen[MAXCAND] ;
        simpleDDMCTreeevt* getEventHandle(){ return this;}

        template <typename T>
        void setInputTree(T* t){
            t->SetBranchAddress("Ntrkoffline", &Ntrkoffline) ;
            t->SetBranchAddress("Npixel", &Npixel)    ;
            t->SetBranchAddress("HFsumET", &HFsumET)   ;
            t->SetBranchAddress("bestvtxX", &bestvtxX)  ;
            t->SetBranchAddress("bestvtxY", &bestvtxY)  ;
            t->SetBranchAddress("bestvtxZ", &bestvtxZ)  ;
            t->SetBranchAddress("candSize", &candSize)  ;
            t->SetBranchAddress("pT", &pT)        ;
            t->SetBranchAddress("y", &y)         ;
            t->SetBranchAddress("eta", &eta)       ;
            t->SetBranchAddress("phi", &phi)       ;
            t->SetBranchAddress("mass", &mass)      ;
            t->SetBranchAddress("mva", &mva)       ;
            t->SetBranchAddress("mvaDaughter1", &mvaDaughter1) ;
            t->SetBranchAddress("mvaDaughter2", &mvaDaughter2) ;
            t->SetBranchAddress("dca3D", &dca3D)     ;
            t->SetBranchAddress("dcaErr3D", &dcaErr3D)  ;
            t->SetBranchAddress("flavor", &flavor)    ;
            t->SetBranchAddress("VtxProb", &VtxProb)   ;
            t->SetBranchAddress("3DCosPointingAngle", &v3DCosPointingAngle) ;
            t->SetBranchAddress("3DPointingAngle", &v3DPointingAngle) ;
            t->SetBranchAddress("2DCosPointingAngle", &v2DCosPointingAngle) ;
            t->SetBranchAddress("2DPointingAngle", &v2DPointingAngle) ;
            t->SetBranchAddress("3DDecayLengthSignificance", &v3DDecayLengthSignificance) ;
            t->SetBranchAddress("3DDecayLength", &v3DDecayLength) ;
            t->SetBranchAddress("2DDecayLengthSignificance", &v2DDecayLengthSignificance) ;
            t->SetBranchAddress("2DDecayLength", &v2DDecayLength) ;
            t->SetBranchAddress("isSwap", &isSwap)    ;
            t->SetBranchAddress("idmom_reco", &idmom_reco) ;
            t->SetBranchAddress("matchGEN", &matchGEN)  ;
            t->SetBranchAddress("idmom_reco1", &idmom_reco1) ;
            t->SetBranchAddress("idBAnc_reco1", &idBAnc_reco1) ;
            t->SetBranchAddress("matchToGen1", &matchToGen1) ;
            t->SetBranchAddress("isSwap1", &isSwap1)   ;
            t->SetBranchAddress("isSwap2", &isSwap2)   ;
            t->SetBranchAddress("matchGEN1", &matchGEN1) ;
            t->SetBranchAddress("matchGEN2", &matchGEN2) ;
            t->SetBranchAddress("idmom_reco2", &idmom_reco2) ;
            t->SetBranchAddress("idBAnc_reco2", &idBAnc_reco2) ;
            t->SetBranchAddress("matchToGen2", &matchToGen2) ;
            t->SetBranchAddress("gen_D1ancestorFlavor", &gen_D1ancestorFlavor) ;
            t->SetBranchAddress("gen_D1ancestorId", &gen_D1ancestorId) ;
            t->SetBranchAddress("gen_D1PVx", &gen_D1PVx) ;
            t->SetBranchAddress("gen_D1PVy", &gen_D1PVy) ;
            t->SetBranchAddress("gen_D1PVz", &gen_D1PVz) ;
            t->SetBranchAddress("gen_D1pT", &gen_D1pT)  ;
            t->SetBranchAddress("gen_D1eta", &gen_D1eta) ;
            t->SetBranchAddress("gen_D1phi", &gen_D1phi) ;
            t->SetBranchAddress("gen_D1mass", &gen_D1mass) ;
            t->SetBranchAddress("gen_D1y", &gen_D1y)   ;
            t->SetBranchAddress("gen_D1charge", &gen_D1charge) ;
            t->SetBranchAddress("gen_D1pdgId", &gen_D1pdgId) ;
            t->SetBranchAddress("gen_D1decayLength3D", &gen_D1decayLength3D) ;
            t->SetBranchAddress("gen_D1decayLength2D", &gen_D1decayLength2D) ;
            t->SetBranchAddress("gen_D1angle3D", &gen_D1angle3D) ;
            t->SetBranchAddress("gen_D1angle2D", &gen_D1angle2D) ;
            t->SetBranchAddress("gen_D1pTD1", &gen_D1pTD1) ;
            t->SetBranchAddress("gen_D1etaD1", &gen_D1etaD1) ;
            t->SetBranchAddress("gen_D1phiD1", &gen_D1phiD1) ;
            t->SetBranchAddress("gen_D1massD1", &gen_D1massD1) ;
            t->SetBranchAddress("gen_D1yD1", &gen_D1yD1) ;
            t->SetBranchAddress("gen_D1chargeD1", &gen_D1chargeD1) ;
            t->SetBranchAddress("gen_D1pdgIdD1", &gen_D1pdgIdD1) ;
            t->SetBranchAddress("gen_D1pTD2", &gen_D1pTD2) ;
            t->SetBranchAddress("gen_D1etaD2", &gen_D1etaD2) ;
            t->SetBranchAddress("gen_D1phiD2", &gen_D1phiD2) ;
            t->SetBranchAddress("gen_D1massD2", &gen_D1massD2) ;
            t->SetBranchAddress("gen_D1yD2", &gen_D1yD2) ;
            t->SetBranchAddress("gen_D1chargeD2", &gen_D1chargeD2) ;
            t->SetBranchAddress("gen_D1pdgIdD2", &gen_D1pdgIdD2) ;
            t->SetBranchAddress("gen_D2ancestorFlavor", &gen_D2ancestorFlavor) ;
            t->SetBranchAddress("gen_D2ancestorId", &gen_D2ancestorId) ;
            t->SetBranchAddress("gen_D2PVx", &gen_D2PVx) ;
            t->SetBranchAddress("gen_D2PVy", &gen_D2PVy) ;
            t->SetBranchAddress("gen_D2PVz", &gen_D2PVz) ;
            t->SetBranchAddress("gen_D2pT", &gen_D2pT)  ;
            t->SetBranchAddress("gen_D2eta", &gen_D2eta) ;
            t->SetBranchAddress("gen_D2phi", &gen_D2phi) ;
            t->SetBranchAddress("gen_D2mass", &gen_D2mass) ;
            t->SetBranchAddress("gen_D2y", &gen_D2y)   ;
            t->SetBranchAddress("gen_D2charge", &gen_D2charge) ;
            t->SetBranchAddress("gen_D2pdgId", &gen_D2pdgId) ;
            t->SetBranchAddress("gen_D2decayLength3D", &gen_D2decayLength3D) ;
            t->SetBranchAddress("gen_D2decayLength2D", &gen_D2decayLength2D) ;
            t->SetBranchAddress("gen_D2angle3D", &gen_D2angle3D) ;
            t->SetBranchAddress("gen_D2angle2D", &gen_D2angle2D) ;
            t->SetBranchAddress("gen_D2pTD1", &gen_D2pTD1) ;
            t->SetBranchAddress("gen_D2etaD1", &gen_D2etaD1) ;
            t->SetBranchAddress("gen_D2phiD1", &gen_D2phiD1) ;
            t->SetBranchAddress("gen_D2massD1", &gen_D2massD1) ;
            t->SetBranchAddress("gen_D2yD1", &gen_D2yD1) ;
            t->SetBranchAddress("gen_D2chargeD1", &gen_D2chargeD1) ;
            t->SetBranchAddress("gen_D2pdgIdD1", &gen_D2pdgIdD1) ;
            t->SetBranchAddress("gen_D2pTD2", &gen_D2pTD2) ;
            t->SetBranchAddress("gen_D2etaD2", &gen_D2etaD2) ;
            t->SetBranchAddress("gen_D2phiD2", &gen_D2phiD2) ;
            t->SetBranchAddress("gen_D2massD2", &gen_D2massD2) ;
            t->SetBranchAddress("gen_D2yD2", &gen_D2yD2) ;
            t->SetBranchAddress("gen_D2chargeD2", &gen_D2chargeD2) ;
            t->SetBranchAddress("gen_D2pdgIdD2", &gen_D2pdgIdD2) ;
            t->SetBranchAddress("flavordaughter1", &flavordaughter1) ;
            t->SetBranchAddress("massdaughter1", &massdaughter1) ;
            t->SetBranchAddress("pTD1", &pTD1)      ;
            t->SetBranchAddress("EtaD1", &EtaD1)     ;
            t->SetBranchAddress("PhiD1", &PhiD1)     ;
            t->SetBranchAddress("VtxProbdaughter1", &VtxProbdaughter1) ;
            t->SetBranchAddress("3DCosPointingAngle1daughter1", &v3DCosPointingAngle1daughter1) ;
            t->SetBranchAddress("3DPointingAngledaughter1", &v3DPointingAngledaughter1) ;
            t->SetBranchAddress("2DCosPointingAngledaughter1", &v2DCosPointingAngledaughter1) ;
            t->SetBranchAddress("2DPointingAngledaughter1", &v2DPointingAngledaughter1) ;
            t->SetBranchAddress("3DDecayLengthSignificancedaughter1", &v3DDecayLengthSignificancedaughter1) ;
            t->SetBranchAddress("3DDecayLengthdaughter1", &v3DDecayLengthdaughter1) ;
            t->SetBranchAddress("3DDecayLengthErrordaughter1", &v3DDecayLengthErrordaughter1) ;
            t->SetBranchAddress("2DDecayLengthSignificancedaughter1", &v2DDecayLengthSignificancedaughter1) ;
            t->SetBranchAddress("zDCASignificanceGranddaughter11", &zDCASignificanceGranddaughter11) ;
            t->SetBranchAddress("zDCASignificanceGranddaughter12", &zDCASignificanceGranddaughter12) ;
            t->SetBranchAddress("xyDCASignificanceGranddaughter11", &xyDCASignificanceGranddaughter11) ;
            t->SetBranchAddress("xyDCASignificanceGranddaughter12", &xyDCASignificanceGranddaughter12) ;
            t->SetBranchAddress("NHitGrandD11", &NHitGrandD11) ;
            t->SetBranchAddress("NHitGrandD12", &NHitGrandD12) ;
            t->SetBranchAddress("HighPurityGranddaughter11", &HighPurityGranddaughter11) ;
            t->SetBranchAddress("HighPurityGranddaughter12", &HighPurityGranddaughter12) ;
            t->SetBranchAddress("pTGrandD11", &pTGrandD11) ;
            t->SetBranchAddress("pTGrandD12", &pTGrandD12) ;
            t->SetBranchAddress("pTerrGrandD11", &pTerrGrandD11) ;
            t->SetBranchAddress("pTerrGrandD12", &pTerrGrandD12) ;
            t->SetBranchAddress("EtaGrandD11", &EtaGrandD11) ;
            t->SetBranchAddress("EtaGrandD12", &EtaGrandD12) ;
            t->SetBranchAddress("PhiGrandD11", &PhiGrandD11) ;
            t->SetBranchAddress("PhiGrandD12", &PhiGrandD12) ;
            t->SetBranchAddress("dedxHarmonic2GrandD11", &dedxHarmonic2GrandD11) ;
            t->SetBranchAddress("dedxHarmonic2GrandD12", &dedxHarmonic2GrandD12) ;
            t->SetBranchAddress("flavordaughter2", &flavordaughter2) ;
            t->SetBranchAddress("massdaughter2", &massdaughter2) ;
            t->SetBranchAddress("pTD2", &pTD2)      ;
            t->SetBranchAddress("EtaD2", &EtaD2)     ;
            t->SetBranchAddress("PhiD2", &PhiD2)     ;
            t->SetBranchAddress("VtxProbdaughter2", &VtxProbdaughter2) ;
            t->SetBranchAddress("3DCosPointingAngle1daughter2", &v3DCosPointingAngle1daughter2) ;
            t->SetBranchAddress("3DPointingAngledaughter2", &v3DPointingAngledaughter2) ;
            t->SetBranchAddress("2DCosPointingAngledaughter2", &v2DCosPointingAngledaughter2) ;
            t->SetBranchAddress("2DPointingAngledaughter2", &v2DPointingAngledaughter2) ;
            t->SetBranchAddress("3DDecayLengthSignificancedaughter2", &v3DDecayLengthSignificancedaughter2) ;
            t->SetBranchAddress("3DDecayLengthdaughter2", &v3DDecayLengthdaughter2) ;
            t->SetBranchAddress("3DDecayLengthErrordaughter2", &v3DDecayLengthErrordaughter2) ;
            t->SetBranchAddress("2DDecayLengthSignificancedaughter2", &v2DDecayLengthSignificancedaughter2) ;
            t->SetBranchAddress("zDCASignificanceGranddaughter21", &zDCASignificanceGranddaughter21) ;
            t->SetBranchAddress("zDCASignificanceGranddaughter22", &zDCASignificanceGranddaughter22) ;
            t->SetBranchAddress("xyDCASignificanceGranddaughter21", &xyDCASignificanceGranddaughter21) ;
            t->SetBranchAddress("xyDCASignificanceGranddaughter22", &xyDCASignificanceGranddaughter22) ;
            t->SetBranchAddress("NHitGrandD21", &NHitGrandD21) ;
            t->SetBranchAddress("NHitGrandD22", &NHitGrandD22) ;
            t->SetBranchAddress("HighPurityGranddaughter21", &HighPurityGranddaughter21) ;
            t->SetBranchAddress("HighPurityGranddaughter22", &HighPurityGranddaughter22) ;
            t->SetBranchAddress("pTGrandD21", &pTGrandD21) ;
            t->SetBranchAddress("pTGrandD22", &pTGrandD22) ;
            t->SetBranchAddress("pTerrGrandD21", &pTerrGrandD21) ;
            t->SetBranchAddress("pTerrGrandD22", &pTerrGrandD22) ;
            t->SetBranchAddress("EtaGrandD21", &EtaGrandD21) ;
            t->SetBranchAddress("EtaGrandD22", &EtaGrandD22) ;
            t->SetBranchAddress("PhiGrandD21", &PhiGrandD21) ;
            t->SetBranchAddress("PhiGrandD22", &PhiGrandD22) ;
            t->SetBranchAddress("dedxHarmonic2GrandD21", &dedxHarmonic2GrandD21) ;
            t->SetBranchAddress("dedxHarmonic2GrandD22", &dedxHarmonic2GrandD22) ;
            t->SetBranchAddress("candSize_gen", &candSize_gen) ;
            t->SetBranchAddress("id_gen", &id_gen)    ;
            t->SetBranchAddress("mass_gen", &mass_gen)  ;
            t->SetBranchAddress("pT_gen", &pT_gen)    ;
            t->SetBranchAddress("eta_gen", &eta_gen)   ;
            t->SetBranchAddress("phi_gen", &phi_gen)   ;
            t->SetBranchAddress("y_gen", &y_gen)     ;
            t->SetBranchAddress("status_gen", &status_gen) ;
            t->SetBranchAddress("MotherID_gen", &MotherID_gen) ;
            t->SetBranchAddress("MotherPt_gen", &MotherPt_gen) ;
            t->SetBranchAddress("MotherEta_gen", &MotherEta_gen) ;
            t->SetBranchAddress("MotherPhi_gen", &MotherPhi_gen) ;
            t->SetBranchAddress("MotherY_gen", &MotherY_gen) ;
            t->SetBranchAddress("MotherStatus_gen", &MotherStatus_gen) ;
            t->SetBranchAddress("id_gen1", &id_gen1)   ;
            t->SetBranchAddress("mass_gen1", &mass_gen1) ;
            t->SetBranchAddress("pt_gen1", &pt_gen1)   ;
            t->SetBranchAddress("eta_gen1", &eta_gen1)  ;
            t->SetBranchAddress("phi_gen1", &phi_gen1)  ;
            t->SetBranchAddress("status_gen1", &status_gen1) ;
            t->SetBranchAddress("id_gen2", &id_gen2)   ;
            t->SetBranchAddress("mass_gen2", &mass_gen2) ;
            t->SetBranchAddress("pt_gen2", &pt_gen2)   ;
            t->SetBranchAddress("eta_gen2", &eta_gen2)  ;
            t->SetBranchAddress("phi_gen2", &phi_gen2)  ;
            t->SetBranchAddress("status_gen2", &status_gen2) ;
            t->SetBranchAddress("DauID1_gen", &DauID1_gen) ;
            t->SetBranchAddress("DauID2_gen", &DauID2_gen) ;
            t->SetBranchAddress("DauID3_gen", &DauID3_gen) ;
        };

    };

    struct simpleDDMCflat{

            int Ntrkoffline ;
            int Npixel    ;
            float HFsumET   ;
            float bestvtxX  ;
            float bestvtxY  ;
            float bestvtxZ  ;
            int candSize  ;

            float DDPt;
            float DDY;
            float DDPhi;
            float DDMass;

            int D1Idx;
            int D2Idx;

            float DDdca3D;
            float DDdcaErr3D;
            float DDVtxProb;

            float DD3DCosPointingAngle;
            float DD3DPointingAngle;
            float DD2DCosPointingAngle;
            float DD2DPointingAngle;
            float DD3DDecayLengthSignificance;
            float DD3DDecayLength;
            float DD2DDecayLengthSignificance;
            float DD2DDecayLength;

            float D1Pt;                                         
            float D1Y;                                          
            float D1Eta;                                        
            float D1Phi;                                        
            float D1Mass;                                       
            float D1mva;                                        
            float D1flavor;                                     
            float D1VtxProb;                                    
            float D13DCosPointingAngle ;
            float D13DPointingAngle ;
            float D12DCosPointingAngle ;
            float D12DPointingAngle ;
            float D13DDecayLengthSignificance ;
            float D13DDecayLength ;
            float D12DDecayLengthSignificance ;
            float D12DDecayLength ;
            float D1zDCASignificanceDaugther1 ;
            float D1xyDCASignificanceDaugther1 ;
            float D1NHitD1    ;
            bool D1HighPurityDaugther1 ;
            float D1pTD1      ;
            float D1pTerrD1   ;
            float D1EtaD1     ;
            float D1PhiD1     ;
            float D1dedxHarmonic2D1 ;
            float D1zDCASignificanceDaugther2 ;
            float D1xyDCASignificanceDaugther2 ;
            float D1NHitD2    ;
            bool D1HighPurityDaugther2 ;
            float D1pTD2      ;
            float D1pTerrD2   ;
            float D1EtaD2     ;
            float D1PhiD2     ;
            float D1dedxHarmonic2D2 ;

            bool D1isSwap    ;
            int D1idmom_reco ;
            bool D1matchGEN  ;
            int D1gen_ancestorFlavor ;
            int D1gen_ancestorId ;
            float D1gen_PVx_  ;
            float D1gen_PVy   ;
            float D1gen_PVz   ;
            float D1gen_pT    ;
            float D1gen_eta   ;
            float D1gen_phi   ;
            float D1gen_mass  ;
            float D1gen_y     ;
            float D1gen_decayLength3D ;
            float D1gen_decayLength2D ;
            float D1gen_angle3D ;
            float D1gen_angle2D ;
            float D1gen_pTD1  ;
            float D1gen_etaD1 ;
            float D1gen_phiD1 ;
            float D1gen_massD1 ;
            float D1gen_yD1   ;
            float D1gen_chargeD1 ;
            float D1gen_pdgIdD1 ;
            float D1gen_pTD2  ;
            float D1gen_etaD2 ;
            float D1gen_phiD2 ;
            float D1gen_massD2 ;
            float D1gen_yD2   ;
            float D1gen_chargeD2 ;
            float D1gen_pdgIdD2 ;

            float D2Pt;                                         
            float D2Y;                                          
            float D2Eta;                                        
            float D2Phi;                                        
            float D2Mass;                                       
            float D2mva;                                        
            float D2flavor;                                     
            float D2VtxProb;                                    
            float D23DCosPointingAngle ;
            float D23DPointingAngle ;
            float D22DCosPointingAngle ;
            float D22DPointingAngle ;
            float D23DDecayLengthSignificance ;
            float D23DDecayLength ;
            float D22DDecayLengthSignificance ;
            float D22DDecayLength ;
            float D2zDCASignificanceDaugther1 ;
            float D2xyDCASignificanceDaugther1 ;
            float D2NHitD1    ;
            bool D2HighPurityDaugther1 ;
            float D2pTD1      ;
            float D2pTerrD1   ;
            float D2EtaD1     ;
            float D2PhiD1     ;
            float D2dedxHarmonic2D1 ;
            float D2zDCASignificanceDaugther2 ;
            float D2xyDCASignificanceDaugther2 ;
            float D2NHitD2    ;
            bool D2HighPurityDaugther2 ;
            float D2pTD2      ;
            float D2pTerrD2   ;
            float D2EtaD2     ;
            float D2PhiD2     ;
            float D2dedxHarmonic2D2 ;

            bool D2isSwap    ;
            int D2idmom_reco ;
            bool D2matchGEN  ;
            int D2gen_ancestorFlavor ;
            int D2gen_ancestorId ;
            float D2gen_PVx_  ;
            float D2gen_PVy   ;
            float D2gen_PVz   ;
            float D2gen_pT    ;
            float D2gen_eta   ;
            float D2gen_phi   ;
            float D2gen_mass  ;
            float D2gen_y     ;
            float D2gen_decayLength3D ;
            float D2gen_decayLength2D ;
            float D2gen_angle3D ;
            float D2gen_angle2D ;
            float D2gen_pTD1  ;
            float D2gen_etaD1 ;
            float D2gen_phiD1 ;
            float D2gen_massD1 ;
            float D2gen_yD1   ;
            float D2gen_chargeD1 ;
            float D2gen_pdgIdD1 ;
            float D2gen_pTD2  ;
            float D2gen_etaD2 ;
            float D2gen_phiD2 ;
            float D2gen_massD2 ;
            float D2gen_yD2   ;
            float D2gen_chargeD2 ;
            float D2gen_pdgIdD2 ;

            simpleDDMCflat* getEventHandle(){ return this;}

            template <typename T>
            void setInputTree(T* t){
                t->SetBranchAddress("Ntrkoffline", &Ntrkoffline) ;
                t->SetBranchAddress("Npixel", &Npixel)    ;
                t->SetBranchAddress("HFsumET", &HFsumET)   ;
                t->SetBranchAddress("bestvtxX", &bestvtxX)  ;
                t->SetBranchAddress("bestvtxY", &bestvtxY)  ;
                t->SetBranchAddress("bestvtxZ", &bestvtxZ)  ;
                t->SetBranchAddress("candSize", &candSize)  ;
                t->SetBranchAddress("DDpT", &DDPt);
                t->SetBranchAddress("DDy", &DDY);
                t->SetBranchAddress("DDphi", &DDPhi);
                t->SetBranchAddress("DDmass", &DDMass);
                t->SetBranchAddress("D1Idx", &D1Idx);
                t->SetBranchAddress("D2Idx", &D2Idx);
                t->SetBranchAddress("D1Pt", &D1Pt);                                         
                t->SetBranchAddress("D1Y", &D1Y);                                          
                t->SetBranchAddress("D1Eta", &D1Eta);                                        
                t->SetBranchAddress("D1Phi", &D1Phi);                                        
                t->SetBranchAddress("D1Mass", &D1Mass);                                       
                t->SetBranchAddress("D1mva", &D1mva);                                        
                t->SetBranchAddress("D1flavor", &D1flavor);                                     
                t->SetBranchAddress("D1VtxProb", &D1VtxProb);                                    
                t->SetBranchAddress("D13DCosPointingAngle", &D13DCosPointingAngle) ;
                t->SetBranchAddress("D13DPointingAngle", &D13DPointingAngle) ;
                t->SetBranchAddress("D12DCosPointingAngle", &D12DCosPointingAngle) ;
                t->SetBranchAddress("D12DPointingAngle", &D12DPointingAngle) ;
                t->SetBranchAddress("D13DDecayLengthSignificance", &D13DDecayLengthSignificance) ;
                t->SetBranchAddress("D13DDecayLength", &D13DDecayLength) ;
                t->SetBranchAddress("D12DDecayLengthSignificance", &D12DDecayLengthSignificance) ;
                t->SetBranchAddress("D12DDecayLength", &D12DDecayLength) ;
                t->SetBranchAddress("D1zDCASignificanceDaugther1", &D1zDCASignificanceDaugther1) ;
                t->SetBranchAddress("D1xyDCASignificanceDaugther1", &D1xyDCASignificanceDaugther1) ;
                t->SetBranchAddress("D1NHitD1", &D1NHitD1)    ;
                t->SetBranchAddress("D1HighPurityDaugther1", &D1HighPurityDaugther1) ;
                t->SetBranchAddress("D1pTD1", &D1pTD1)      ;
                t->SetBranchAddress("D1pTerrD1", &D1pTerrD1)   ;
                t->SetBranchAddress("D1EtaD1", &D1EtaD1)     ;
                t->SetBranchAddress("D1PhiD1", &D1PhiD1)     ;
                t->SetBranchAddress("D1dedxHarmonic2D1", &D1dedxHarmonic2D1) ;
                t->SetBranchAddress("D1zDCASignificanceDaugther2", &D1zDCASignificanceDaugther2) ;
                t->SetBranchAddress("D1xyDCASignificanceDaugther2", &D1xyDCASignificanceDaugther2) ;
                t->SetBranchAddress("D1NHitD2", &D1NHitD2)    ;
                t->SetBranchAddress("D1HighPurityDaugther2", &D1HighPurityDaugther2) ;
                t->SetBranchAddress("D1pTD2", &D1pTD2)      ;
                t->SetBranchAddress("D1pTerrD2", &D1pTerrD2)   ;
                t->SetBranchAddress("D1EtaD2", &D1EtaD2)     ;
                t->SetBranchAddress("D1PhiD2", &D1PhiD2)     ;
                t->SetBranchAddress("D1dedxHarmonic2D2", &D1dedxHarmonic2D2) ;

            	t->SetBranchAddress("D1isSwap", &D1isSwap)    ;
            	t->SetBranchAddress("D1idmom_reco", &D1idmom_reco) ;
            	t->SetBranchAddress("D1matchGEN", &D1matchGEN)  ;
            	t->SetBranchAddress("D1gen_ancestorFlavor", &D1gen_ancestorFlavor) ;
            	t->SetBranchAddress("D1gen_ancestorId", &D1gen_ancestorId) ;
            	t->SetBranchAddress("D1gen_PVx_", &D1gen_PVx_)  ;
            	t->SetBranchAddress("D1gen_PVy", &D1gen_PVy)   ;
            	t->SetBranchAddress("D1gen_PVz", &D1gen_PVz)   ;
            	t->SetBranchAddress("D1gen_pT", &D1gen_pT)    ;
            	t->SetBranchAddress("D1gen_eta", &D1gen_eta)   ;
            	t->SetBranchAddress("D1gen_phi", &D1gen_phi)   ;
            	t->SetBranchAddress("D1gen_mass", &D1gen_mass)  ;
            	t->SetBranchAddress("D1gen_y", &D1gen_y)     ;
            	t->SetBranchAddress("D1gen_decayLength3D", &D1gen_decayLength3D) ;
            	t->SetBranchAddress("D1gen_decayLength2D", &D1gen_decayLength2D) ;
            	t->SetBranchAddress("D1gen_angle3D", &D1gen_angle3D) ;
            	t->SetBranchAddress("D1gen_angle2D", &D1gen_angle2D) ;
            	t->SetBranchAddress("D1gen_pTD1", &D1gen_pTD1)  ;
            	t->SetBranchAddress("D1gen_etaD1", &D1gen_etaD1) ;
            	t->SetBranchAddress("D1gen_phiD1", &D1gen_phiD1) ;
            	t->SetBranchAddress("D1gen_massD1", &D1gen_massD1) ;
            	t->SetBranchAddress("D1gen_yD1", &D1gen_yD1)   ;
            	t->SetBranchAddress("D1gen_chargeD1", &D1gen_chargeD1) ;
            	t->SetBranchAddress("D1gen_pdgIdD1", &D1gen_pdgIdD1) ;
            	t->SetBranchAddress("D1gen_pTD2", &D1gen_pTD2)  ;
            	t->SetBranchAddress("D1gen_etaD2", &D1gen_etaD2) ;
            	t->SetBranchAddress("D1gen_phiD2", &D1gen_phiD2) ;
            	t->SetBranchAddress("D1gen_massD2", &D1gen_massD2) ;
            	t->SetBranchAddress("D1gen_yD2", &D1gen_yD2)   ;
            	t->SetBranchAddress("D1gen_chargeD2", &D1gen_chargeD2) ;
            	t->SetBranchAddress("D1gen_pdgIdD2", &D1gen_pdgIdD2) ;


                t->SetBranchAddress("D2Pt", &D2Pt);                                         
                t->SetBranchAddress("D2Y", &D2Y);                                          
                t->SetBranchAddress("D2Eta", &D2Eta);                                        
                t->SetBranchAddress("D2Phi", &D2Phi);                                        
                t->SetBranchAddress("D2Mass", &D2Mass);                                       
                t->SetBranchAddress("D2mva", &D2mva);                                        
                t->SetBranchAddress("D2flavor", &D2flavor);                                     
                t->SetBranchAddress("D2VtxProb", &D2VtxProb);                                    
                t->SetBranchAddress("D23DCosPointingAngle", &D23DCosPointingAngle) ;
                t->SetBranchAddress("D23DPointingAngle", &D23DPointingAngle) ;
                t->SetBranchAddress("D22DCosPointingAngle", &D22DCosPointingAngle) ;
                t->SetBranchAddress("D22DPointingAngle", &D22DPointingAngle) ;
                t->SetBranchAddress("D23DDecayLengthSignificance", &D23DDecayLengthSignificance) ;
                t->SetBranchAddress("D23DDecayLength", &D23DDecayLength) ;
                t->SetBranchAddress("D22DDecayLengthSignificance", &D22DDecayLengthSignificance) ;
                t->SetBranchAddress("D22DDecayLength", &D22DDecayLength) ;
                t->SetBranchAddress("D2zDCASignificanceDaugther1", &D2zDCASignificanceDaugther1) ;
                t->SetBranchAddress("D2xyDCASignificanceDaugther1", &D2xyDCASignificanceDaugther1) ;
                t->SetBranchAddress("D2NHitD1", &D2NHitD1)    ;
                t->SetBranchAddress("D2HighPurityDaugther1", &D2HighPurityDaugther1) ;
                t->SetBranchAddress("D2pTD1", &D2pTD1)      ;
                t->SetBranchAddress("D2pTerrD1", &D2pTerrD1)   ;
                t->SetBranchAddress("D2EtaD1", &D2EtaD1)     ;
                t->SetBranchAddress("D2PhiD1", &D2PhiD1)     ;
                t->SetBranchAddress("D2dedxHarmonic2D1", &D2dedxHarmonic2D1) ;
                t->SetBranchAddress("D2zDCASignificanceDaugther2", &D2zDCASignificanceDaugther2) ;
                t->SetBranchAddress("D2xyDCASignificanceDaugther2", &D2xyDCASignificanceDaugther2) ;
                t->SetBranchAddress("D2NHitD2", &D2NHitD2)    ;
                t->SetBranchAddress("D2HighPurityDaugther2", &D2HighPurityDaugther2) ;
                t->SetBranchAddress("D2pTD2", &D2pTD2)      ;
                t->SetBranchAddress("D2pTerrD2", &D2pTerrD2)   ;
                t->SetBranchAddress("D2EtaD2", &D2EtaD2)     ;
                t->SetBranchAddress("D2PhiD2", &D2PhiD2)     ;
                t->SetBranchAddress("D2dedxHarmonic2D2", &D2dedxHarmonic2D2) ;


            	t->SetBranchAddress("D2isSwap", &D2isSwap)    ;
            	t->SetBranchAddress("D2idmom_reco", &D2idmom_reco) ;
            	t->SetBranchAddress("D2matchGEN", &D2matchGEN)  ;
            	t->SetBranchAddress("D2gen_ancestorFlavor", &D2gen_ancestorFlavor) ;
            	t->SetBranchAddress("D2gen_ancestorId", &D2gen_ancestorId) ;
            	t->SetBranchAddress("D2gen_PVx_", &D2gen_PVx_)  ;
            	t->SetBranchAddress("D2gen_PVy", &D2gen_PVy)   ;
            	t->SetBranchAddress("D2gen_PVz", &D2gen_PVz)   ;
            	t->SetBranchAddress("D2gen_pT", &D2gen_pT)    ;
            	t->SetBranchAddress("D2gen_eta", &D2gen_eta)   ;
            	t->SetBranchAddress("D2gen_phi", &D2gen_phi)   ;
            	t->SetBranchAddress("D2gen_mass", &D2gen_mass)  ;
            	t->SetBranchAddress("D2gen_y", &D2gen_y)     ;
            	t->SetBranchAddress("D2gen_decayLength3D", &D2gen_decayLength3D) ;
            	t->SetBranchAddress("D2gen_decayLength2D", &D2gen_decayLength2D) ;
            	t->SetBranchAddress("D2gen_angle3D", &D2gen_angle3D) ;
            	t->SetBranchAddress("D2gen_angle2D", &D2gen_angle2D) ;
            	t->SetBranchAddress("D2gen_pTD1", &D2gen_pTD1)  ;
            	t->SetBranchAddress("D2gen_etaD1", &D2gen_etaD1) ;
            	t->SetBranchAddress("D2gen_phiD1", &D2gen_phiD1) ;
            	t->SetBranchAddress("D2gen_massD1", &D2gen_massD1) ;
            	t->SetBranchAddress("D2gen_yD1", &D2gen_yD1)   ;
            	t->SetBranchAddress("D2gen_chargeD1", &D2gen_chargeD1) ;
            	t->SetBranchAddress("D2gen_pdgIdD1", &D2gen_pdgIdD1) ;
            	t->SetBranchAddress("D2gen_pTD2", &D2gen_pTD2)  ;
            	t->SetBranchAddress("D2gen_etaD2", &D2gen_etaD2) ;
            	t->SetBranchAddress("D2gen_phiD2", &D2gen_phiD2) ;
            	t->SetBranchAddress("D2gen_massD2", &D2gen_massD2) ;
            	t->SetBranchAddress("D2gen_yD2", &D2gen_yD2)   ;
            	t->SetBranchAddress("D2gen_chargeD2", &D2gen_chargeD2) ;
            	t->SetBranchAddress("D2gen_pdgIdD2", &D2gen_pdgIdD2) ;
            };

            void setOutputTree(TTree* t){

                t->Branch("Ntrkoffline", &Ntrkoffline) ;
                t->Branch("Npixel", &Npixel)    ;
                t->Branch("HFsumET", &HFsumET)   ;
                t->Branch("bestvtxX", &bestvtxX)  ;
                t->Branch("bestvtxY", &bestvtxY)  ;
                t->Branch("bestvtxZ", &bestvtxZ)  ;
                t->Branch("candSize", &candSize)  ;

                t->Branch("DDPt", &DDPt);
                t->Branch("DDY", &DDY);
                t->Branch("DDPhi", &DDPhi);
                t->Branch("DDMass", &DDMass);

                t->Branch("D1Idx", &D1Idx);
                t->Branch("D2Idx", &D2Idx);

                t->Branch("D1Pt", &D1Pt);                                         
                t->Branch("D1Y", &D1Y);                                          
                t->Branch("D1Eta", &D1Eta);                                        
                t->Branch("D1Phi", &D1Phi);                                        
                t->Branch("D1Mass", &D1Mass);                                       
                t->Branch("D1mva", &D1mva);                                        
                t->Branch("D1flavor", &D1flavor);                                     
                t->Branch("D1VtxProb", &D1VtxProb);                                    
                t->Branch("D13DCosPointingAngle", &D13DCosPointingAngle) ;
                t->Branch("D13DPointingAngle", &D13DPointingAngle) ;
                t->Branch("D12DCosPointingAngle", &D12DCosPointingAngle) ;
                t->Branch("D12DPointingAngle", &D12DPointingAngle) ;
                t->Branch("D13DDecayLengthSignificance", &D13DDecayLengthSignificance) ;
                t->Branch("D13DDecayLength", &D13DDecayLength) ;
                t->Branch("D12DDecayLengthSignificance", &D12DDecayLengthSignificance) ;
                t->Branch("D12DDecayLength", &D12DDecayLength) ;
                t->Branch("D1zDCASignificanceDaugther1", &D1zDCASignificanceDaugther1) ;
                t->Branch("D1xyDCASignificanceDaugther1", &D1xyDCASignificanceDaugther1) ;
                t->Branch("D1NHitD1", &D1NHitD1)    ;
                t->Branch("D1HighPurityDaugther1", &D1HighPurityDaugther1) ;
                t->Branch("D1pTD1", &D1pTD1)      ;
                t->Branch("D1pTerrD1", &D1pTerrD1)   ;
                t->Branch("D1EtaD1", &D1EtaD1)     ;
                t->Branch("D1PhiD1", &D1PhiD1)     ;
                t->Branch("D1dedxHarmonic2D1", &D1dedxHarmonic2D1) ;
                t->Branch("D1zDCASignificanceDaugther2", &D1zDCASignificanceDaugther2) ;
                t->Branch("D1xyDCASignificanceDaugther2", &D1xyDCASignificanceDaugther2) ;
                t->Branch("D1NHitD2", &D1NHitD2)    ;
                t->Branch("D1HighPurityDaugther2", &D1HighPurityDaugther2) ;
                t->Branch("D1pTD2", &D1pTD2)      ;
                t->Branch("D1pTerrD2", &D1pTerrD2)   ;
                t->Branch("D1EtaD2", &D1EtaD2)     ;
                t->Branch("D1PhiD2", &D1PhiD2)     ;
                t->Branch("D1dedxHarmonic2D2", &D1dedxHarmonic2D2) ;

            	t->Branch("D1isSwap", &D1isSwap)    ;
            	t->Branch("D1idmom_reco", &D1idmom_reco) ;
            	t->Branch("D1matchGEN", &D1matchGEN)  ;
            	t->Branch("D1gen_ancestorFlavor", &D1gen_ancestorFlavor) ;
            	t->Branch("D1gen_ancestorId", &D1gen_ancestorId) ;
            	t->Branch("D1gen_PVx_", &D1gen_PVx_)  ;
            	t->Branch("D1gen_PVy", &D1gen_PVy)   ;
            	t->Branch("D1gen_PVz", &D1gen_PVz)   ;
            	t->Branch("D1gen_pT", &D1gen_pT)    ;
            	t->Branch("D1gen_eta", &D1gen_eta)   ;
            	t->Branch("D1gen_phi", &D1gen_phi)   ;
            	t->Branch("D1gen_mass", &D1gen_mass)  ;
            	t->Branch("D1gen_y", &D1gen_y)     ;
            	t->Branch("D1gen_decayLength3D", &D1gen_decayLength3D) ;
            	t->Branch("D1gen_decayLength2D", &D1gen_decayLength2D) ;
            	t->Branch("D1gen_angle3D", &D1gen_angle3D) ;
            	t->Branch("D1gen_angle2D", &D1gen_angle2D) ;
            	t->Branch("D1gen_pTD1", &D1gen_pTD1)  ;
            	t->Branch("D1gen_etaD1", &D1gen_etaD1) ;
            	t->Branch("D1gen_phiD1", &D1gen_phiD1) ;
            	t->Branch("D1gen_massD1", &D1gen_massD1) ;
            	t->Branch("D1gen_yD1", &D1gen_yD1)   ;
            	t->Branch("D1gen_chargeD1", &D1gen_chargeD1) ;
            	t->Branch("D1gen_pdgIdD1", &D1gen_pdgIdD1) ;
            	t->Branch("D1gen_pTD2", &D1gen_pTD2)  ;
            	t->Branch("D1gen_etaD2", &D1gen_etaD2) ;
            	t->Branch("D1gen_phiD2", &D1gen_phiD2) ;
            	t->Branch("D1gen_massD2", &D1gen_massD2) ;
            	t->Branch("D1gen_yD2", &D1gen_yD2)   ;
            	t->Branch("D1gen_chargeD2", &D1gen_chargeD2) ;
            	t->Branch("D1gen_pdgIdD2", &D1gen_pdgIdD2) ;

                t->Branch("D2Pt", &D2Pt);                                         
                t->Branch("D2Y", &D2Y);                                          
                t->Branch("D2Eta", &D2Eta);                                        
                t->Branch("D2Phi", &D2Phi);                                        
                t->Branch("D2Mass", &D2Mass);                                       
                t->Branch("D2mva", &D2mva);                                        
                t->Branch("D2flavor", &D2flavor);                                     
                t->Branch("D2VtxProb", &D2VtxProb);                                    
                t->Branch("D23DCosPointingAngle", &D23DCosPointingAngle) ;
                t->Branch("D23DPointingAngle", &D23DPointingAngle) ;
                t->Branch("D22DCosPointingAngle", &D22DCosPointingAngle) ;
                t->Branch("D22DPointingAngle", &D22DPointingAngle) ;
                t->Branch("D23DDecayLengthSignificance", &D23DDecayLengthSignificance) ;
                t->Branch("D23DDecayLength", &D23DDecayLength) ;
                t->Branch("D22DDecayLengthSignificance", &D22DDecayLengthSignificance) ;
                t->Branch("D22DDecayLength", &D22DDecayLength) ;
                t->Branch("D2zDCASignificanceDaugther1", &D2zDCASignificanceDaugther1) ;
                t->Branch("D2xyDCASignificanceDaugther1", &D2xyDCASignificanceDaugther1) ;
                t->Branch("D2NHitD1", &D2NHitD1)    ;
                t->Branch("D2HighPurityDaugther1", &D2HighPurityDaugther1) ;
                t->Branch("D2pTD1", &D2pTD1)      ;
                t->Branch("D2pTerrD1", &D2pTerrD1)   ;
                t->Branch("D2EtaD1", &D2EtaD1)     ;
                t->Branch("D2PhiD1", &D2PhiD1)     ;
                t->Branch("D2dedxHarmonic2D1", &D2dedxHarmonic2D1) ;
                t->Branch("D2zDCASignificanceDaugther2", &D2zDCASignificanceDaugther2) ;
                t->Branch("D2xyDCASignificanceDaugther2", &D2xyDCASignificanceDaugther2) ;
                t->Branch("D2NHitD2", &D2NHitD2)    ;
                t->Branch("D2HighPurityDaugther2", &D2HighPurityDaugther2) ;
                t->Branch("D2pTD2", &D2pTD2)      ;
                t->Branch("D2pTerrD2", &D2pTerrD2)   ;
                t->Branch("D2EtaD2", &D2EtaD2)     ;
                t->Branch("D2PhiD2", &D2PhiD2)     ;
                t->Branch("D2dedxHarmonic2D2", &D2dedxHarmonic2D2) ;

            	t->Branch("D2isSwap", &D2isSwap)    ;
            	t->Branch("D2idmom_reco", &D2idmom_reco) ;
            	t->Branch("D2matchGEN", &D2matchGEN)  ;
            	t->Branch("D2gen_ancestorFlavor", &D2gen_ancestorFlavor) ;
            	t->Branch("D2gen_ancestorId", &D2gen_ancestorId) ;
            	t->Branch("D2gen_PVx_", &D2gen_PVx_)  ;
            	t->Branch("D2gen_PVy", &D2gen_PVy)   ;
            	t->Branch("D2gen_PVz", &D2gen_PVz)   ;
            	t->Branch("D2gen_pT", &D2gen_pT)    ;
            	t->Branch("D2gen_eta", &D2gen_eta)   ;
            	t->Branch("D2gen_phi", &D2gen_phi)   ;
            	t->Branch("D2gen_mass", &D2gen_mass)  ;
            	t->Branch("D2gen_y", &D2gen_y)     ;
            	t->Branch("D2gen_decayLength3D", &D2gen_decayLength3D) ;
            	t->Branch("D2gen_decayLength2D", &D2gen_decayLength2D) ;
            	t->Branch("D2gen_angle3D", &D2gen_angle3D) ;
            	t->Branch("D2gen_angle2D", &D2gen_angle2D) ;
            	t->Branch("D2gen_pTD1", &D2gen_pTD1)  ;
            	t->Branch("D2gen_etaD1", &D2gen_etaD1) ;
            	t->Branch("D2gen_phiD1", &D2gen_phiD1) ;
            	t->Branch("D2gen_massD1", &D2gen_massD1) ;
            	t->Branch("D2gen_yD1", &D2gen_yD1)   ;
            	t->Branch("D2gen_chargeD1", &D2gen_chargeD1) ;
            	t->Branch("D2gen_pdgIdD1", &D2gen_pdgIdD1) ;
            	t->Branch("D2gen_pTD2", &D2gen_pTD2)  ;
            	t->Branch("D2gen_etaD2", &D2gen_etaD2) ;
            	t->Branch("D2gen_phiD2", &D2gen_phiD2) ;
            	t->Branch("D2gen_massD2", &D2gen_massD2) ;
            	t->Branch("D2gen_yD2", &D2gen_yD2)   ;
            	t->Branch("D2gen_chargeD2", &D2gen_chargeD2) ;
            	t->Branch("D2gen_pdgIdD2", &D2gen_pdgIdD2) ;
            }
            void calcDDspec(){
                ROOT::Math::PtEtaPhiMVector _D1_(D1Pt, D1Eta, D1Phi, D1Mass);
                ROOT::Math::PtEtaPhiMVector _D2_(D2Pt, D2Eta, D2Phi, D2Mass);
                auto _DD_ = _D1_ + _D2_;
                DDPt = _DD_.Pt();
                DDY = _DD_.Rapidity();
                DDPhi = _DD_.Phi();
                DDMass = _DD_.M();
                // DDQinv = _DD_.M2() - 4 * 1.865*1.865;
            };
            void calcBoost(){
            };
            void copyDn(simpleDMCevt& evt, int idx, int D){
                if( D == 1){
                    Ntrkoffline = evt.Ntrkoffline ;
                    Npixel = evt.Npixel    ;
                    HFsumET = evt.HFsumET   ;
                    bestvtxX = evt.bestvtxX  ;
                    bestvtxY = evt.bestvtxY  ;
                    bestvtxZ = evt.bestvtxZ  ;
                    candSize = evt.candSize  ;
                }
                if( D == 1){
                    D1Idx = idx;
                    D1Pt = evt.pT;                                         
                    D1Y = evt.y;                                          
                    D1Eta = evt.eta;                                        
                    D1Phi = evt.phi;                                        
                    D1Mass = evt.mass;                                       
                    D1mva = evt.mva;                                        
                    D1flavor = evt.flavor;                                     
                    D1VtxProb = evt.VtxProb;                                    
                    D13DCosPointingAngle = evt.v3DCosPointingAngle ;
                    D13DPointingAngle = evt.v3DPointingAngle ;
                    D12DCosPointingAngle = evt.v2DCosPointingAngle ;
                    D12DPointingAngle = evt.v2DPointingAngle ;
                    D13DDecayLengthSignificance = evt.v3DDecayLengthSignificance ;
                    D13DDecayLength = evt.v3DDecayLength ;
                    D12DDecayLengthSignificance = evt.v2DDecayLengthSignificance ;
                    D12DDecayLength = evt.v2DDecayLength ;
                    D1zDCASignificanceDaugther1 = evt.zDCASignificanceDaugther1 ;
                    D1xyDCASignificanceDaugther1 = evt.xyDCASignificanceDaugther1 ;
                    D1NHitD1 = evt.NHitD1    ;
                    D1HighPurityDaugther1 = evt.HighPurityDaugther1 ;
                    D1pTD1 = evt.pTD1      ;
                    D1pTerrD1 = evt.pTerrD1   ;
                    D1EtaD1 = evt.EtaD1     ;
                    D1PhiD1 = evt.PhiD1     ;
                    D1dedxHarmonic2D1 = evt.dedxHarmonic2D1 ;
                    D1zDCASignificanceDaugther2 = evt.zDCASignificanceDaugther2 ;
                    D1xyDCASignificanceDaugther2 = evt.xyDCASignificanceDaugther2 ;
                    D1NHitD2 = evt.NHitD2    ;
                    D1HighPurityDaugther2 = evt.HighPurityDaugther2 ;
                    D1pTD2 = evt.pTD2      ;
                    D1pTerrD2 = evt.pTerrD2   ;
                    D1EtaD2 = evt.EtaD2     ;
                    D1PhiD2 = evt.PhiD2     ;
                    D1dedxHarmonic2D2 = evt.dedxHarmonic2D2 ;

            		D1isSwap = evt.isSwap    ;
            		D1idmom_reco = evt.idmom_reco ;
            		D1matchGEN = evt.matchGEN  ;
            		D1gen_ancestorFlavor = evt.gen_ancestorFlavor ;
            		D1gen_ancestorId = evt.gen_ancestorId ;
            		D1gen_PVx_ = evt.gen_PVx_  ;
            		D1gen_PVy = evt.gen_PVy   ;
            		D1gen_PVz = evt.gen_PVz   ;
            		D1gen_pT = evt.gen_pT    ;
            		D1gen_eta = evt.gen_eta   ;
            		D1gen_phi = evt.gen_phi   ;
            		D1gen_mass = evt.gen_mass  ;
            		D1gen_y = evt.gen_y     ;
            		D1gen_decayLength3D = evt.gen_decayLength3D ;
            		D1gen_decayLength2D = evt.gen_decayLength2D ;
            		D1gen_angle3D = evt.gen_angle3D ;
            		D1gen_angle2D = evt.gen_angle2D ;
            		D1gen_pTD1 = evt.gen_pTD1  ;
            		D1gen_etaD1 = evt.gen_etaD1 ;
            		D1gen_phiD1 = evt.gen_phiD1 ;
            		D1gen_massD1 = evt.gen_massD1 ;
            		D1gen_yD1 = evt.gen_yD1   ;
            		D1gen_chargeD1 = evt.gen_chargeD1 ;
            		D1gen_pdgIdD1 = evt.gen_pdgIdD1 ;
            		D1gen_pTD2 = evt.gen_pTD2  ;
            		D1gen_etaD2 = evt.gen_etaD2 ;
            		D1gen_phiD2 = evt.gen_phiD2 ;
            		D1gen_massD2 = evt.gen_massD2 ;
            		D1gen_yD2 = evt.gen_yD2   ;
            		D1gen_chargeD2 = evt.gen_chargeD2 ;
            		D1gen_pdgIdD2 = evt.gen_pdgIdD2 ;
                };
                if( D == 2){
                    D2Idx = idx;
                    D2Pt = evt.pT;                                         
                    D2Y = evt.y;                                          
                    D2Eta = evt.eta;                                        
                    D2Phi = evt.phi;                                        
                    D2Mass = evt.mass;                                       
                    D2mva = evt.mva;                                        
                    D2flavor = evt.flavor;                                     
                    D2VtxProb = evt.VtxProb;                                    
                    D23DCosPointingAngle = evt.v3DCosPointingAngle ;
                    D23DPointingAngle = evt.v3DPointingAngle ;
                    D22DCosPointingAngle = evt.v2DCosPointingAngle ;
                    D22DPointingAngle = evt.v2DPointingAngle ;
                    D23DDecayLengthSignificance = evt.v3DDecayLengthSignificance ;
                    D23DDecayLength = evt.v3DDecayLength ;
                    D22DDecayLengthSignificance = evt.v2DDecayLengthSignificance ;
                    D22DDecayLength = evt.v2DDecayLength ;
                    D2zDCASignificanceDaugther1 = evt.zDCASignificanceDaugther1 ;
                    D2xyDCASignificanceDaugther1 = evt.xyDCASignificanceDaugther1 ;
                    D2NHitD1 = evt.NHitD1    ;
                    D2HighPurityDaugther1 = evt.HighPurityDaugther1 ;
                    D2pTD1 = evt.pTD1      ;
                    D2pTerrD1 = evt.pTerrD1   ;
                    D2EtaD1 = evt.EtaD1     ;
                    D2PhiD1 = evt.PhiD1     ;
                    D2dedxHarmonic2D1 = evt.dedxHarmonic2D1 ;
                    D2zDCASignificanceDaugther2 = evt.zDCASignificanceDaugther2 ;
                    D2xyDCASignificanceDaugther2 = evt.xyDCASignificanceDaugther2 ;
                    D2NHitD2 = evt.NHitD2    ;
                    D2HighPurityDaugther2 = evt.HighPurityDaugther2 ;
                    D2pTD2 = evt.pTD2      ;
                    D2pTerrD2 = evt.pTerrD2   ;
                    D2EtaD2 = evt.EtaD2     ;
                    D2PhiD2 = evt.PhiD2     ;
                    D2dedxHarmonic2D2 = evt.dedxHarmonic2D2 ;

            		D2isSwap = evt.isSwap    ;
            		D2idmom_reco = evt.idmom_reco ;
            		D2matchGEN = evt.matchGEN  ;
            		D2gen_ancestorFlavor = evt.gen_ancestorFlavor ;
            		D2gen_ancestorId = evt.gen_ancestorId ;
            		D2gen_PVx_ = evt.gen_PVx_  ;
            		D2gen_PVy = evt.gen_PVy   ;
            		D2gen_PVz = evt.gen_PVz   ;
            		D2gen_pT = evt.gen_pT    ;
            		D2gen_eta = evt.gen_eta   ;
            		D2gen_phi = evt.gen_phi   ;
            		D2gen_mass = evt.gen_mass  ;
            		D2gen_y = evt.gen_y     ;
            		D2gen_decayLength3D = evt.gen_decayLength3D ;
            		D2gen_decayLength2D = evt.gen_decayLength2D ;
            		D2gen_angle3D = evt.gen_angle3D ;
            		D2gen_angle2D = evt.gen_angle2D ;
            		D2gen_pTD1 = evt.gen_pTD1  ;
            		D2gen_etaD1 = evt.gen_etaD1 ;
            		D2gen_phiD1 = evt.gen_phiD1 ;
            		D2gen_massD1 = evt.gen_massD1 ;
            		D2gen_yD1 = evt.gen_yD1   ;
            		D2gen_chargeD1 = evt.gen_chargeD1 ;
            		D2gen_pdgIdD1 = evt.gen_pdgIdD1 ;
            		D2gen_pTD2 = evt.gen_pTD2  ;
            		D2gen_etaD2 = evt.gen_etaD2 ;
            		D2gen_phiD2 = evt.gen_phiD2 ;
            		D2gen_massD2 = evt.gen_massD2 ;
            		D2gen_yD2 = evt.gen_yD2   ;
            		D2gen_chargeD2 = evt.gen_chargeD2 ;
            		D2gen_pdgIdD2 = evt.gen_pdgIdD2 ;
                }
            };
            void copyDn(simpleDMCTreeevt& evt, int idx, int D){

                if( D == 1){
                    Ntrkoffline = evt.Ntrkoffline ;
                    Npixel = evt.Npixel    ;
                    HFsumET = evt.HFsumET   ;
                    bestvtxX = evt.bestvtxX  ;
                    bestvtxY = evt.bestvtxY  ;
                    bestvtxZ = evt.bestvtxZ  ;
                    candSize = evt.candSize  ;
                }
                if( D == 1){
                    D1Idx = idx;
                    D1Pt = evt.pT[idx];                                         
                    D1Y = evt.y[idx];                                          
                    D1Eta = evt.eta[idx];                                        
                    D1Phi = evt.phi[idx];                                        
                    D1Mass = evt.mass[idx];                                       
                    D1mva = evt.mva[idx];                                        
                    D1flavor = evt.flavor[idx];                                     
                    D1VtxProb = evt.VtxProb[idx];                                    
                    D13DCosPointingAngle = evt.v3DCosPointingAngle [idx];
                    D13DPointingAngle = evt.v3DPointingAngle [idx];
                    D12DCosPointingAngle = evt.v2DCosPointingAngle [idx];
                    D12DPointingAngle = evt.v2DPointingAngle [idx];
                    D13DDecayLengthSignificance = evt.v3DDecayLengthSignificance [idx];
                    D13DDecayLength = evt.v3DDecayLength [idx];
                    D12DDecayLengthSignificance = evt.v2DDecayLengthSignificance [idx];
                    D12DDecayLength = evt.v2DDecayLength [idx];
                    D1zDCASignificanceDaugther1 = evt.zDCASignificancedaughter1 [idx];
                    D1xyDCASignificanceDaugther1 = evt.xyDCASignificancedaughter1 [idx];
                    D1NHitD1 = evt.NHitD1    [idx];
                    D1HighPurityDaugther1 = evt.HighPuritydaughter1 [idx];
                    D1pTD1 = evt.pTD1      [idx];
                    D1pTerrD1 = evt.pTerrD1   [idx];
                    D1EtaD1 = evt.EtaD1     [idx];
                    D1PhiD1 = evt.PhiD1     [idx];
                    // D1dedxHarmonic2D1 = evt.dedxHarmonic2D1 [idx];
                    D1zDCASignificanceDaugther2 = evt.zDCASignificancedaughter2 [idx];
                    D1xyDCASignificanceDaugther2 = evt.xyDCASignificancedaughter2 [idx];
                    D1NHitD2 = evt.NHitD2    [idx];
                    D1HighPurityDaugther2 = evt.HighPuritydaughter2 [idx];
                    D1pTD2 = evt.pTD2      [idx];
                    D1pTerrD2 = evt.pTerrD2   [idx];
                    D1EtaD2 = evt.EtaD2     [idx];
                    D1PhiD2 = evt.PhiD2     [idx];
                    // D1dedxHarmonic2D2 = evt.dedxHarmonic2D2 [idx];

            		D1isSwap = evt.isSwap    [idx];
            		D1idmom_reco = evt.idmom_reco [idx];
            		D1matchGEN = evt.matchGEN  [idx];
            		//D1gen_ancestorFlavor = evt.gen_ancestorFlavor [idx];
            		//D1gen_ancestorId = evt.gen_ancestorId [idx];
            		//D1gen_PVx_ = evt.gen_PVx_  [idx];
            		//D1gen_PVy = evt.gen_PVy   [idx];
            		//D1gen_PVz = evt.gen_PVz   [idx];
            		//D1gen_pT = evt.gen_pT    [idx];
            		//D1gen_eta = evt.gen_eta   [idx];
            		//D1gen_phi = evt.gen_phi   [idx];
            		//D1gen_mass = evt.gen_mass  [idx];
            		//D1gen_y = evt.gen_y     [idx];
            		//D1gen_decayLength3D = evt.gen_decayLength3D [idx];
            		//D1gen_decayLength2D = evt.gen_decayLength2D [idx];
            		//D1gen_angle3D = evt.gen_angle3D [idx];
            		//D1gen_angle2D = evt.gen_angle2D [idx];
            		//D1gen_pTD1 = evt.gen_pTD1  [idx];
            		//D1gen_etaD1 = evt.gen_etaD1 [idx];
            		//D1gen_phiD1 = evt.gen_phiD1 [idx];
            		//D1gen_massD1 = evt.gen_massD1 [idx];
            		//D1gen_yD1 = evt.gen_yD1   [idx];
            		//D1gen_chargeD1 = evt.gen_chargeD1 [idx];
            		//D1gen_pdgIdD1 = evt.gen_pdgIdD1 [idx];
            		//D1gen_pTD2 = evt.gen_pTD2  [idx];
            		//D1gen_etaD2 = evt.gen_etaD2 [idx];
            		//D1gen_phiD2 = evt.gen_phiD2 [idx];
            		//D1gen_massD2 = evt.gen_massD2 [idx];
            		//D1gen_yD2 = evt.gen_yD2   [idx];
            		//D1gen_chargeD2 = evt.gen_chargeD2 [idx];
            		//D1gen_pdgIdD2 = evt.gen_pdgIdD2 [idx];
                };
                if( D == 2){
                    D2Idx = idx;
                    D2Pt = evt.pT[idx];                                         
                    D2Y = evt.y[idx];                                          
                    D2Eta = evt.eta[idx];                                        
                    D2Phi = evt.phi[idx];                                        
                    D2Mass = evt.mass[idx];                                       
                    D2mva = evt.mva[idx];                                        
                    D2flavor = evt.flavor[idx];                                     
                    D2VtxProb = evt.VtxProb[idx];                                    
                    D23DCosPointingAngle = evt.v3DCosPointingAngle [idx];
                    D23DPointingAngle = evt.v3DPointingAngle [idx];
                    D22DCosPointingAngle = evt.v2DCosPointingAngle [idx];
                    D22DPointingAngle = evt.v2DPointingAngle [idx];
                    D23DDecayLengthSignificance = evt.v3DDecayLengthSignificance [idx];
                    D23DDecayLength = evt.v3DDecayLength [idx];
                    D22DDecayLengthSignificance = evt.v2DDecayLengthSignificance [idx];
                    D22DDecayLength = evt.v2DDecayLength [idx];
                    D2zDCASignificanceDaugther1 = evt.zDCASignificancedaughter1 [idx];
                    D2xyDCASignificanceDaugther1 = evt.xyDCASignificancedaughter1 [idx];
                    D2NHitD1 = evt.NHitD1    [idx];
                    D2HighPurityDaugther1 = evt.HighPuritydaughter1 [idx];
                    D2pTD1 = evt.pTD1      [idx];
                    D2pTerrD1 = evt.pTerrD1   [idx];
                    D2EtaD1 = evt.EtaD1     [idx];
                    D2PhiD1 = evt.PhiD1     [idx];
                    // D2dedxHarmonic2D1 = evt.dedxHarmonic2D1 [idx];
                    D2zDCASignificanceDaugther2 = evt.zDCASignificancedaughter2 [idx];
                    D2xyDCASignificanceDaugther2 = evt.xyDCASignificancedaughter2 [idx];
                    D2NHitD2 = evt.NHitD2    [idx];
                    D2HighPurityDaugther2 = evt.HighPuritydaughter2 [idx];
                    D2pTD2 = evt.pTD2      [idx];
                    D2pTerrD2 = evt.pTerrD2   [idx];
                    D2EtaD2 = evt.EtaD2     [idx];
                    D2PhiD2 = evt.PhiD2     [idx];
                    // D2dedxHarmonic2D2 = evt.dedxHarmonic2D2 [idx];

            		D2isSwap = evt.isSwap    [idx];
            		D2idmom_reco = evt.idmom_reco [idx];
            		D2matchGEN = evt.matchGEN  [idx];
            		// D2gen_ancestorFlavor = evt.gen_ancestorFlavor [idx];
            		// D2gen_ancestorId = evt.gen_ancestorId [idx];
            		// D2gen_PVx_ = evt.gen_PVx_  [idx];
            		// D2gen_PVy = evt.gen_PVy   [idx];
            		// D2gen_PVz = evt.gen_PVz   [idx];
            		// D2gen_pT = evt.gen_pT    [idx];
            		// D2gen_eta = evt.gen_eta   [idx];
            		// D2gen_phi = evt.gen_phi   [idx];
            		// D2gen_mass = evt.gen_mass  [idx];
            		// D2gen_y = evt.gen_y     [idx];
            		// D2gen_decayLength3D = evt.gen_decayLength3D [idx];
            		// D2gen_decayLength2D = evt.gen_decayLength2D [idx];
            		// D2gen_angle3D = evt.gen_angle3D [idx];
            		// D2gen_angle2D = evt.gen_angle2D [idx];
            		// D2gen_pTD1 = evt.gen_pTD1  [idx];
            		// D2gen_etaD1 = evt.gen_etaD1 [idx];
            		// D2gen_phiD1 = evt.gen_phiD1 [idx];
            		// D2gen_massD1 = evt.gen_massD1 [idx];
            		// D2gen_yD1 = evt.gen_yD1   [idx];
            		// D2gen_chargeD1 = evt.gen_chargeD1 [idx];
            		// D2gen_pdgIdD1 = evt.gen_pdgIdD1 [idx];
            		// D2gen_pTD2 = evt.gen_pTD2  [idx];
            		// D2gen_etaD2 = evt.gen_etaD2 [idx];
            		// D2gen_phiD2 = evt.gen_phiD2 [idx];
            		// D2gen_massD2 = evt.gen_massD2 [idx];
            		// D2gen_yD2 = evt.gen_yD2   [idx];
            		// D2gen_chargeD2 = evt.gen_chargeD2 [idx];
            		// D2gen_pdgIdD2 = evt.gen_pdgIdD2 [idx];
                }
            };
            void copyDD(simpleDDMCTreeevt& evt, int idx){

                // Ntrkoffline = evt.Ntrkoffline ;
                // Npixel = evt.Npixel    ;
                // HFsumET = evt.HFsumET   ;
                // bestvtxX = evt.bestvtxX  ;
                // bestvtxY = evt.bestvtxY  ;
                // bestvtxZ = evt.bestvtxZ  ;
                // candSize = evt.candSize  ;

                // DDPt = evt.pT[idx] ;
                // DDY = evt.y[idx] ;
                // DDPhi = evt.phi[idx] ;
                // DDMass = evt.mass[idx] ;
                // // DDQinv = evt. ;
                // DDdca3D = evt.dca3D[idx] ;
                // DDdcaErr3D = evt.dcaErr3D[idx] ;
                // DDVtxProb = evt.VtxProb[idx] ;

                // DD3DCosPointingAngle = evt.v3DCosPointingAngle[idx];
                // DD3DPointingAngle = evt.v3DPointingAngle[idx];
                // DD2DCosPointingAngle = evt.v2DCosPointingAngle[idx];
                // DD2DPointingAngle = evt.v2DPointingAngle[idx];
                // DD3DDecayLengthSignificance = evt.v3DDecayLengthSignificance[idx];
                // DD3DDecayLength = evt.v3DDecayLength[idx];
                // DD2DDecayLengthSignificance = evt.v2DDecayLengthSignificance[idx];
                // DD2DDecayLength = evt.v2DDecayLength[idx];

                // // D1Idx = evt.D1Idx[idx];
                // // D2Idx = evt.D2Idx[idx];

                // D1Pt = evt.pTD1[idx];                                         
                // // D1Y = evt.D1[idx];                                          
                // D1Eta = evt.EtaD1[idx];                                        
                // D1Phi = evt.PhiD1[idx];                                        
                // D1Mass = evt.massdaughter1[idx];                                       
                // D1Y = algo::rapidity(D1Pt, D1Eta, D1Phi, D1Mass);
                // D1mva = evt.mvaDaughter1[idx];                                        
                // D1flavor = evt.flavordaughter1[idx];                                     
                // D1VtxProb = evt.VtxProbdaughter1[idx];                                    
                // D13DCosPointingAngle = evt.v3DCosPointingAngle1daughter1[idx] ;
                // D13DPointingAngle = evt.v3DPointingAngledaughter1[idx] ;
                // D12DCosPointingAngle = evt.v2DCosPointingAngledaughter1[idx] ;
                // D12DPointingAngle = evt.v2DPointingAngledaughter1[idx] ;
                // D13DDecayLengthSignificance = evt.v3DDecayLengthSignificancedaughter1[idx] ;
                // D13DDecayLength = evt.v3DDecayLengthdaughter1[idx] ;
                // D12DDecayLengthSignificance = evt.v2DDecayLengthSignificancedaughter1[idx] ;
                // D12DDecayLength = 0.0 ;
                // D1zDCASignificanceDaugther1 = evt.zDCASignificanceGranddaughter11[idx] ;
                // D1xyDCASignificanceDaugther1 = evt.xyDCASignificanceGranddaughter11[idx] ;
                // D1NHitD1 = evt.NHitGrandD11[idx]    ;
                // D1HighPurityDaugther1 = evt.HighPurityGranddaughter11[idx] ;
                // D1pTD1 = evt.pTGrandD11[idx]      ;
                // D1pTerrD1 = evt.pTerrGrandD11[idx]   ;
                // D1EtaD1 = evt.EtaGrandD11[idx]     ;
                // D1PhiD1 = 0.0 ;
                // D1dedxHarmonic2D1 = evt.dedxHarmonic2GrandD11[idx] ;
                // D1zDCASignificanceDaugther2 = evt.zDCASignificanceGranddaughter12[idx] ;
                // D1xyDCASignificanceDaugther2 = evt.xyDCASignificanceGranddaughter12[idx] ;
                // D1NHitD2 = evt.NHitGrandD12[idx]    ;
                // D1HighPurityDaugther2 = evt.HighPurityGranddaughter12[idx] ;
                // D1pTD2 = evt.pTGrandD12[idx]      ;
                // D1pTerrD2 = evt.pTerrGrandD12[idx]   ;
                // D1EtaD2 = evt.EtaGrandD12[idx]     ;
                // D1PhiD2 = 0.0 ;
                // D1dedxHarmonic2D2 = evt.dedxHarmonic2GrandD12[idx] ;

                // D1isSwap = evt.isSwap1[idx]    ;
                // D1idmom_reco = evt.idmom_reco1[idx] ;
                // D1matchGEN = evt.matchGEN1[idx]  ;
                // D1gen_ancestorFlavor = evt.gen_D1ancestorFlavor[idx] ;
                // D1gen_ancestorId = evt.idBAnc_reco1[idx] ;
                // D1gen_PVx_ = evt.gen_D1PVx[idx]  ;
                // D1gen_PVy = evt.gen_D1PVy[idx]   ;
                // D1gen_PVz = evt.gen_D1PVz[idx]   ;
                // D1gen_pT = evt.gen_D1pT[idx]    ;
                // D1gen_eta = evt.gen_D1eta[idx]   ;
                // D1gen_phi = evt.gen_D1phi[idx]   ;
                // D1gen_mass = evt.gen_D1mass[idx]  ;
                // D1gen_y = evt.gen_D1y[idx]     ;
                // D1gen_decayLength3D = evt.gen_D1decayLength3D[idx] ;
                // D1gen_decayLength2D = evt.gen_D1decayLength2D[idx] ;
                // D1gen_angle3D = evt.gen_D1angle3D[idx] ;
                // D1gen_angle2D = evt.gen_D1angle2D[idx] ;
                // D1gen_pTD1 = evt.gen_D1pTD1[idx]  ;
                // D1gen_etaD1 = evt.gen_D1etaD1[idx] ;
                // D1gen_phiD1 = evt.gen_D1phiD1[idx] ;
                // D1gen_massD1 = evt.gen_D1massD1[idx] ;
                // D1gen_yD1 = evt.gen_D1yD1[idx]   ;
                // D1gen_chargeD1 = evt.gen_D1chargeD1[idx] ;
                // D1gen_pdgIdD1 = evt.gen_D1pdgIdD1[idx] ;
                // D1gen_pTD2 = evt.gen_D1pTD2[idx]  ;
                // D1gen_etaD2 = evt.gen_D1etaD2[idx] ;
                // D1gen_phiD2 = evt.gen_D1phiD2[idx] ;
                // D1gen_massD2 = evt.gen_D1massD2[idx] ;
                // D1gen_yD2 = evt.gen_D1yD2[idx]   ;
                // D1gen_chargeD2 = evt.gen_D1chargeD2[idx] ;
                // D1gen_pdgIdD2 = evt.gen_D1pdgIdD2[idx] ;

                // D2Pt = evt.pTD2[idx];                                         
                // D2Eta = evt.EtaD2[idx];                                        
                // D2Phi = evt.PhiD2[idx];                                        
                // D2Mass = evt.massdaughter2[idx];                                       
                // D2Y = algo::rapidity(D2Pt, D2Eta, D2Phi, D2Mass);
                // D2mva = evt.mvaDaughter2[idx];                                        
                // D2flavor = evt.flavordaughter2[idx];                                     
                // D2VtxProb = evt.VtxProbdaughter2[idx];                                    
                // D23DCosPointingAngle = evt.v3DCosPointingAngle1daughter2[idx] ;
                // D23DPointingAngle = evt.v3DPointingAngledaughter2[idx] ;
                // D22DCosPointingAngle = evt.v2DCosPointingAngledaughter2[idx] ;
                // D22DPointingAngle = evt.v2DPointingAngledaughter2[idx] ;
                // D23DDecayLengthSignificance = evt.v3DDecayLengthSignificancedaughter2[idx] ;
                // D23DDecayLength = evt.v3DDecayLengthdaughter2[idx] ;
                // D22DDecayLengthSignificance = evt.v2DDecayLengthSignificancedaughter2[idx] ;
                // D22DDecayLength = 0.0 ;
                // D2zDCASignificanceDaugther1 = evt.zDCASignificanceGranddaughter21[idx] ;
                // D2xyDCASignificanceDaugther1 = evt.xyDCASignificanceGranddaughter21[idx] ;
                // D2NHitD1 = evt.NHitGrandD21[idx]    ;
                // D2HighPurityDaugther1 = evt.HighPurityGranddaughter21[idx] ;
                // D2pTD1 = evt.pTGrandD21[idx]      ;
                // D2pTerrD1 = evt.pTerrGrandD21[idx]   ;
                // D2EtaD1 = evt.EtaGrandD21[idx]     ;
                // D2PhiD1 = 0.0 ;
                // D2dedxHarmonic2D1 = evt.dedxHarmonic2GrandD21[idx] ;
                // D2zDCASignificanceDaugther2 = evt.zDCASignificanceGranddaughter22[idx] ;
                // D2xyDCASignificanceDaugther2 = evt.xyDCASignificanceGranddaughter22[idx] ;
                // D2NHitD2 = evt.NHitGrandD22[idx]    ;
                // D2HighPurityDaugther2 = evt.HighPurityGranddaughter22[idx] ;
                // D2pTD2 = evt.pTGrandD22[idx]      ;
                // D2pTerrD2 = evt.pTerrGrandD22[idx]   ;
                // D2EtaD2 = evt.EtaGrandD22[idx]     ;
                // D2PhiD2 = 0.0 ;
                // D2dedxHarmonic2D2 = evt.dedxHarmonic2GrandD22[idx] ;

                // D2isSwap = evt.isSwap2[idx]    ;
                // D2idmom_reco = evt.idmom_reco2[idx] ;
                // D2matchGEN = evt.matchGEN2[idx]  ;
                // D2gen_ancestorFlavor = evt.gen_D2ancestorFlavor[idx] ;
                // D2gen_ancestorId = evt.idBAnc_reco2[idx] ;
                // D2gen_PVx_ = evt.gen_D2PVx[idx]  ;
                // D2gen_PVy = evt.gen_D2PVy[idx]   ;
                // D2gen_PVz = evt.gen_D2PVz[idx]   ;
                // D2gen_pT = evt.gen_D2pT[idx]    ;
                // D2gen_eta = evt.gen_D2eta[idx]   ;
                // D2gen_phi = evt.gen_D2phi[idx]   ;
                // D2gen_mass = evt.gen_D2mass[idx]  ;
                // D2gen_y = evt.gen_D2y[idx]     ;
                // D2gen_decayLength3D = evt.gen_D2decayLength3D[idx] ;
                // D2gen_decayLength2D = evt.gen_D2decayLength2D[idx] ;
                // D2gen_angle3D = evt.gen_D2angle3D[idx] ;
                // D2gen_angle2D = evt.gen_D2angle2D[idx] ;
                // D2gen_pTD1 = evt.gen_D2pTD1[idx]  ;
                // D2gen_etaD1 = evt.gen_D2etaD1[idx] ;
                // D2gen_phiD1 = evt.gen_D2phiD1[idx] ;
                // D2gen_massD1 = evt.gen_D2massD1[idx] ;
                // D2gen_yD1 = evt.gen_D2yD1[idx]   ;
                // D2gen_chargeD1 = evt.gen_D2chargeD1[idx] ;
                // D2gen_pdgIdD1 = evt.gen_D2pdgIdD1[idx] ;
                // D2gen_pTD2 = evt.gen_D2pTD2[idx]  ;
                // D2gen_etaD2 = evt.gen_D2etaD2[idx] ;
                // D2gen_phiD2 = evt.gen_D2phiD2[idx] ;
                // D2gen_massD2 = evt.gen_D2massD2[idx] ;
                // D2gen_yD2 = evt.gen_D2yD2[idx]   ;
                // D2gen_chargeD2 = evt.gen_D2chargeD2[idx] ;
                // D2gen_pdgIdD2 = evt.gen_D2pdgIdD2[idx] ;

            }
        
    };
    struct simpleDMCGenevt{
        public:
        float    pT_gen    ;
        float    eta_gen   ;
        float    y_gen     ;
        int    status_gen ;
        int    MotherID_gen ;
        float    MotherPt_gen ;
        float    MotherEta_gen ;
        float    MotherPhi_gen ;
        float    MotherY_gen ;
        int    MotherStatus_gen ;
        int    DauID1_gen ;
        int    DauID2_gen ;
        int    DauID3_gen ;
        int    gen_ancestorFlavor ;
        int    gen_ancestorId ;
        float    gen_PVx_  ;
        float    gen_PVy   ;
        float    gen_PVz   ;
        float    gen_pT    ;
        float    gen_eta   ;
        float    gen_phi   ;
        float    gen_mass  ;
        float    gen_y     ;
        float    gen_decayLength3D ;
        float    gen_decayLength2D ;
        float    gen_angle3D ;
        float    gen_angle2D ;
        float    gen_pTD1  ;
        float    gen_etaD1 ;
        float    gen_phiD1 ;
        float    gen_massD1 ;
        float    gen_yD1   ;
        float    gen_chargeD1 ;
        float    gen_pdgIdD1 ;
        float    gen_pTD2  ;
        float    gen_etaD2 ;
        float    gen_phiD2 ;
        float    gen_massD2 ;
        float    gen_yD2   ;
        float    gen_chargeD2 ;
        float    gen_pdgIdD2 ;

            simpleDMCGenevt* getEventHandle(){ return this;}

            template <typename T>
            void setTree(T* t){
        		t->SetBranchAddress("pT_gen", &pT_gen)    ;
        		t->SetBranchAddress("eta_gen", &eta_gen)   ;
        		t->SetBranchAddress("y_gen", &y_gen)     ;
        		t->SetBranchAddress("status_gen", &status_gen) ;
        		t->SetBranchAddress("MotherID_gen", &MotherID_gen) ;
        		t->SetBranchAddress("MotherPt_gen", &MotherPt_gen) ;
        		t->SetBranchAddress("MotherEta_gen", &MotherEta_gen) ;
        		t->SetBranchAddress("MotherPhi_gen", &MotherPhi_gen) ;
        		t->SetBranchAddress("MotherY_gen", &MotherY_gen) ;
        		t->SetBranchAddress("MotherStatus_gen", &MotherStatus_gen) ;
        		t->SetBranchAddress("DauID1_gen", &DauID1_gen) ;
        		t->SetBranchAddress("DauID2_gen", &DauID2_gen) ;
        		t->SetBranchAddress("DauID3_gen", &DauID3_gen) ;
        		t->SetBranchAddress("gen_ancestorFlavor", &gen_ancestorFlavor) ;
        		t->SetBranchAddress("gen_ancestorId", &gen_ancestorId) ;
        		t->SetBranchAddress("gen_PVx_", &gen_PVx_)  ;
        		t->SetBranchAddress("gen_PVy", &gen_PVy)   ;
        		t->SetBranchAddress("gen_PVz", &gen_PVz)   ;
        		t->SetBranchAddress("gen_pT", &gen_pT)    ;
        		t->SetBranchAddress("gen_eta", &gen_eta)   ;
        		t->SetBranchAddress("gen_phi", &gen_phi)   ;
        		t->SetBranchAddress("gen_mass", &gen_mass)  ;
        		t->SetBranchAddress("gen_y", &gen_y)     ;
        		t->SetBranchAddress("gen_decayLength3D", &gen_decayLength3D) ;
        		t->SetBranchAddress("gen_decayLength2D", &gen_decayLength2D) ;
        		t->SetBranchAddress("gen_angle3D", &gen_angle3D) ;
        		t->SetBranchAddress("gen_angle2D", &gen_angle2D) ;
        		t->SetBranchAddress("gen_pTD1", &gen_pTD1)  ;
        		t->SetBranchAddress("gen_etaD1", &gen_etaD1) ;
        		t->SetBranchAddress("gen_phiD1", &gen_phiD1) ;
        		t->SetBranchAddress("gen_massD1", &gen_massD1) ;
        		t->SetBranchAddress("gen_yD1", &gen_yD1)   ;
        		t->SetBranchAddress("gen_chargeD1", &gen_chargeD1) ;
        		t->SetBranchAddress("gen_pdgIdD1", &gen_pdgIdD1) ;
        		t->SetBranchAddress("gen_pTD2", &gen_pTD2)  ;
        		t->SetBranchAddress("gen_etaD2", &gen_etaD2) ;
        		t->SetBranchAddress("gen_phiD2", &gen_phiD2) ;
        		t->SetBranchAddress("gen_massD2", &gen_massD2) ;
        		t->SetBranchAddress("gen_yD2", &gen_yD2)   ;
        		t->SetBranchAddress("gen_chargeD2", &gen_chargeD2) ;
        		t->SetBranchAddress("gen_pdgIdD2", &gen_pdgIdD2) ;
            };
            void setOutputTree(TTree* t){
        		t->Branch("pT_gen", &pT_gen)    ;
        		t->Branch("eta_gen", &eta_gen)   ;
        		t->Branch("y_gen", &y_gen)     ;
        		t->Branch("status_gen", &status_gen) ;
        		t->Branch("MotherID_gen", &MotherID_gen) ;
        		t->Branch("MotherPt_gen", &MotherPt_gen) ;
        		t->Branch("MotherEta_gen", &MotherEta_gen) ;
        		t->Branch("MotherPhi_gen", &MotherPhi_gen) ;
        		t->Branch("MotherY_gen", &MotherY_gen) ;
        		t->Branch("MotherStatus_gen", &MotherStatus_gen) ;
        		t->Branch("DauID1_gen", &DauID1_gen) ;
        		t->Branch("DauID2_gen", &DauID2_gen) ;
        		t->Branch("DauID3_gen", &DauID3_gen) ;
        		t->Branch("gen_ancestorFlavor", &gen_ancestorFlavor) ;
        		t->Branch("gen_ancestorId", &gen_ancestorId) ;
        		t->Branch("gen_PVx_", &gen_PVx_)  ;
        		t->Branch("gen_PVy", &gen_PVy)   ;
        		t->Branch("gen_PVz", &gen_PVz)   ;
        		t->Branch("gen_pT", &gen_pT)    ;
        		t->Branch("gen_eta", &gen_eta)   ;
        		t->Branch("gen_phi", &gen_phi)   ;
        		t->Branch("gen_mass", &gen_mass)  ;
        		t->Branch("gen_y", &gen_y)     ;
        		t->Branch("gen_decayLength3D", &gen_decayLength3D) ;
        		t->Branch("gen_decayLength2D", &gen_decayLength2D) ;
        		t->Branch("gen_angle3D", &gen_angle3D) ;
        		t->Branch("gen_angle2D", &gen_angle2D) ;
        		t->Branch("gen_pTD1", &gen_pTD1)  ;
        		t->Branch("gen_etaD1", &gen_etaD1) ;
        		t->Branch("gen_phiD1", &gen_phiD1) ;
        		t->Branch("gen_massD1", &gen_massD1) ;
        		t->Branch("gen_yD1", &gen_yD1)   ;
        		t->Branch("gen_chargeD1", &gen_chargeD1) ;
        		t->Branch("gen_pdgIdD1", &gen_pdgIdD1) ;
        		t->Branch("gen_pTD2", &gen_pTD2)  ;
        		t->Branch("gen_etaD2", &gen_etaD2) ;
        		t->Branch("gen_phiD2", &gen_phiD2) ;
        		t->Branch("gen_massD2", &gen_massD2) ;
        		t->Branch("gen_yD2", &gen_yD2)   ;
        		t->Branch("gen_chargeD2", &gen_chargeD2) ;
        		t->Branch("gen_pdgIdD2", &gen_pdgIdD2) ;
            };
    };
};

#endif
